2015-05-21-22.37.47: src/lib/x-kit/widget/edit/lineeditor.pkg:  default_redraw_fn:  First-cut cursor display logic working.
2015-05-21-17.39.08: src/lib/std/src/string.api: Added   repeat: (String, Int) -> String;   where   repeat ("abc", 2)  -->  "abcabc".
2015-05-20-21.30.12: src/lib/x-kit/widget/edit/textpane.pkg: Implemented  refresh_lineeditors  to display textbuffer contents.
2015-05-19-22.10.21: src/lib/std/src/string.api:  Added   lines: String -> List(String);
2015-05-19-21.03.38: src/lib/x-kit/widget/gui/guiboss-types.pkg: As debugging aids, added  doc: String  fields to Gp_Mark<prime>, Rg_Mark, Xi_Mark.
2015-05-19-18.44.25: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg:  compute_size_preferences_for_rg_widget_tree/gt::RG_FRAME:  Fixed:  Was not using  frame_indent_hint  when computing size preference.
2015-05-19-15.26.52: src/lib/x-kit/widget/widget-unit-test.pkg: Wrap texteditor in a proper popupframe.
2015-05-19-15.19.10: widgets: Provide sensible default values for wi::DOC string.
2015-05-19-14.55.31: src/lib/x-kit/widget/gui/guiboss-types.pkg: Dropped  doc: String  field from  Gp_Widget, Rg_Widget  because it was confusingly redundant with the  Guiboss_To_Gadget.doc: String  field.  Kept it on  Xi_Widget  because we do not include a guiboss_to_widget field in that record.
2015-05-19-11.59.21: src/lib/x-kit/widget/edit/texteditor.pkg: Add DOC strings to widgets.
2015-05-18-23.51.19: widgets:  Option:  Add  DOC String  case.
2015-05-18-23.17.06: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Guiboss_To_Widget, Guiboss_To_Gadget:  Add  doc: String   field.
2015-05-18-23.10.05: src/lib/x-kit/widget/xkit/theme/widget/default/look/object-imp.pkg: Add  doc: String  stuff.
2015-05-18-22.58.02: src/lib/x-kit/widget/xkit/theme/widget/default/look/sprite-imp.pkg: Add  doc: String  stuff.
2015-05-18-22.48.14: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Key_Event_Fn_Arg:  Add  doc: String  arg.
2015-05-18-22.17.15: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Mouse_Transit_Fn_Arg:  Add  doc: String  arg.
2015-05-18-21.47.35: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Mouse_Drag_Fn_Arg:  Add  doc: String  arg.
2015-05-18-21.28.02: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Mouse_Click_Fn_Arg:  Add  doc: String  arg.
2015-05-18-21.04.28: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Redraw_Request_Fn_Arg:  Add  doc: String  arg.
2015-05-18-15.57.17: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Initialize_Gadget_Fn_Arg:  Add  doc: String  arg.
2015-05-18-15.47.56: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg: Startup_Fn: Add  doc: String  arg.
2015-05-18-15.38.22: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg: Widget_Option: Add  DOC String  case.
2015-05-18-15.23.19: src/lib/x-kit/widget/gui/guiboss-types.pkg: Xi_Widget:  Add  doc: String  field.
2015-05-18-13.27.24: src/lib/x-kit/widget/gui/guiboss-types.pkg: Rg_Widget:  Add  doc: String  field.
2015-05-18-13.09.59: src/lib/x-kit/widget/gui/guiboss-types.pkg: Gp_Widget:  Add  doc: String  field.
2015-05-17-19.34.03: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg: Fixed: assign_sites_to_all_widgets/gt::RG_ROW,gt::RG_COL:  Was using float::round to allocate pixels to widgets, but this meant a RG_COL of 68 lineeditor.pkg widgets could easily wind up extending significantly beyond the assigned site for the RG_COL (resulting the last widget(s) getting clipped during rendering).
2015-05-16-19.12.08: src/lib/x-kit/widget/edit/lineeditor.pkg:  fun with():  Change pixels_high_min default from 16 to 0, curing textpane.pkg of an infinite-resize loop.
2015-05-16-18.22.54: src/lib/x-kit/widget/gui/guiboss-types.pkg:  FIXED:  pprint_subwindow_info & pprint_guipane<prime>: do_rg_widget/RG_MARK  had   rg_widget  where it needed  widget,  resulting in an infinite loop.
2015-05-10-12.48.54: src/lib/x-kit/widget/edit/textpane.pkg: maybe_change_number_of_lineeditors() now gets the information it needs, next it needs to do something with it.
2015-05-09-22.40.31: src/lib/x-kit/widget/edit/editboss-imp.pkg: Fill in various lacunae.
2015-05-09-11.39.27: src/lib/x-kit/widget/edit/: Converted  lineeditor.pkg statusline.pkg minibuffer.pkg textpane.pkg textedit.pkg  from  Gadget_To_Guiboss.gadget_to_editboss  hack to more general  Gadget_To_Guiboss.find_global  mechanism.
2015-05-09-10.23.25: src/lib/x-kit/widget/gui/guiboss-types.pkg: Guiboss_State: Add globals:Globals field.  Gadget_To_Guiboss: Add note_global, find_global, drop_global fields.
2015-05-09-09.52.01: src/lib/core/init/pervasive.pkg: Added  doc:String  field to Crypt to maybe help a bit with its inherent lack of typesafety.
2015-05-09-04.12.01: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Changed type of Gadget_To_Guiboss.gadget_to_editboss from Exception to Crypt.
2015-05-09-03.46.10: src/lib/core/init/pervasive.pkg: Added type Crypt.
2015-05-08-11.32.04: src/lib/src/red-black-map-with-implicit-keys-g.pkg: Fixed clone-and-mutate oversight: last_keyval_else_null was still named first_keyval_else_null. Caught by unit test.
2015-05-07-15.59.51: src/lib/x-kit/widget/edit/*: Commenting.
2015-05-07-15.31.21: src/lib/x-kit/widget/edit/:  For clarity and consistency moved  exception GADGET_TO_EDITBOSS + Gadget_To_Editboss  from  textpane-to-textbuffer.pkg  into new file  src/lib/x-kit/widget/edit/gadget-to-editboss.pkg.
2015-05-07-14.55.59: src/lib/src/map.api:  Add  last_val_else_null, last_keyval_else_null  parallel to existing  first_val_else_null, first_keyval_else_null.
2015-05-06-23.18.55: src/lib/x-kit/widget/edit/: Rename linenumber -> paneline for clarity.
2015-05-06-22.36.22: src/lib/x-kit/widget/edit/: Have lineeditor.pkg and statusline.pkg forward keystrokes to textpane.pkg and minibuffer.pkg to textedit.pkg.
2015-05-06-14.02.47: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp-types.pkg:  Add *_Arg types for the *_Fn types.   src/lib/x-kit/widget/edit/: Establish textpane-types.pkg.   src/lib/x-kit/widget/edit/lineeditor.pkg: Pass key events through to textpane.pkg.
2015-05-05-23.29.38: src/lib/x-kit/widget/gui/guiboss-types.pkg: Gadget_To_Guiboss:  Changed  gadget_to_editboss  type from  texteditor_to_textbuffer::GADGET_TO_EDITBOSS  to  Exception, because guiboss should not know about editboss types (and allowing that introduces bad package dependency cycles).
2015-05-05-13.24.45: src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Remove a couple of overlooked debug statements.  src/lib/x-kit/widget/edit/texteditor.pkg: Create textedit.pkg + textpane.pkg instances in synthesized Guiplan.
2015-05-05-13.02.35: lineeditor.pkg, statusline.pkg, minibuffer.pkg, textpane.pkg, textedit.pkg: Cache supplied interfaces in *__globals in the note__* fns.
2015-05-04-23.17.37: src/lib/x-kit/widget/edit/textedit.pkg: startup_fn: Call widget_to_guiboss.g.gadget_to_editboss.note_textedit().
2015-05-04-23.02.57: src/lib/x-kit/widget/edit/textpane.pkg: startup_fn: Call widget_to_guiboss.g.gadget_to_editboss.note_textpane().
2015-05-04-22.38.35: src/lib/x-kit/widget/edit/minibuffer.pkg: startup_fn: Call widget_to_guiboss.g.gadget_to_editboss.note_minibuffer().
2015-05-04-22.13.21: src/lib/x-kit/widget/edit/statusline.pkg: startup_fn: Call widget_to_guiboss.g.gadget_to_editboss.note_statusline().
2015-05-04-21.56.20: src/lib/x-kit/widget/edit/lineeditor.pkg: startup_fn: Call widget_to_guiboss.g.gadget_to_editboss.note_lineeditor().
2015-05-04-12.02.34: src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.pkg:  Change  hostthreads_to_start = max(1,hth::get_cpu_core_count()-1);  to  hostthreads_to_start = 8;  so  xclient-unit-test.pkg will not hang any more on boxes with less than three cores. See Note[1] for details.
2015-05-01-00.51.53: src/lib/x-kit/widget/edit/editboss-imp.pkg:  Add   textedits_by_id: Ref(im::Map(Textedit_Info))   field to  Editboss_State,  also add  Textedit_Info  and  Textpane_Info  types.  Implement logic to wire up texteditor complexes.
2015-04-30-13.44.48: src/lib/x-kit/widget/edit/: Established the interfaces for mutual communication between textedit, textpane, minibuffer, statusline and lineeditor instances: editboss-to-guiboss.pkg, editboss-to-textbuffer.pkg, lineeditor-to-textpane.pkg, minibuffer-to-textedit.pkg, statusline-to-textpane.pkg, textbuffer-to-editboss.pkg, texteditor-to-textbuffer.pkg, textedit-to-minibuffer.pkg, textedit-to-textpane.pkg, textpane-to-lineeditor.pkg, textpane-to-statusline.pkg, textpane-to-textedit.pkg.
2015-04-28-22.23.57: src/lib/x-kit/widget/edit/texteditor.pkg: fun with: Create a realistic Guiplan instead of hardwiring a simple redraw fn.
2015-04-28-21.45.52: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg: fun high_min_for_widget/RG_WIDGET: Bugfix: had pixels_wide_min where pixels_high_min was needed.
2015-04-28-14.38.03: src/lib/x-kit/widget/edit/: Removed inherited frame-drawing support from statusline.pkg, minibuffer.pkg, lineeditor.pkg to simplify them: Can always wrap them in a gt::FRAME if a frame is really desired for some reason.
2015-04-28-00.24.10: src/lib/x-kit/widget/edit/: Established minibuffer.pkg
2015-04-28-00.06.22: src/lib/x-kit/widget/edit/: Established texteditor-frame.pkg, textpane-frame.pkg
2015-04-27-00.25.12: src/lib/x-kit/widget/leaf/frame.pkg: default_redraw_fn: Fiddling to handle a wider range of frame shapes sanely.
2015-04-26-21.26.44: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp.api: Added   frame_indent_hint: gt::Frame_Indent_Hint  to  Redraw_Request_Fn.
2015-04-26-12.26.03: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg:  assign_sites_to_all_widgets/gt::RG_FRAME:  Get frame dimensions via new guiboss_to_widget.get_frame_indent_hint () call instead of hardwiring them. (FINALLYmake rest ; sudo make install ; make check)
2015-04-26-11.45.24: src/lib/x-kit/widget/gui/guiboss-types.pkg: Add Frame_Indent_Hint patterned on existing Widget_Layout_Hint. src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp.api: Added frame-indent support patterned on existing widget-layout support.
2015-04-25-13.01.58: src/lib/x-kit/widget/widget-unit-test.pkg: Add a couple of gt::MARK nodes to exercise MARK support.
2015-04-25-12.32.08: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Light commenting.  Generally: Add MARK support in a few places I missed on the last checkin.
2015-04-25-00.30.36: src/lib/x-kit/widget/gui/guiboss-types.pkg: Added MARK nodes parallel to existing COL/ROW/GRID nodes to provide a reliable way of marking points in a Guiplan/Guipith tree.
2015-04-24-01.37.48: Change SITEWATCHER protocol(s) to also pass iuw::Id widget id to event consumer.
2015-04-23-21.42.11: Added an  id: iuw::Id  field to all App_To_Foo widget interfaces.
2015-04-23-21.00.03: Rename issue-unique-look-id.pkg -> issue-unique-widget-id.pkg because look imps are history.
2015-04-21-21.52.34: src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: guipiths_to_guipanes: Xi_Guiplan support now working (at least on widget-unit-tests.pkg sample case).
2015-04-19-22.48.54: src/lib/x-kit/widget/widget-unit-test.pkg: Added logic to exercise gt::XI_GUIPLAN.
2015-04-19-21.12.50: src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: Just got XI_GUIPLAN case coded. Untested.
2015-04-18-20.15.27: src/lib/x-kit/widget/gui/guiboss-imp.pkg: First-cut versions of get_guipiths() + install_updated_guipiths() now working, at least on the widget-unit-test.pkg test case for them.
2015-04-15-23.45.10: src/lib/x-kit/widget/gui/guiboss-types-junk.pkg: Small tweaks to topwindows prettyprint formatting.
2015-04-14-21.40.31: src/lib/x-kit/widget/gui/guiboss-types-junk.pkg: Added  pprint_topwindows()  to provide visiblity into running guis.
2015-04-11-14.01.34: Add ID option to widgets.
2015-04-08-23.01.00: src/lib/x-kit/widget/gui/guiboss-imp.pkg: get_guipiths/install_updated_guipiths is ready for initial testing.
2015-04-06-22.43.53: src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: Implemented  shut_down_dropped_imps().
2015-03-29-21.28.25: src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: guipith_to_guipane:  Wrote gather_stuff_from_running_guis which collects the background information needed to complete guipith_to_guipane.
2015-03-09-16.07.15: src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: guipith_to_guipane: Now have reasonable first-cut input validation in place, moving on to actual functionality.
2015-03-07-23.24.30: src/lib/x-kit/widget/gui/guiboss-types-junk.pkg: Extend guipith_map and guipith_apply to iterate over full gui tree rooted at me.topwindows instead of just a single guiplane.  This is support for widget mobility between guipanes and topwindows instead of just within a guiplane.
2015-03-04-20.28.40: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Extended Xi_* guipith typeset to include Xi_Topwindow_Info + Xi_Guipane.  src/lib/x-kit/widget/gui/translate-guipane-to-guipith.pkg: guipane_to_guipith:  Changed type to  gt::Guiboss_State -> im::Map(gt::Xi_Topwindow_Info),  the point being that by returning all active guipanes instead of just one, we can support moving widgets between guipanes instead of just around within one guipane.
2015-03-01-11.54.06: src/lib/x-kit/widget/gui/guiboss-types.pkg: Additional cleanup of no-longer-needed Paused_Gui support:  Removed saved_(object|widget|sprite)_state.
2015-02-28-18.36.33: Renamed widget and space imp  endstate_oneshot  fields to  shutdown_oneshot  because the state was only for Paused_Gui which is now defunct; also changed return value to Void for same reason.
2015-02-28-13.56.12: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc): Eliminated Paused_Gui types and support code.
2015-02-25-23.16.28: src/lib/x-kit/widget/gui/guiboss-imp.pkg (etc):  Preliminary work toward eliminating gt::Paused_Gui.
2015-02-24-20.32.58: src/lib/x-kit/widget/gui/guiboss-popup-junk.pkg:  refresh_topwindow_rectangle:  Fixed red-crud problem by calling  update_offscreen_parent_pixmaps_and_then_topwindow  only on intersection of from_box and guipane_site, instead of (erroneously) on entire from_box. Still have red crud when resizing a popup smaller, however.
2015-02-22-18.36.56: src/lib/x-kit/widget/theme/app-to-guishim-xspecific.pkg:  App_To_Guishim_Xspecific:  Added   list_fonts: { max: Int,  pattern: String } -> List(String)   field.
2015-02-22-10.12.54: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Dynamic resizing of popups is also working, with same caveat that a trail of red crud tends to be left behind.
2015-02-21-17.13.03: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Subwindow_Info:  Change  pixmap  from  g2p::Gadget_To_Rw_Pixmap -> Ref(g2p::Gadget_To_Rw_Pixmap)  to support dynamic resizing of popups.
2015-02-21-14.13.03: Dragging popups mostly Just Worked first try. (!)  There is an issue with leaving a trail of red crud, also observed when not dragging popups, apparently introduced while setting up the infrastructure for this.
2015-02-19-22.00.28: src/lib/x-kit/xclient/src/wire/value-to-wire-pith.pkg:  decode_list_extensions_reply:  Use correct buffer offset for string-count field in ListExtensions reply. Now works. :-)
2015-02-19-21.27.10: src/lib/x-kit/widget/theme/:  Renamed guiboss-to-guishim-xspecific.pkg -> app-to-guishim-xspecific.pkg;  App_To_Guishim_Xspecific:  Added   list_extensions: Void -> List(String).   src/lib/x-kit/widget/xkit/app/guishim-imp-for-x.pkg:  First-cut implementation of list_extensions().
2015-02-19-18.49.58: Established src/lib/x-kit/widget/theme/guiboss-to-guishim-xspecific.pkg.
2015-02-19-17.38.44: src/lib/x-kit/widget/leaf/popupframe.pkg:  default_mouse_drag_fn:  Complete first-cut code for dragging popup windows. (Untested.)
2015-02-18-21.48.34: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Factor position_subwindow_entirely_within_parent out of make_subwindow_info_for_popup.
2015-02-18-21.26.20: src/lib/x-kit/widget/gui: For clarity renamed  origin -> upperleft  various places.
2015-02-17-21.43.55: src/lib/x-kit/widget/leaf/popupframe.pkg:  Sketch in some preliminary code for  default_mouse_drag_fn.
2015-02-17-21.36.46: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Sketch in some preliminary code for  pass_guipane_offset + set_guipane_offset.
2015-02-17-21.11.08: src/lib/x-kit/widget/gui/guiboss-types.pkg: Gadget_To_Guiboss: Change  get_guipane_offset -> pass_guipane_offset  to eliminate one potential source of deadlock.
2015-02-17-20.31.45: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp.api (etc): Dropped   visible: Bool  field from the various redraw_widget_request calls.  This was early forward provisioning which wound up not getting used.
2015-02-17-20.13.36: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp.api (etc):  Pass  to: Replyqueue  to widget hook fns so they can make nonblocking calls to other imps.
2015-02-16-20.46.07: src/lib/x-kit/widget/gui/guiboss-popup-junk.pkg:  First-cut implementation of  refresh_topwindow_rectangle().  Untested.
2015-02-15-19.33.31: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Gadget_To_Guiboss:  Established  get_guipane_offset, set_guipane_offset  fields to allow gadgets to move around popup windows.
2015-02-15-18.46.14: src/lib/x-kit/widget/gui/guiboss-event-dispatch.pkg:  do_motion_notify: gt::DRAGGING:  Tweak to always generate DRAG events, whether or not mouse is still on gadget on which drag originated.  (Need this in popupframe.pkg to drag popups around. I think.)
2015-02-15-16.51.00: src/lib/x-kit/widget/leaf/popupframe.pkg: Add a default_mouse_drag_fn() and wire it up.
2015-02-15-14.39.06: src/lib/x-kit/widget/leaf/popupframe.pkg: Tweaked to call gadget_to_guiboss.kill_popup() when upper-right X clicked.
2015-02-15-13.32.30: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Gadget_To_Guiboss:  Add kill_popup() field.
2015-02-14-22.09.13: src/lib/x-kit/widget/leaf/popupframe.pkg: Fatten the upper-right X for better visibility.
2015-02-14-21.13.47: src/lib/x-kit/widget/leaf/popupframe.pkg:  First-cut implementation of default_redraw_fn.
2015-02-14-17.33.28: Clean out debug statements left over from previous.
2015-02-14-14.29.04: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Dynamic re-layout in response to widget_to_guiboss.note_widget_layout_hint() is now working.  Only hitch was that widget-unit-test.pkg was using maildrops instead of mailqueues to read site information, and (worse!) was using get_from_maildrop() instead of take_from_maildrop() to read them, so when arrowbutton.pkg notified sitewatchers of new site, maildrop threw a MAY_NOT_FILL_ALREADY_FULL_MAILDROP exception, which disappeared silently because microthread exception handling is essentially unimplemented.
2015-02-13-22.08.08: src/lib/x-kit/widget/xkit/theme/widget/default/widget-theme-imp.pkg: Add color_by_depth to visually separate popups from their parent guipanes, as an alternative to drop shadows (which are difficult to do with just the original X drawops).
2015-02-13-12.36.15: src/lib/x-kit/widget/leaf: Established popup-frame.pkg by cloning frame.pkg.
2015-02-13-11.02.05: src/lib/x-kit/widget/gui/guiboss-imp.pkg: A little preliminary groundwork toward supporting dynamic resizing of widgets in a running gui.
2015-02-12-23.24.13: src/lib/x-kit/widget/xkit/theme/widget/default/look/widget-imp.api: Add  widget_layout_hint: gt::Widget_Layout_Hint  field to Mouse_(Click|Drag|Transit)_Fn and Key_Event_Fn.
2015-02-11-22.43.57: src/lib/x-kit/widget/widget-unit-test.pkg: mouse_drag_and_popup_fn_*: Use previous to respond only to button1 clicks.
2015-02-11-22.02.50: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc):  Guiboss_To_Gadget:  note_mouse_drag_event:  Add   button: evt::Mousebutton  field to argument record.
2015-02-11-20.11.36: src/lib/x-kit/widget/gui/guiboss-types.pkg: Renamed Export_Gui -> Guipith for brevity and parallelism with Guiplan and Guipane.
2015-02-11-19.47.24: src/lib/x-kit/widget/gui/guiboss-types.pkg: Renamed Running_Gui -> Guipane for brevity and parallelism with Guiplan.
2015-02-11-19.24.09: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc): For brevity rename Gui_Plan -> Guiplan.
2015-02-11-18.38.13: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg:  Implement gather_widget_layout_hints().
2015-02-08-22.30.50: src/lib/x-kit/widget/leaf/*slider*pkg: Make these more selective about which mousedrags + mouseclicks they respond to. (No modifier keys.)
2015-02-08-22.14.01: src/lib/x-kit/widget/widget-unit-test.pkg: Make drag fns more selective about which buttons they respond to.
2015-02-08-21.30.00: src/lib/x-kit/widget/leaf/:  *button*.pkg:  Changed default_mouse_click_fn() to be sensitive only to mouse button1 with no modifier keys down.  (It was responding to clicks of any button with any modifier. Sloppy.)
2015-02-08-19.03.25: Moved more stuff from guiboss-imp.pkg into support libraries. guiboss-imp.pkg now under 2000 loc, looks reasonable again.
2015-02-08-00.51.51: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg: For purity, changed lay_out_widgets() to construct and return an explicit result map instead of implicitly side-effecting *me.gadget_imps.
2015-02-07-18.49.27: src/lib/x-kit/widget/gui/guiboss-widget-layout.pkg:  Established this package and moved widget-layout code here from widgetspace-imp.pkg because the doing layout in a separate imp is more of a nuisance than a help at this point.
2015-02-07-15.26.55: src/lib/x-kit/widget/gui/guiboss-types-junk.pkg:  Established this package and moved all code here from guiboss-types.pkg because the latter was growing unwieldy.
2015-02-07-14.52.17: src/lib/x-kit/widget/gui/: For consistency and clarity renamed guiboss-export-import.pkg -> translate-runninggui-to-exportgui.pkg.
2015-02-07-14.38.55: src/lib/x-kit/widget/gui/translate-guiplan-to-runninggui.pkg:  Established this package and moved Gui_Plan-translation logic here from guiboss-imp.pkg because the latter was growing unwieldy.
2015-02-07-13.01.25: src/lib/x-kit/widget/gui/guiboss-event-dispatch.pkg:  Established this package and moved event-dispatch logic here from guiboss-imp.pkg because the latter was growing unwieldy.
2015-02-06-19.51.27: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Move   gadget_imps, spritespace_imps, objectspace_imps, widgetspace_imps, widget_layout_hints  from Topwindow_Info to Guiboss_State because I now think they need to be global across all topwindows, not just per-topwindow.
2015-02-06-18.44.07: src/lib/x-kit/widget/gui/guiboss-types.pkg: Collapse enumerated pixels_(high|wide)_(cut|max) quadruple-field sets into single widget_layout_hint fields in various records.
2015-02-05-21.06.16: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Add  running_guis_apply()  for easy iteration over all Running_Gui instances for a given topwindow.
2015-02-05-20.33.54: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Add a  gui_plan_map  to go with  gui_plan_apply.
2015-02-05-20.01.10: src/lib/x-kit/widget/gui/guiboss-types.pkg: gui_plan_apply:  Implement missing OBJECTSPACE and SPRITESPACE cases.
2015-02-04-23.23.14: Removed end_gun support from widget_imp because it makes no sense with widgets wandering between running_gui instances. Removed end_gun support from sprite_imp and object_imp for consistency.
2015-02-04-21.51.21: src/lib/x-kit/widget/gui/guiboss-types.pkg: Running_Gui: Similarly, drop fields gadget_imps_for_gui, spritespace_imps_for_gui, objectspace_imps_for_gui, widgetspace_imps_for_gui.
2015-02-04-21.10.34: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Subwindow_Info:  Drop pixmaps field, as part of eliminating per-running-gui indices to facilitate widget migration between running guis.
2015-02-04-01.09.47: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  First-cut implementation of free__running_gui__resources().   src/lib/x-kit/widget/gui/guiboss-types.pkg: Much tidying.
2015-02-03-13.42.14: src/lib/x-kit/widget/gui/guiboss-types.pkg: Gadget_To_Guiboss: redraw_gadget:  Add   site: g2d::Box   fn arg.  This is intended to allow guiboss_imp to detect and discard stale redraw_gadget() messages.
2015-02-01-20.40.40: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Simplified Rg_Tabport a bit.  That concludes the great multiple-scrollables-per-scrollport/multile-tabbables-per-tabport blind alley: Too much added complexity for too little added functionality.
2015-02-01-15.44.03: src/lib/x-kit/widget/gui/guiboss-types.pkg: More simplification of Rg_Scrollport.
2015-02-01-11.47.10: Cleanup after previous.
2015-02-01-00.28.11: src/lib/x-kit/widget/gui/guiboss-types.pkg: Moved Widget_To_Guiboss here (used to have its own package), included Gadget_To_Guiboss in it as a subport.
2015-01-31-20.39.43: src/lib/x-kit/widget/gui/guiboss-types.pkg: Added  die: Void -> Void  field to Guiboss_To_Objectspace, Guiboss_To_Spritespace, Guiboss_To_Widgetspace. (Same functionality as endgun, but retail instead of wholesale.)  src/lib/x-kit/widget/space/widget/: Renamed widget-to-widgetspace.pkg -> widget-to-guiboss.pkg because with widgets wandering freely between widgespaces it is better for widgets to talk to guiboss-imp than widgetspace-imp.
2015-01-27-20.32.07: src/lib/x-kit/widget/space/widget/widgetspace-to-widget.pkg:  Widgetspace_To_Widget:  Replace layout hint constants pixel_(high|wide)_(min|cut) with a function returning layout hints, as support for more dynamic guis.
2015-01-26-23.04.25: src/lib/x-kit/widget/gui/guiboss-types.pkg: More map and apply fns over gui-plans, paused-guis, running-guis and exported-guis.
2015-01-25-22.17.58: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Added map_export_gui().
2015-01-25-00.05.56: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc):  Clean up formatting disturbed by preceding passes.
2015-01-24-23.53.44: src/lib/x-kit/widget/gui/guiboss-types.pkg: More minor fiddling with scrollport/tabport stuff.
2015-01-24-22.41.07: src/lib/x-kit/widget/gui/guiboss-types.pkg: Tidying.
2015-01-24-19.38.12: src/lib/x-kit/widget/gui/guiboss-types.pkg: More type rationalization: Replaced Tabview with Viewable_Data.
2015-01-24-00.51.12: src/lib/x-kit/widget/gui/guiboss-types.pkg: Tightened up the typing by changing various fields from Subwindow_Or_Viewport_Info to either Subwindow_Data or Viewport_Data. This improved typesafety and allowed removing a number of ugly runtime checks from guiboss-imp.pkg.
2015-01-22-20.30.08: src/lib/x-kit/widget/gui/guiboss-export-import.pkg: First-cut implementation of running_gui__to__export_gui().
2015-01-22-15.00.10: src/lib/x-kit/widget/gui/guiboss-export-import.pkg:  Overview/motivation comments.   src/lib/x-kit/widget/gui/guiboss-types.pkg:  Gadget_To_Guiboss:  get_exported_running_gui, morph_running_gui.
2015-01-21-19.10.16: src/lib/x-kit/widget/gui/: Establish guiboss-export-import.pkg, guiboss-export-import.api.
2015-01-20-22.33.41: src/lib/x-kit/widget/gui/guiboss-types.pkg: First-cut Xi_Widget etc types (support for export/import of Running_Gui).
2015-01-20-15.56.32: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Factored   pg_widget__to__rg_widget out of paused_gui__to__running_gui  and   gp_widget__to__pg_widget out of start_gui<prime>, as groundwork for making running guis more dynamic.
2015-01-18-21.33.04: Minor tidying.
2015-01-17-18.55.50: src/lib/x-kit/widget/gui/guiboss-types.pkg: Add (|PG_|RG_)_EDITABLE_(ROW|COL).
2015-01-17-15.42.15: src/lib/x-kit/widget/gui/guiboss-types.pkg: Guiboss_To_Gadget: Added die(), to allow killing individual gadgets the way end_gun' kills an entire gui.
2015-01-14-23.38.52: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  find_appropriate_gadget_info:  search_topwindow_pixmaps_in_descending_stacking_order: BUGFIX: Was failing to properly transform  topwindow_pixmap.site into coordinate system of event_point.
2015-01-13-23.53.50: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc):  Gadget_To_Guiboss:  Add   make_popup: Make_Popup_Fn.  Strip out all the old crud used to propagate make_popup.
2015-01-13-21.07.27: src/lib/x-kit/widget/edit/: Establish lineeditor.pkg + statusline.pkg by clone-and-mutate of textentry.pkg
2015-01-12-22.45.55: src/lib/x-kit/widget/edit/texteditor.pkg:  with:  Add a mandatory  buffername: String  arg.
2015-01-12-22.32.26: src/lib/x-kit/widget/edit/editboss-imp.pkg: Track extant textbuffers by name and id.
2015-01-12-00.08.54: src/lib/x-kit/widget/gui/guiboss-types.pkg: Gadget_To_Guiboss: Add  gadget_to_editboss: Gadget_To_Editboss  field.   src/lib/x-kit/widget/edit/texteditor-to-textbuffer.pkg: Guiboss_To_Editboss:  Add  get_or_make_textbuffer: Textbuffer_Arg -> Texteditor_To_Textbuffer.
2015-01-11-14.34.03: Renamed state_watcher -> statewatcher etc.
2015-01-11-14.25.07: src/lib/x-kit/widget/edit/textbuffer-imp.pkg: More fleshing out.
2015-01-10-11.36.58: src/lib/x-kit/widget/theme/: Renamed guiboss-to-windowsystem.pkg to guiboss-to-guishim.pkg.  Et cetera.
2015-01-10-00.20.33: Fleshing out src/lib/x-kit/widget/edit/textbuffer-imp.pkg.
2015-01-07-23.07.14: src/lib/x-kit/widget/edit/: Cleaning and commenting.
2015-01-07-22.32.59: src/lib/x-kit/widget/edit/: Established textbuffer-imp.api, textbuffer-imp.pkg, editboss-to-textbuffer.pkg, textbuffer-to-editboss.pkg.
2015-01-07-21.59.02: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  startup:  Add logic to set up editboss_imp as part of guiboss_imp startup.
2015-01-07-21.44.11: src/lib/x-kit/widget/edit/editboss-imp.pkg: Chopped out all the irrelevant guiboss code, leaving just the imp skeleton.
2015-01-07-21.26.34: Establish src/lib/x-kit/widget/edit/editboss-to-guiboss.pkg.
2015-01-07-21.16.53: Establish   src/lib/x-kit/widget/edit/guiboss-to-editboss.pkg.
2015-01-07-20.56.25: Established  src/lib/x-kit/widget/edit/editboss-imp.pkg  by clone-and-mutate of   src/lib/x-kit/widget/gui/guiboss-types.pkg.
2015-01-07-20.46.22: src/lib/x-kit/widget/edit/: Established this directory to hold emacs-flavored edit stuff.  Move text-editor.api + text-editor.pkg over from ../leaf.  Established editboss-imp.pkg by clone-and-mutate of guiboss-imp.pkg.
2015-01-05-22.14.02: src/lib/x-kit/widget/leaf/text-entry.pkg:  Blinking cursor, driven by new gadget_to_guiboss.wake_me() functionality.
2015-01-05-19.51.36: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Gadget_Info:  Add  at_frame_n  and  every_n_frames  fields.
2015-01-05-18.55.48: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc):  Run wiring to support gadget_to_guiboss.wake_me and guiboss_to_gadget.wakeup.
2015-01-05-18.10.55: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Gadget_Mode:  Drop   mousebutton_is_down  field, which does not belong and has never proved useful.
2015-01-04-22.14.46: src/lib/x-kit/widget/leaf/:  Moved Font_Weight from concrete widgets into src/lib/x-kit/widget/theme/widget/widget-theme.pkg, since there is no obvious need to specialize it per-widget.
2015-01-04-21.17.53: src/lib/x-kit/widget/leaf/:  Rename font_type -> font_weight for consistency with standard X font nomenclature.
2015-01-04-20.48.24: src/lib/x-kit/widget/widget-unit-test.pkg:  Added texteditor popup.
2015-01-04-19.32.58: src/lib/x-kit/widget/leaf/:  Tidying.
2015-01-04-12.29.24: src/lib/x-kit/widget/leaf/:  Established text-editor.pkg by clone-and-mutate of text-entry.pkg.
2015-01-04-12.18.20: src/lib/x-kit/widget/leaf/text-entry.pkg: Horizontal scrolling when full, also better clipping and bold font by default.
2015-01-03-19.42.11: src/lib/x-kit/widget/leaf/*: Commenting + tidying.
2015-01-03-19.00.11: src/lib/x-kit/widget/leaf/*: Pervasively distributed <<do>> fn and <<end_gun>> as support for subthreads in concrete widgets.
2015-01-02-23.10.57: src/lib/x-kit/widget/leaf/text-entry.pkg: Operational at first-cut level.
2015-01-02-22.02.23: src/lib/std/src/char.api:  Added constants ctrl_a ... ctrl_z, plus nul.
2015-01-02-21.15.52: src/lib/x-kit/widget/leaf/:  Key_Event_Fn_Arg: Added char field holding string contents when string::length string == 1 (else NUL).
2015-01-02-19.48.45: src/lib/x-kit/xclient/src/window/keysym-to-ascii.pkg + keymap-ximp.pkg: Tweaked so that releasing KeyCap would not crash us.
2015-01-02-17.04.50: src/lib/x-kit/xclient/src/window/keysym-to-ascii.pkg:  translate_keysym_to_ascii:  Changed to return the empty string (vs throwing an exception) when no simple ascii equivalent is available, because throwing exceptions is a great way to crash concurrent programs. Added strings <F1> ... <F35> etc etc.
2015-01-01-13.47.55: src/lib/x-kit/widget/leaf/: Established text-entry.pkg + .api by cloning button.pkg + .api.
2015-01-01-09.59.48: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Renamed DRAW_TEXT -> PUT_TEXT for brevity and clarity.
2014-12-31-00.40.37: src/lib/x-kit/widget/leaf/*slider*:  Added Option COVERAGE plus get_coverage() and get_coverage_to() calls in support of using sliders as scrollbars.
2014-12-30-21.34.27: src/lib/x-kit/widget/leaf/*slider*:  Added support for SHOW_VALUE Option.
2014-12-30-19.45.07: src/lib/x-kit/widget/leaf/:  *float-slider.pkg: Added support for mousewheel scrolling.
2014-12-30-17.50.53: src/lib/x-kit/widget/leaf/:  *int-slider.pkg: Added support for mousewheel scrolling.
2014-12-30-14.19.09: src/lib/x-kit/widget/leaf/: Vertical sliders look usable now.
2014-12-30-12.06.54: src/lib/x-kit/widget/leaf/: Created vertical-(int|float)-slider.pkg via clone-and-mutate of horizontal-(int|float)-slider.pkg.
2014-12-30-10.02.26: src/lib/x-kit/widget/leaf/horizontal-int-slider.pkg, horizontal-float-slider.pkg: Changed cursor outline from color (0.0,0.0,0.0) to (0.9,0.9,0.9) to improve readability of overlying black text.
2014-12-29-22.23.36: src/lib/x-kit/widget/leaf/horizontal-float-slider.pkg: Seems usable.
2014-12-29-21.34.45: src/lib/x-kit/widget/leaf/horizontal-int-slider.pkg: Looks usable.
2014-12-28-23.00.56: src/lib/x-kit/widget/space/widget/widgetspace-imp.pkg:  Clean out debug   nb {. ...; };   stuff.  Watch  The Imitation Game.
2014-12-28-18.18.54: src/lib/x-kit/widget/space/widget/widgetspace-imp.pkg: assign_sites_to_all_widgets: gt::RG_GRID: Fixed: Had uses of total_high_cut vs total_wide_cut interchanged, leading to strange results on nonsquare grids.
2014-12-28-11.20.47: src/lib/x-kit/widget/leaf/*.pkg: Minor tidying.
2014-12-28-11.10.53: src/lib/x-kit/widget/leaf/*.pkg:  Moved pick_text_to_use() functionality from   default_redraw_fn   to   redraw_request_fn_wrapper   to simplify writing redraw_fns.
2014-12-28-09.50.31: src/lib/x-kit/widget/xkit/theme/widget/default/widget-theme-imp.pkg: Renamed   *_darkening -> *_blackening   and   *_lightening -> *_whitening   for accuracy, and because we may at some point want the former names for HSV-based color ops.
2014-12-28-01.31.18: src/lib/x-kit/widget/leaf/: Per-widget overrides of theme-default body color.
2014-12-27-23.32.35: src/lib/x-kit/widget/leaf/leaf/*.pkg: Option:  Added BODY_COLOR, BODY_COLOR_WITH_MOUSEFOCUS, BODY_COLOR_WHEN_ON, BODY_COLOR_WHEN_ON_WITH_MOUSEFOCUS.
2014-12-27-01.23.37: src/lib/x-kit/widget/leaf/: Roll-over highlighting for all widgets.
2014-12-26-14.33.33: Fixed: Forgot to send NULLs to popup watchers in our widget shutdown_fns.
2014-12-26-14.23.43: src/lib/x-kit/widget/leaf/: Changed all widget FOO_WATCHER protocols to take   Null_Or(Foo) -> Void  instead of   Foo -> Void  args because this allows cleanly signalling imp shutdown (port no longer valid) as well as startup (port now valid).
2014-12-26-11.12.45: src/lib/x-kit/widget/widget-unit-test.pkg: Established SLIDERS popup.
2014-12-25-10.08.27: src/lib/x-kit/widget/leaf/:  Established horizontal-int-slider.pkg by clone-and-mutate of diamondbutton.pkg.
2014-12-25-00.21.04: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Reworked on model of button.pkg code.
2014-12-24-23.15.08: src/lib/x-kit/widget/leaf/roundbutton.pkg: Reworked on model of button.pkg code.
2014-12-24-16.14.20: src/lib/x-kit/widget/leaf/: Renamed boxbutton.pkg -> button.pkg because it is clearly the workhorse button.   src/lib/x-kit/widget/leaf/diamondbutton.pkg: Reworked on model of button.pkg code.
2014-12-24-15.23.59: src/lib/x-kit/widget/leaf/checkbutton.pkg: Redid based on updated button.pkg code.
2014-12-24-08.58.27: src/lib/x-kit/widget/leaf/boxbutton.pkg: Option:  Added support for TEXT_AT_LEFT, TEXT_AT_RIGHT, TEXT_IN_CENTER.
2014-12-23-22.42.01: src/lib/x-kit/widget/leaf/boxbutton.pkg: App_To_Boxbutton:  Add (get|set)_button_(on|off|)_(text|image).
2014-12-23-21.59.56: src/lib/x-kit/widget/leaf/boxbutton.pkg:  Polishing and fine-tuning.
2014-12-23-09.40.18: src/lib/x-kit/widget/leaf/boxbutton.pkg: Forgot I had commented out the font. *blush*
2014-12-23-00.46.58: src/lib/x-kit/widget/xkit/theme/widget/default/widget-theme-imp.pkg: Fiddling with font support.  src/lib/x-kit/widget/leaf/boxbutton.pkg: Fiddling with support for different on/off state text labels.
2014-12-21-13.58.02: src/lib/x-kit/widget/leaf/boxbutton.pkg:  Option:  Add NO_BOX option.
2014-12-21-13.49.01: src/lib/x-kit/widget/leaf/boxbutton.pkg:  Option:  Add FONT_ROMAN, FONT_ITALIC, FONT_BOLD, FONT_SIZE options.
2014-12-21-13.34.03: src/lib/x-kit/widget/leaf/boxbutton.pkg:  Option:  Add IMAGE, ON_IMAGE, OFF_IMAGE, ON_TEXT, OFF_TEXT options.
2014-12-21-12.45.02: src/lib/x-kit/widget/leaf/blank.pkg: Dropped all the irrelevant button stuff inherited via clone-and-mutate.
2014-12-21-01.17.05: src/lib/x-kit/widget/theme/widget/widget-theme.pkg:  Add get_default_font_size, set_default_font_size.
2014-12-21-01.06.37: src/lib/x-kit/widget/xkit/theme/widget/default/widget-theme-imp.pkg:  First-cut implementations of the new font calls.
2014-12-20-23.53.40: src/lib/x-kit/widget/theme/widget/widget-theme.pkg: Establish font support fns (get|set)_(roman|italic|bold)_font(_spex)?.
2014-12-20-21.24.16: src/lib/x-kit/widget/leaf/: Got rid of labelbutton.pkg + textbutton.pkg -- I think we can fold that functionality into boxbutton.pkg.
2014-12-20-20.25.44: src/lib/x-kit/widget/leaf/checkbutton.pkg:  Updated default_redraw_request_fn, cribbing from src/lib/x-kit/widget/old/leaf/checkbutton-look.pkg.
2014-12-20-15.03.07: src/lib/x-kit/widget/leaf/roundbutton.pkg:  Updated default_redraw_request_fn, cribbing from src/lib/x-kit/widget/old/leaf/roundbutton-drawfn-and-sizefn.pkg.
2014-12-20-10.43.37: src/lib/x-kit/widget/leaf/diamondbutton.pkg:  Updated default_redraw_request_fn from src/lib/x-kit/widget/old/leaf/diamondbutton-drawfn-and-sizefn.pkg.
2014-12-20-10.32.36: src/lib/x-kit/widget/leaf/boxbutton.pkg: Updated default_redraw_request_fn per src/lib/x-kit/widget/old/leaf/boxbutton-drawfn-and-sizefn.pkg.
2014-12-19-23.43.04: src/lib/x-kit/widget/leaf/: Updated all other widgets on pattern of revised arrowbutton widget.
2014-12-18-21.46.05: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Reworked hook-fn interface to be essentially a superset of widget-imp.pkg -- same hook-fns except for adding button state to the input arg.
2014-12-18-00.06.36: src/lib/x-kit/widget/leaf/arrowbutton.api:  Option:  Added   (MOUSEBUTTON_FN Mousebutton_Fn).      arrowbutton.api: Added support for  MOUSEBUTTON_FN  option.  The fog seems to be lifting...
2014-12-17-22.20.05: src/lib/x-kit/widget/leaf/: Flatten appearance fn args.
2014-12-17-21.35.29: src/lib/x-kit/widget/leaf/: Eliminated <<last>> arg to appearance fns. I think thats was a bridge too far in trying to be helpful to client code.
2014-12-17-00.09.57: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Fiddling.
2014-12-15-00.28.55: Moved the cycle-through-all-reliefs checkout logic from arrowbutton.pkg to widget-unit-test.pkg, so arrowbuttons can become more production-oriented.
2014-12-14-13.31.49: src/lib/x-kit/widget/leaf/: Added relief get/set fns.
2014-12-14-12.26.05: src/lib/x-kit/widget/leaf/*: Rationalization.
2014-12-14-10.06.25: src/lib/x-kit/widget/leaf/leaf/*: Tidying.
2014-12-13-19.52.37: src/lib/x-kit/widget/leaf/: Established textbutton.api + textbutton.pkg.
2014-12-13-19.11.57: src/lib/x-kit/widget/leaf/: Established labelbutton.api + labelbutton.pkg.
2014-12-13-18.41.58: src/lib/x-kit/widget/leaf/: Established checkbutton.api + checkbutton.pkg.
2014-12-13-14.38.49: src/lib/x-kit/widget/leaf/*button*:  Tidying.
2014-12-12-22.22.32: src/lib/x-kit/widget/widget-unit-test.pkg: Add make_zoo_gui_plan() to showcase additional widgets, hook it up to relabelled ZOO button on base three-line gui plan.
2014-12-08-21.39.50: src/lib/x-kit/widget/gui/guiboss-types.pkg (etc): Cleaning + tidying.
2014-12-08-18.30.38: src/lib/x-kit/widget/gui/guiboss-types.pkg: Tidying.
2014-12-08-00.15.12: src/lib/x-kit/widget/gui/guiboss-types.pkg: Tidying.
2014-12-07-22.47.43: src/lib/x-kit/widget/space/widget/widgetspace-imp.pkg: gt::GRID support seems to be working now.  src/lib/x-kit/widget/leaf/arrowbutton.pkg: Tidying and tweaking.
2014-12-07-01.56.46: src/lib/x-kit/widget/space/widget/widgetspace-imp.pkg:  Finished sketching in code for gt::RG_GRID support.
2014-12-04-23.23.52: Same as previous, for objects and sprites.
2014-12-03-22.11.42: src/lib/x-kit/widget/gui/guiboss-types.pkg: Simplified ROW,COL,GRID to having just a list of widgets, instead of a list of (hint,widget) pairs:  In practice, I found I was handling this stuff by passing hints to the widgets, who then exported them via guiboss_to_gui interface.
2014-12-02-22.00.28: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  gui_plan__to__paused_gui:  do_widget_widget:  gt::GRID:  Regularize widget grid so that all rows are guaranteed to have same number of widgets.
2014-12-02-20.11.38: Renamed  packedspace -> widgetspace,  bouncespace -> spritespace,  canvasspace -> objectspace  (etc) because it is easier to remember that widgetspace goes with widgets than that packedspace goes with widgets.
2014-12-01-23.55.01: src/lib/x-kit/widget/gui/ guiboss-imp.pkg, guiboss-types.pkg:  Wrote the routine support code for GRID.  Still to be written: the GRID code in src/lib/x-kit/widget/space/packed/packedspace-imp.pkg, where the real work is.
2014-12-01-09.19.49: src/lib/prettyprint/big/src/standard-prettyprint-mill.api:  Renamed seq -> seqx, list -> listx for consistency with the convention established by tuple/tuplex.
2014-11-30-18.57.06: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Renamed   Sg_* -> Pg_*  and  SG_* -> PG_*   because <<stopped gui>> was long ago replaced by <<paused gui>> as the preferred nomenclature.
2014-11-30-18.38.22: src/lib/x-kit/widget/gui/guiboss-types.pkg: Introduced   Packed_Widget.GRID, Sg_Packed_Widget.SG_GRID, Rg_Packed_Widget.RG_FRAME and Grid.  Affected code augmented with stubs pending full implementation.
2014-11-30-17.26.39: src/lib/x-kit/widget/leaf/: Cloned   arrowbutton.api + arrowbutton.pkg   to establish   blank.api + blank.pkg   (support for guiboss-types.pkg GRID construct for grouping scrolled areas with scrollbars).
2014-11-30-17.02.51: src/lib/x-kit/widget/gui/ guiboss-imp.pkg, guiboss-types.pkg, src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  Gui_Plan Packed_Widget.FRAME functionality now working.  src/lib/x-kit/widget/widget-unit-test.pkg:  make_gui_plan:  Use gt::FRAME to improve visual esthetics.
2014-11-30-11.39.15: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Added in Packed_Widget.FRAME, Sg_Packed_Widget.SG_FRAME, Rg_Packed_Widget.RG_FRAME to support framing widget groups.
2014-11-30-09.19.15: src/lib/x-kit/widget/widget-unit-test.pkg, src/lib/x-kit/widget/leaf/:  *button.api, *button.pkg, frame.api, frame.pkg:  Renamed  arrowbutton::has [...]  ->  arrowbutton::with [...]   (etc) because it reads better and <<with>> is no longer a reserved word.
2014-11-29-14.41.24: src/lib/x-kit/widget/leaf/frame.pkg: Chopped out most of the irrelevant stuff inherited from arrowbutton.pkg.
2014-11-29-11.31.19: src/lib/x-kit/widget/leaf/: Cloned   arrowbutton.api + arrowbutton.pkg   to establish   frame.api + frame.pkg   (support for guiboss-types.pkg FRAME construct for drawing a frame around a subtree of widgets).
2014-11-29-11.08.26: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Tidying.
2014-11-28-20.06.57: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Implemented streamlined redraw protocol detailed in Note[3]:  Basically guiboss_imp sends a guiboss_to_gadget.redraw_gadget_request only in response to a gadget_to_guiboss.needs_redraw_gadget_request, except at GUI initialization and GUI re-layout.  Also cleared out more debug crud.
2014-11-28-17.46.49: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Commenting.
2014-11-28-13.44.58: src/lib/x-kit/widget/gui/guiboss-imp.pkg (etc):  In hopes of improved clarity:  Renamed:   before_first_frame -> initialize_gadget,   start_of_frame -> redraw_gadget_request,   update_gadget_appearance -> redraw_gadget,   gadget_may_have_visibly_changed -> needs_redraw_gadget_request.
2014-11-27-21.54.39: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Popups seem to be more or less working:  Stripped out a lot of accumulated debug crud.
2014-11-27-17.54.26: src/lib/x-kit/widget/widget-unit-test.pkg:  Tidying:  gui_plan, popup_plan and popup_plan2 are now all generated via calls to make_gui_plan() rather than the previous massive inline code duplication.
2014-11-27-11.57.47: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  To reduce the Mystery Factor, have kill_gui write No GUI running on the window when all GUIs have been stopped, rather than just clearing it to black.   src/lib/x-kit/widget/widget-unit-test.pkg: Establish make_gui_plan() as part of cleaning up and reducing code duplication.
2014-11-26-21.18.13: src/lib/x-kit/widget/widget-unit-test.pkg: More tidying.
2014-11-26-19.10.23: src/lib/x-kit/widget/widget-unit-test.pkg: Tidying.
2014-11-25-22.10.19: src/lib/std/2d/geometry2d.pkg:  package box:  Added area().  subtract_box_b_from_box_a: The quadsect logic was broken, switched over entirely to bisect logic, fixed it up a bit to work better.  Looks good for now.
2014-11-24-22.19.17: src/lib/x-kit/widget/gui/guiboss-imp.pkg: restart_gui: paused_gui__to__running_gui: do_packed_widget: gt::SG_SCROLLABLE_VIEW:  Track created Xserver-side gadget_to_rw_pixmap created here for proper recycling at kill-gui time.
2014-11-23-21.44.03: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  pause_gui and kill_gui now call remove_per_gui_imps_from_global_imp_indices_then_clear_per_gui_indices.
2014-11-23-21.02.41: src/lib/x-kit/widget/gui/guiboss-imp.pkg: paused_gui__to__running_gui();  Populate new per_gui_gadget_imps/per_gui_bounce_imps/per_gui_canvas_imps/per_gui_packed_imps maps.
2014-11-23-20.43.10: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Running_Gui:  Rename gadget_imps/bounce_imps/canvas_imps/packed_imps to per_gui_gadget_imps/per_gui_bounce_imps/per_gui_canvas_imps/per_gui_packed_imps to reduce confusion (and name collisions) with the Topwindow_Info gadget_imps/bounce_imps/canvas_imps/packed_imps fields.
2014-11-23-11.54.46: src/lib/x-kit/widget/gui/guiboss-types.pkg: Running_Gui: Add fields to track per-running-gui imps (so that we can remove them from the matching global indices at gui shutdown), viz:  gadget_imps: Gadget_Imps, bounce_imps: Bounce_Imps, canvas_imps: Canvas_Imps, packed_imps: Packed_Imps.
2014-11-23-10.39.22: src/lib/compiler/front/parser/lex/mythryl-token-table-g.pkg: Light commenting.
2014-11-23-10.05.25: src/lib/compiler/front/parser/yacc/mythryl.grammar, src/lib/compiler/front/parser/lex/mythryl-token-table-g.pkg:  Discovered that the reserved word "with" was in fact no longer used anywhere in the Mythryl grammar *blush*, so I removed it from the parser and lexer, returning it to the general pool of identifiers.
2014-11-23-09.28.14: Moved Bounce_Imps, Canvas_Imps, Packed_Imps, Gadget_Imps type defs from   src/lib/x-kit/widget/gui/guiboss-imp.pkg   to   src/lib/x-kit/widget/gui/guiboss-types.pkg.
2014-11-22-19.55.40: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  fun kill_gui:  Call free_rw_pixmap() on our main backing rw_pixmap and also all scratch rw_pixmaps allocated by widgets for this running gui.
2014-11-22-19.26.57: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  fun display_one_frame:  fun make_rw_pixmap:  Actually record new rw_pixmap in appropriate TOPWINDOW_PIXMAP.pixmaps.
2014-11-22-18.33.47: src/lib/x-kit/widget/gui/guiboss-imp.pkg: fun display_one_frame:  Establish  fun make_rw_pixmap  wrapper of  imports.guiboss_to_windowsystem.make_rw_pixmap   to support tracking of all rw_pixmaps created by a given running_gui.
2014-11-22-18.14.25: src/lib/x-kit/widget/gui/guiboss-types.pkg:  TOPWINDOW_PIXMAP:  Added  pixmaps: Ref( im::Map( g2p::Gadget_To_Rw_Pixmap ))   field to track Xserver-side pixmaps allocated by/for running gui, so we can reliably recycle them at gui shutdown time, rather than leaking X server memory.
2014-11-22-17.50.55: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Improve handling of Topwindow_Info.backing_pixmap field in context of new popup support (== possibly multiple running guis per topwindow).
2014-11-22-17.03.55: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Topwindow_Info: Removed gadget_to_guiboss and space_to_gui fields because they wound up not being used, and make no sense in the context of the new popup support, where there can be multiple gadget_to_guiboss and space_to_gui imps active per topwindow.
2014-11-22-15.56.47: Light commenting of various gui files.
2014-11-22-13.10.36: src/c/heapcleaner/heap-debug-stuff.c: Tweaks to accomodate additional warnings by later gcc versions.
2014-11-20-00.19.48: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Killing of popups now works to zeroth-order.
2014-11-17-21.41.38: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Sketched in framework for kill_gui() support. Not yet functional.
2014-11-17-09.16.07: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  find_frombox_parts_not_hidden_by_popups:  Do a better job of getting things in the right coordinate systems. Now dual overlapping popups appear to display correctly.
2014-11-16-12.02.56: src/lib/x-kit/widget/gui/guiboss-imp.pkg: find_appropriate_gadget_info: Tweaked to support sending mouse events to widgets on popups as well as widgets on base-window.
2014-11-13-09.56.39: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  display_one_frame:  Do not call  before_first_frame  or  start_of_frame  until   site   is valid.  This resolves a race condition between packedspace_imp doing widget layout and guiboss_imp doing initial draw of widget.
2014-11-12-20.57.48: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Kill now-unneeded first_frame global.
2014-11-12-20.44.50: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  frameclock microthread:  Switch control of sending before_first_frame calls from global first_frame flag to per-widget sent__before_first_frame flags.
2014-11-12-20.32.44: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Gadget_Info:  Added    sent__before_first_frame: Ref(Bool)   field.
2014-11-12-20.17.10: src/lib/x-kit/widget/gui/guiboss-imp.pkg: restart_gui: Fixed: We were starting up a frameclock microthread on every call, which was fine when we had at most one running gui per topwindow, but we need to be more selective now that we also support secondary (popup) running guis.
2014-11-11-23.54.38: src/lib/std/2d/geometry2d.pkg:  subtract_box_b_from_box_a:  Fixed:  This fn was not correctly handling case where no box b vertex was in box a, but box b edges still crossed box a.
2014-11-11-21.33.33: src/lib/x-kit/widget/gui/guiboss-imp.pkg: restart_gui: Fixed: Logic was assuming that every gui started was toplevel gui for topwindow and recording it as such.  With secondary (popup) guis now supported we need to be more selective about updating the topwindow_info.backing_pixmap field.
2014-11-11-21.06.43: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Move next_stacking_order field from Running_Gui to Topwindow_Info because we need exactly one, and we now support multiple running_gui instances per topwindow (for popups).
2014-11-09-19.53.04: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Fixed: restart_gui was hardwired to use the toplevel window as the gui size, instead of taking the size from its topwindow_pixmap arg.
2014-11-09-18.33.32: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  propagate_frombox_changes_to_all_parents_in_which_they_are_visible:  draw_fragment:  Add in origin of popup when drawing fragments on a popup.
2014-11-09-17.01.27: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  make_backing_pixmap_for_popup: FIXED: due a brainfart had high/wide where row/col were required.
2014-11-09-15.18.02: src/lib/x-kit/widget/gui/guiboss-imp.pkg: propagate_frombox_changes_to_all_parents_in_which_they_are_visible: draw_fragment:  FIXED: Was erroneously using a single to_point value for all fragments instead of recomputing appropriately per-fragment.
2014-11-07-22.16.53: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Topwindow_Info: Replace   running_gui: Ref(Null_Or(gt::Running_Gui))   field with   backing_pixmap: Ref(Null_Or(gt::Backing_Pixmap))   field because with popups having their own Running_Gui instances we can no longer think in terms of at most one Running_Gui per topwindow.   src/lib/x-kit/widget/gui/guiboss-imp.pkg: Backing_Pixmap:  TOPWINDOW_PIXMAP:  Add a   running_gui: Ref(Null_Or(Running_Gui))  field because we have established Backing_Pixmap as the recursive datastructure tracking the popup parent/child tree, so this is the natural place now for the Running_Gui record for each popup to live.
2014-10-21-23.16.49: src/lib/std/2d/geometry2d-junk.pkg: Established, populated with box_to_string, boxes_to_string etc.  src/lib/x-kit/widget/gui/guiboss-imp.pkg: Instrumentation.
2014-10-19-18.44.05: src/lib/x-kit/widget/widget-unit-test.pkg: Logic to actually exercise popup support. Now debugging can begin in earnest. :-)
2014-10-16-20.34.40: src/lib/x-kit/widget/gui/guiboss-imp.pkg: propagate_frombox_changes_to_all_parents_in_which_they_are_visible: Switch on the new do-not-clobber-overlying-popups logic. In principle popups are now working. Debugging starts this weekend. :-)
2014-10-15-20.32.06: src/lib/x-kit/widget/gui/guiboss-imp.pkg: First-cut implementation of make_popup().
2014-10-14-21.04.38: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Added a  redraw_all_popups()  support fn.
2014-10-13-22.39.26: src/lib/x-kit/widget/gui/guiboss-types.pkg: Added find_all_topwindow_pixmaps_above_given_stacking_order() to allow finding all TOPWINDOW_PIXMAP records via a zero arg -- all stacking_order fields are positive.
2014-10-13-21.48.50: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  update_offscreen_parent_pixmaps_and_then_topwindow:  First-cut version of find_visible_parts_of_frombox(), to avoid clobbering overlying popups.
2014-10-13-19.51.19: src/lib/x-kit/widget/gui/guiboss-types.pkg:  Added a convenience fn   find_all_topwindow_pixmaps_above_given_topwindow_pixmap_in_stacking_order: Backing_Pixmap -> List(Topwindow_Pixmap).
2014-10-13-18.52.32: Moved Backing_Pixmap from space-to-gui.pkg so it could be with all its friends in guiboss-types.pkg
2014-10-13-17.46.31: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  make_backing_pixmap_for_popup:  Added logic to impose sanity upon requested popup site by making it fit within parent.
2014-10-13-16.45.35: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Finally got make_popup() plumbed right, I think:  Called from the right point with all required args and resources.
2014-10-12-15.07.52: src/lib/x-kit/widget/gui/guiboss-types.pkg: Client_To_Guiwindow: Add kill_gui: Void -> Void  field.
2014-10-12-14.47.40: Give make_popup a more realistic type everywhere.
2014-10-11-22.58.32: src/lib/x-kit/widget/gui/guiboss-types.pkg: GUIBOSS_TO_GADGET: before_first_frame:  Added a placeholder make_popup().
2014-10-11-22.29.38: Merged guiboss-to-gadget.pkg + gadget-to-guiboss.pkg into src/lib/x-kit/widget/gui/guiboss-types.pkg.
2014-10-11-21.19.12: Merge guiboss-to-canvasspace.pkg guiboss-to-bouncespace.pkg into guiboss-types.pkg
2014-10-11-19.59.11: Merge gui-plan.pkg, running-gui.pkg, stopped-gui.pkg + guiboss-to-packedspace.pkg into guiboss-types.pkg
2014-10-11-13.49.32: src/lib/x-kit/widget/space/bounce/guiboss-to-bouncespace.pkg:  Guiboss_To_Bouncespace:  Made this a datatype instead of a record type as preparation for pending mutual recursion.
2014-10-11-13.31.05: src/lib/x-kit/widget/space/canvas/guiboss-to-canvasspace.pkg:  Guiboss_To_Canvasspace:  Made this a datatype instead of a record type as preparation for pending mutual recursion.
2014-10-11-13.18.48: src/lib/x-kit/widget/space/packed/guiboss-to-packedspace.pkg:  Guiboss_To_Packedspace:  Made this a datatype instead of a record type as preparation for pending mutual recursion.
2014-10-11-13.02.20: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Gadget_To_Guiboss:  Made this a datatype instead of a record type as preparation for pending mutual recursion.
2014-10-11-12.39.05: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  Guiboss_To_Gadget:  Made this a datatype instead of a record type as preparation for pending mutual recursion.
2014-10-11-11.25.42: src/lib/x-kit/widget/gui/running-gui.pkg: Add Rg_ and RG_ prefixes to eliminate naming conflicts when package is combined with running-gui and gui-plan.
2014-10-11-10.48.30: src/lib/x-kit/widget/gui/stopped-gui.pkg: Add Sg_ and SG_ prefixes to eliminate naming conflicts when package is combined with running-gui and gui-plan.
2014-10-10-21.50.03: src/lib/x-kit/widget/gui/: Renamed gui-types.pkg -> guiboss-types.pkg
2014-10-08-23.36.02: src/lib/x-kit/widget/gui/guiboss-imp.api: Client_To_Guiboss: make_popup: Pass in a Running_Gui instead of a gws::Guiboss_To_Topwindow.
2014-10-08-23.21.32: src/lib/x-kit/widget/gui/guiboss-imp.api:  Export opaque Running_Gui type, return a running_gui: Running_Gui field in Client_To_Guiwindow.
2014-10-05-12.40.24: src/lib/x-kit/widget/gui/client-to-guiboss.pkg:  Client_To_Guiboss:  Add   kill_popup: gws::Guiboss_To_Topwindow -> Void.
2014-10-05-11.34.38: src/lib/x-kit/widget/gui/client-to-guiboss.pkg:  Client_To_Guiboss:  Add   make_popup: (gws::Guiboss_To_Topwindow, g2d::Box) ->  (gws::Guiboss_To_Topwindow, g2d::Box).
2014-10-05-10.46.23: src/lib/x-kit/widget/gui/space-to-gui.pkg: TOPWINDOW_PIXMAP: Added popup-support fields  popups, parent, stacking_order, origin.
2014-10-04-11.03.14: src/lib/std/2d/geometry2d.api:  Add  subtract_boxes_b_from_boxes_a: { a: List(Box), b: List(Box) } -> List(Box);  because it will be needed momentarily.
2014-10-02-13.58.51: src/lib/x-kit/widget/gui/guiboss-imp.pkg: do_button_release: NO_APPROPRIATE_GADGET:  b2g::DONE:  Send  event_point => last_point  instead of  event_point  because event_point is bogus in this situation. (Recipient should not be using it anyhow.)
2014-10-02-00.25.45: src/lib/x-kit/widget/widget-unit-test.pkg: Successful mouse-drag scrolling of viewport contents. Looks fast! Major milestone.
2014-10-01-23.22.06: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Still more fiddling with drag stuff etc. It is starting to look reasonable.
2014-10-01-22.48.37: src/lib/x-kit/widget/gui/guiboss-imp.pkg: More fiddling with drag stuff etc.
2014-10-01-00.41.23: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  More work getting drag protocol squared away.
2014-09-30-22.39.02: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg (etc):  Eliminate  note_mouse_motion()  because the new  note_mouse_transit()  offers a superset of the same functionality.
2014-09-30-00.00.49: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Minor bug in fresh code:  Had gadget_info where gadget_info2 was needed.
2014-09-29-22.11.10: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  Merge   note_mousebutton_press_event() + note_mousebutton_release_event()   into a single   note_mousebutton_event()   call -- I think this be more convenient for widget code.
2014-09-29-21.23.05: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  Merge   note_key_press_event() + note_key_release_event()   into a single   note_key_event()   call -- I think this be more convenient for widget code.
2014-09-29-12.42.50: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  Add   Drag_Phase = LAUNCH | RESUME | FINISH;  add a Drag_Phase arg to  note_mouse_drag_event().
2014-09-29-00.09.11: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Sketched in code for widget drag/enter/leave events. Needs proofreading and testing.
2014-09-28-16.42.46: src/lib/x-kit/widget/gui/gui-event-types.pkg:  For client convenience, added   no_modifier_keys_are_down: Modifier_Keys_State   and   no_mouse_buttons_are_down: Mousebuttons_State.
2014-09-28-14.39.50: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Add   current_drag: Ref(Null_Or(Drag_State))   field to Topwindow_Info.
2014-09-28-14.22.28: src/lib/x-kit/widget/gui/gui-event-types.pkg (etc): Complete conversion from Modifier_Key_Bits  bitvector to Modifier_Keys_State bool record.
2014-09-28-13.13.17: src/lib/x-kit/widget/gui/gui-event-types.pkg:  Same dance, different partner: Renamed Modifier_Keys_State -> Modifier_Key_Bits.
2014-09-28-11.12.15: Add mousebuttons_state fields everywhere we have mousebutton_bits fields.
2014-09-28-10.00.38: src/lib/x-kit/widget/gui/gui-event-types.pkg: Rename Mousebuttons_State -> Mousebutton_Bits to free up Mousebuttons_State to be a record of bools instead of a bitvector.
2014-09-28-09.01.54: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg (etc): Rename  note_mouse_motion_event ->  note_mouse_move_event, add new note_mouse_drag_event call.
2014-09-28-00.59.39: src/lib/x-kit/widget/gui/guiboss-imp.pkg (etc): Do the plumbing so mouse-motion events are available in src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.pkg (etc).
2014-09-27-21.45.01: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api (etc):  Add Mouse_Motion_Fn patterned on existing Button_Press_Fn and Key_Press_Fn.
2014-09-27-21.07.09: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Added  do_motion_notify.
2014-09-27-15.45.21: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Too-small views now properly drawn with initial black surround in viewport.  Much accumulated debugging crud deleted.
2014-09-27-12.07.19: src/lib/x-kit/widget/gui/running-gui.pkg:  Add running_gui_postorder_apply().
2014-09-27-00.39.29: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  set_viewport_origin:  Correctly black out viewport areas where view is not visible.
2014-09-25-00.31.00: src/lib/std/2d/geometry2d.pkg:  First-cut implementations of box_corners(), quadsect_box(), quadsect_boxes() and subtract_box_b_from_box_a().
2014-09-24-23.04.54: src/lib/std/2d/geometry2d.api: Establish quadsect_box: (Box, Point) -> List(Box);
2014-09-24-21.39.01: src/lib/std/2d/geometry2d.api:  Add intersect_box_with_boxes(), intersect_boxes_with_boxes().
2014-09-24-20.52.21: Tidying.
2014-09-24-20.30.49: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  propagate_frombox_changes_to_all_parents_in_which_they_are_visible: do_viewport: Fixed: Had *subview_origin where -*subview_origin was needed. Negation is the work of a devil. :-)
2014-09-23-21.11.03: src/lib/x-kit/widget/gui/guiboss-imp.pkg: find_appropriate_gadget_info: Also return to caller event_point in widget coordinate system (null transform when no viewports are involved).  do_button_press,do_button_release,do_key_press,do_key_release: Use new transformed event_point instead of the raw event_point.
2014-09-23-20.23.00: src/lib/x-kit/widget/widget-unit-test.pkg: Add code to test new scrollable-view functionality.
2014-09-23-08.03.40: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  Change default for various *_cut from 0.0 to 1.0 on principle of least surprise -- things were getting assigned zero screen area even without anything else competing for available screen area, which was mysterious and surprising.
2014-09-22-20.33.46: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Switched over to new viewport-friendly find_appropriate_gadget_info(), deleted the old one.
2014-09-21-20.56.41: src/lib/x-kit/widget/gui/guiboss-imp.pkg: find_gadget_info():  Sketched in first-cut support for SCROLLABLE_VIEW + TABBED_VIEWS -- should be ready to try out now.
2014-09-21-18.41.03: src/lib/x-kit/widget/gui/running-gui.pkg:  Added  packed_widget_site: Packed_Widget -> Box    src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Sketched in vanilla part of the new   find_appropriate_gadget_info().  (Viewport part not done yet.)
2014-09-21-18.07.04: src/lib/x-kit/widget/gui/running-gui.pkg:  Drop viewport fields made redundant by adding site field everywhere.   src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Sketched in outer structure for new viewport-friendly find_appropriate_gadget_info().
2014-09-21-17.31.02: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  assign_sites_to_all_widgets:  Set new Packed_Widget.*.site fields.
2014-09-21-17.06.16: src/lib/std/2d/geometry2d.pkg: package box:  Add  zero: Box.   src/lib/x-kit/widget/gui/running-gui.pkg:  Add  site:Ref(Box)  fields to Packed_Widget.* records.
2014-09-21-16.29.35: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Added backing_pixmap_is_visible() fn.
2014-09-21-11.51.07: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  propagate_frombox_changes_to_all_parents_in_which_they_are_visible:  Stop propagation if *VIEWPORT_PIXMAP.is_visible is FALSE.
2014-09-21-11.42.33: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  set_active_view():  Update VIEWPORT_PIXMAP.is_visible appropriately.
2014-09-21-11.32.32: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Backing_Pixmap:  VIEWPORT_PIXMAP:  Add   is_visible: Ref(Bool)   field so   update_offscreen_parent_pixmaps_and_then_topwindow()  can know when to stop propagating updates up the viewport tree.
2014-09-21-10.56.20: src/lib/x-kit/widget/space/packed/guiboss-to-packedspace.pkg:  Guiboss_To_Packedspace:  pass_re_siting_done_flag:  Replace  g2p::Gadget_To_Rw_Pixmap  arg with  s2g::Backing_Pixmap  arg -- latter wraps former, and this avoids creating multiple TOPWINDOW_PIXMAP instances for same gui topwindow.
2014-09-21-10.42.25: src/lib/x-kit/widget/gui/running-gui.pkg:  Running_Gui:  Add   topwindow_pixmap: s2g::Backing_Pixmap   field to hold toplevel   TOPWINDOW_PIXMAP   instance.
2014-09-21-10.15.59: src/lib/x-kit/widget/gui/running-gui.pkg:  Commenting and tidying.
2014-09-20-22.22.29: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Minor correction, tidying + commenting.
2014-09-20-22.02.52: src/lib/x-kit/widget/gui/guiboss-imp.pkg: stopped_gui__to__running_gui: do_packed_widget: TABBED_VIEWS:  Actually implement set_active_view().
2014-09-20-20.49.02: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  stopped_gui__to__running_gui: do_packed_widget: VIEWPORT:  Actually implement set_viewport_origin().
2014-09-20-15.40.53: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Viewport:  Add   parent_pixmap: Backing_Pixmap  field.
2014-09-20-13.10.10: src/lib/x-kit/widget/gui/guiboss-imp.pkg: update_offscreen_parent_pixmaps_and_then_topwindow: Make args more generic to facilitate re-use.
2014-09-20-12.52.34: src/lib/std/2d/geometry2d.pkg: Renamed lowerright -> lowerright1, added new lowerright.  Difference is that  lowerright returns  { col => box.col + box.wide - 1,  row => box.row + box.high - 1 } but lowerright1 returns  { col => box.col + box.wide,  row => box.row + box.high }.
2014-09-20-12.31.07: src/lib/core/init/pervasive.pkg: Rename Point to Rowcol for clarity, add support for subtraction of Rowcol values.
2014-09-20-12.07.18: src/lib/core/init/pervasive.pkg: Define addition on type Point = { row: Int, col: Int }
2014-09-20-11.12.37: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Construct a viewport_scroller record and pass to VIEWPORT.callback.  Also pass NULL to VIEWPORT.callback when shutting down a running_gui.
2014-09-20-10.50.07: Sporadic tidying.  src/lib/x-kit/widget/gui/running-gui.pkg:  Packed_Widget:  VIEWPORT:  Add   pixmap_origin: Ref(g2d::Point)   field.
2014-09-19-07.47.21: src/lib/x-kit/widget/gui: gui-plan.pkg, stopped-gui.pkg, running-gui.pkg:  Packed_Widget:  TABBED_VIEWS:  Add gt::Tabbed_View_Picker_Callback field.
2014-09-19-07.37.20: src/lib/x-kit/widget/gui: gui-plan.pkg, stopped-gui.pkg, running-gui.pkg:  Packed_Widget:  VIEWPORT:  Add gt::Viewport_Scroller_Callback field.
2014-09-18-22.39.07: src/lib/x-kit/widget/gui/gui-types.pkg:  Add Viewport_Scroller, Viewport_Scroller_Callback, Tabbed_View_Picker, Tabbed_View_Picker_Callback.
2014-09-18-22.28.09: src/lib/x-kit/widget/gui: gui-plan.pkg, stopped-gui.pkg, running-gui.pkg:  Packed_Widget:  Split  VIEWPORT  into  VIEWPORT + TABBED_VIEWS  for cleaner separation of concerns.
2014-09-18-21.25.29: src/lib/x-kit/widget/gui/gui-types.pkg:  Add Viewport_Scroller, Viewport_Scroller_Callback.
2014-09-17-09.23.11: src/lib/x-kit/widget/gui/guiboss-imp.pkg: do_blits:  Fixed wrong-variable in terminal recursion case. renamed to propagate_frombox_changes_to_all_parents_in_which_they_are_visible, commenting and tidying.
2014-09-17-08.59.37: src/lib/x-kit/widget/gui/guiboss-imp.pkg: do_blits:  Set up from_box right before final recursive call.  This fn now looks complete and perhaps even correct.
2014-09-17-08.47.45: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Finally (!) realized that the only args needed by do_blits() are the backing_pixmap and from_box -- everything else is computable from them. That makes things much clearer.
2014-09-16-08.12.51: src/lib/x-kit/widget/gui/space-to-gui.pkg: Backing_Pixmap: VIEWPORT_PIXMAP: Make viewports Ref(List(Viewport)) to support adding more viewports opening onto same underlying pixmap.
2014-09-14-22.26.00: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  draw_gadget:  Do backing_pixmap draw to   s2g::gadget_to_rw_pixmap__of *gadget_info.backing_pixmap   instead of having it hardwired to   topwindow_for_gui.backing_pixmap. (More support for scrollable viewports.)
2014-09-14-21.38.38: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Add  backing_pixmap_of: Backing_Pixmap -> g2p::Gadget_To_Rw_Pixmap.
2014-09-14-21.29.12: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Change draw_gadget() to use new  compute_gadget_redraw_blit()  fn.
2014-09-14-16.29.06: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Backing_Pixmap:  VIEWPORT_PIXMAP:  Renamed  origin ->  subview_origin  for clarity. Also added comments documenting its meaning.
2014-09-14-16.02.39: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Write first-cut implementation of  compute_gadget_redraw_op().  Untested.
2014-09-14-15.18.37: src/lib/std/2d/geometry2d.api:  package box:  Added  eq  and  ne.
2014-09-14-14.13.01: src/lib/std/2d/geometry2d.pkg:  package box:  intersection:  Change to return Null_Or(Box) instead of returning Box and raising exception INTERSECTION if the intersection is empty. (This forces client programmer to handle the no-intersection case.)  Eliminate INTERSECTION exception. Kill All Exceptions! :-)
2014-09-14-13.34.42: src/lib/x-kit/widget/gui/space-to-gui.pkg: Rename SUBWINDOW_PIXMAP -> VIEWPORT_PIXMAP.
2014-09-14-11.06.39: src/lib/std/2d/geometry2d.pkg:  package box:  Added  intersect_box_with_boxes()  and  intersect_boxes_with_boxes()  to help with processing X EXPOSE boxlists etc.
2014-09-14-10.18.38: src/lib/std/2d/geometry2d.pkg:  package box:  Add  clone_box_at()  because I keep needing one.
2014-09-14-00.39.13: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Skeleton for compute_visible_part_of_gadget().
2014-09-13-18.56.17: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  assign_sites_to_all_widgets:  Do actual widget layout on VIEWPORT subviews.
2014-09-13-16.58.51: src/lib/x-kit/widget/gui/running-gui.pkg:  Packed_Widget:  VIEWPORT:  Added   site: Ref(g2d::Box)   field to record current site of viewport on its home backing_pixmap.
2014-09-13-12.24.03: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg: Minor tidying.
2014-09-13-12.15.31: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  assign_sites_to_all_widgets:  Add  backing_pixmap: s2g::Backing_Pixmap  arg, since it is no longer a constant global during run of this recursive fn.
2014-09-13-12.04.25: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  re_site_packed_widget_tree:  Change type of  backing_pixmap  arg from  g2p::Gadget_To_Rw_Pixmap  to  s2g::Backing_Pixmap,  to enable it to use either of  s2g::TOPWINDOW_PIXMAP or s2g::SUBWINDOW_PIXMAP as appropriate on recursive calls to itself.
2014-09-13-11.54.14: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Move responsibility for supplying TOPWINDOW_PIXMAP wrapper from guiboss-imp.pkg to packedspace-imp.pkg.
2014-09-13-11.41.55: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Move Backing_Pixmap def here from guiboss-imp.pkg because it needs to be shared between guiboss-imp.pkg and packedspace-imp.pkg.
2014-09-13-11.04.23: src/lib/core/init/pervasive.pkg: Add same_id: (Id, Id) -> Bool.
2014-09-13-10.50.48: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Gadget_Info:  Make backing_pixmap a Ref so we can update it in note_widget_site.  And then update it in note_widget_site. :-)
2014-09-13-10.36.44: src/lib/x-kit/widget/gui/space-to-gui.pkg:  Space_To_Gui:  note_widget_site:  Added argument   backing_pixmap: g2p::Gadget_To_Rw_Pixmap.
2014-09-13-10.17.06: src/lib/x-kit/widget/space/packed/guiboss-to-packedspace.pkg: Guiboss_To_Packedspace: pass_re_siting_done_flag: Add   g2p::Gadget_To_Rw_Pixmap  arg because we are switching to widgets having sites on more than one pixmap (to support scrollable subwindows).
2014-09-12-22.06.47: src/lib/x-kit/widget/gui/running-gui.pkg: Packed_Widget: VIEWPORT: widgets:  Added   backing_pixmap: g2p::Gadget_To_Rw_Pixmap   field.
2014-09-10-22.44.11: Established VIEWPORT cases to  Packed_Widget in  src/lib/x-kit/widget/gui/gui-plan.pkg, src/lib/x-kit/widget/gui/stopped-gui.pkg, and src/lib/x-kit/widget/gui/running-gui.pkg.
2014-09-09-22.28.57: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  draw_gadget:  Convert from drawing displaylist on both visible windows and backing store to drawing first on backing store and then just blitting clip rectangle to visible window. (This will simplify things going forward.)
2014-09-09-13.56.35: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Gadget_Info:  Added   backing_pixmap: Backing_Pixmap   field.
2014-09-08-23.09.42: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Guiboss_To_Topwindow: Added   backing_pixmap: g2p::Gadget_To_Rw_Pixmap   field.
2014-09-08-21.01.36: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Gadget_To_Guiboss: update_gadget_appearance: Merged foregound + background fields into a single displaylist field -- simpler is better.
2014-09-08-12.50.18: src/lib/x-kit/widget/theme/gadget-to-pixmap.pkg:  Gadget_To_Rw_Pixmap:  Add   size: g2d::Size   field.
2014-09-07-14.17.25: src/lib/x-kit/widget/gui/guiboss-imp.pkg: display_one_frame: Scope inversion bug was resulting in guiboss_to_gadget.before_first_frame being called only for first gadget in gui. *BLUSH*
2014-09-06-17.17.08: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  Guiboss_To_Gadget:  before_first_frame:  Add   make_rw_pixmap: g2d::Size -> g2p::Gadget_To_Rw_Pixmap.
2014-09-06-16.48.31: src/lib/x-kit/widget/theme/gadget-to-pixmap.pkg: Create.
2014-09-06-14.38.39: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Draw_Op: Added COPY_FROM_RW_PIXMAP.
2014-09-06-12.32.11: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Guiboss_To_Rw_Pixmap: Add get_pixel_rectangle, pass_pixel_rectangle.
2014-09-06-12.22.17: src/lib/x-kit/xclient/src/window/cs-pixmat.api: Add box args to make_clientside_pixmat_from_readwrite_pixmap, make_clientside_pixmat_from_readonly_pixmap, pass_clientside_pixmat_from_readwrite_pixmap, pass_clientside_pixmat_from_readonly_pixmap.
2014-09-06-11.59.19: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg:  Guiboss_To_Rw_Pixmap.
2014-09-05-20.42.27: src/lib/x-kit/xclient/src/window/xserver-ximp.pkg:  break_drawoplist_into_mono_gc_drawoplists:  Reverse result before returning.  (I think this was an ancient bug.)
2014-09-04-08.59.32: src/lib/x-kit/xclient/src/window/windowsystem-to-xserver.pkg: Added prettyprint_drawop_list().
2014-09-03-23.16.55: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Added prettyprint_gui_displaylist.
2014-09-02-22.55.11: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Added COPY_AREA so terminal widgets can scroll text (etc).
2014-09-02-22.37.14: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Added draw_displaylist_but_never_to_backing_pixmap.
2014-09-02-22.15.28: src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: draw_displaylist(): Write to backing pixmap (if present) as well as visible window.
2014-09-01-22.05.37: src/lib/x-kit/xclient/src/window/xsession-junk.api: Window: Added   backing_pixmap: Null_Or(Rw_Pixmap)  field.
2014-09-01-21.24.20: Moved definitions of Rw_Pixmap and Ro_Pixmap types from src/lib/x-kit/xclient/src/window/draw-types.pkg  to src/lib/x-kit/xclient/src/window/xsession-junk.pkg to avoid incipient circulat package dependencies.
2014-09-01-14.04.32: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg (etc): Ripped out the old get_font_height/pass_font_height + get_string_length_in_pixels/pass_string_length_in_pixels calls: The new get_font/pass_font calls are a much better solution.
2014-09-01-13.32.06: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  before_first_frame: Added get_font, pass_font.
2014-09-01-12.40.36: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg:  Guiboss_To_Topwindow: Added get_font, pass_font.
2014-09-01-11.41.02: src/lib/x-kit/widget/gui/gui-event-types.pkg:  Added  	Font = { id: Id, font_height: Font_Height, string_length_in_pixels: String -> Int };   because things were getting too ugly without it.
2014-09-01-11.32.45: src/lib/x-kit/widget/gui/gui-event-types.pkg: Added Font_Height because it was getting replicated all over and needed a home.
2014-08-31-22.41.11: Tidying.
2014-08-31-16.29.30: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg: start_of_frame: Add get_font_height, pass_font_height, get_string_length_in_pixels, pass_string_length_in_pixels.
2014-08-31-15.06.58: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Added  get_string_length_in_pixels, pass_string_length_in_pixels.
2014-08-31-14.41.24: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Added  get_font_height, pass_font_height.
2014-08-31-13.21.36: src/lib/x-kit/widget/hoag/file-chooser.pkg:  More tidying.
2014-08-31-11.09.50: src/lib/x-kit/widget/hoag/selectable-list.pkg:  Hand-conversion from SML to Mythryl syntax, tidying.
2014-08-31-09.47.01: src/lib/x-kit/widget/hoag/file-chooser.pkg:  More hand-conversion from SML to Mythryl syntax.
2014-08-31-00.37.50: src/lib/x-kit/widget/hoag/:  First-pass cleanup of file-chooser.pkg + selectable-list.pkg.
2014-08-30-16.35.18: Tidy and inventory the available old widget code.
2014-08-27-23.15.01: src/lib/x-kit/widget/leaf/: Cloned arrowbutton* to produce diamondbutton*.
2014-08-27-22.48.17: src/lib/x-kit/widget/theme/gui-displaylist.pkg:  Added IMAGE.    src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: Implemented IMAGE.
2014-08-26-23.04.43: src/lib/x-kit/widget/theme/gui-displaylist.pkg: IMAGE (g2d::Point, mtx::Rw_Matrix(r8::Rgb8))
2014-08-26-14.33.35: src/lib/std/2d/geometry2d.api: package box:  Added  to_points: Box -> List(Point);
2014-08-26-12.38.51: src/lib/std/2d/geometry2d.pkg: Moved bounding_box back out of (sub)package point again, to be next to convex_hull.
2014-08-25-22.53.40: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Added   Draw_Text = TO_RIGHT_OF_POINT | CENTERED_ON_POINT | TO_LEFT_OF_POINT;   and   DRAW_TEXT	   (Draw_Text,	List(Draw_Op)).   src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: Implemented preceding.
2014-08-25-21.10.03: src/lib/x-kit/draw/: For clarity renamed spline.api, spline.pkg -> beta2-spline.api, beta2-spline.pkg.  There lots of splines in the world, and we will want more by and by.
2014-08-25-13.42.02: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Changed  point_in_gadget()  to use  g2d::convex_hull (gd::find_all_points_in_gui_displaylist displaylist);   instead of the raw   points   list.
2014-08-25-13.33.10: src/lib/x-kit/widget/theme/gui-displaylist.pkg:  Added  find_all_points_in_gui_displaylist().
2014-08-24-23.05.26: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: note_changed_gadget_appearance:  Added   point_in_gadget: Null_Or(g2d::Point -> Bool)   field to call.   src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Implemented point_in_gadget functionality.  src/lib/x-kit/widget/leaf/arrowbutton.pkg: default_appearance():  Provide point_in_gadget() fn for guiboss.  Result: Now you have to actually click *on* an arrowbutton, not just anywhere in its assigned window rectangle.
2014-08-24-19.13.30: src/lib/std/2d/geometry2d.pkg:  The convex_hull helper fn point_gt is actually generally useful, so renamed it to point::compare_xy and exported it for general use.
2014-08-24-18.36.39: src/lib/std/2d/geometry2d.pkg: Added point_in_polygon().   src/lib/x-kit/widget/widget-unit-test.pkg: Code exercising point_in_polygon.
2014-08-24-16.14.21: src/lib/std/2d/geometry2d.pkg: Moved convex_hull outside of (sub)package point.
2014-08-24-11.43.11: src/lib/std/2d/geometry2d.pkg: Added convex_hull().  src/lib/x-kit/widget/widget-unit-test.pkg: Code to exercise convex_hull.
2014-08-23-19.01.23: src/lib/x-kit/xclient/src/window/font-base.pkg: Changed Font from a datatype to a simple record type to allow writing stuff like  font.id  instead of having to do   font -> fb::FONT { id, ... };  ... id.
2014-08-23-15.08.37: src/lib/x-kit/widget/theme/gui-displaylist.pkg: FONT added and working.
2014-08-23-13.46.42: src/lib/x-kit/widget/theme/gui-displaylist.pkg: TEXT added and working.
2014-08-23-09.24.41: src/lib/x-kit/xclient/src/window/windowsystem-to-xserver.pkg:  For clarity renamed  open_font  ->  find_else_open_font.
2014-08-22-21.38.03: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Clip widgets to their assigned window sites.
2014-08-22-21.26.04: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Draw_Op:  Add   | CLIP_TO (g2d::Box, List(Draw_Op))
2014-08-21-07.59.52: Try #2: src/lib/core/init/pervasive.pkg: Rename   real: Int -> Float;   to   float: Int -> Float;  -- I loath conflating reals with floats.
2014-08-20-23.02.00: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: Try #2 at fixing adjust().
2014-08-19-21.23.23: src/lib/x-kit/xclient/src/color/rgb.api: Renamed rgb_mix -> rgb_mix01, added rgb_mix11 as a convenience.
2014-08-19-21.09.14: Renamed xgeometry.pkg -> geometry2d.pkg because it is ceasing to be an X-specific package.
2014-08-19-00.58.44: src/lib/std/2d/xgeometry.pkg: package line: intersection: Use Float instead of Int internally to avoid 32-bit integer overflow problems.
2014-08-18-19.31.22: Verified that packed_theme.rounded_pictureframe does in fact draw a rounded pictureframe. To my utter astonishment. 10 points Reppy + Gansner!
2014-08-17-09.17.30: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: Adapted polygon3d from Reppy's original code.
2014-08-17-01.08.40: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: make_polygon_3d adapted from Reppy's original code.
2014-08-17-00.07.50: src/lib/std/2d/xgeometry.pkg: package line: Added rotate_90_degrees_counterclockwise from Reppy's original code.
2014-08-16-22.19.51: src/lib/std/2d/xgeometry.pkg:  Add Reppy's line-intersection fn.
2014-08-16-16.17.54: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Add LINE_THICKNESS.
2014-08-16-14.00.24: src/lib/x-kit/widget/theme/packed/packed-theme.pkg:  Renamed cartouche -> rounded_pictureframe for clarity and consistency.
2014-08-16-12.56.42: src/lib/x-kit/xclient/src/color/rgb.api:  Add   gray: Rgb
2014-08-16-12.44.31: src/lib/x-kit/xclient/src/color/rgb.api:  Add   rgb_mix: (Float, Rgb, Rgb) -> Rgb
2014-08-16-12.16.46: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: filled_pictureframe.
2014-08-16-11.55.08: src/lib/x-kit/widget/theme/packed/packed-theme.pkg: For clarity renamed frame3d + 3d_frame -> pictureframe.
2014-08-16-11.36.59: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: Cleaner version of make_3d_frame.
2014-08-16-11.12.29: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: First-cut version of frame3d, adapted from the original Reppy code.
2014-08-16-10.53.40: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg: First-cut versions of make_3d_frame + make_3d_frame', adapted from the original Reppy code.
2014-08-16-10.00.39: src/lib/x-kit/widget/theme/packed/packed-theme.pkg: Drop Gadget_Palette8 (8-bit colors) in favor of Gadget_Palette (float colors).
2014-08-16-09.00.09: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Change COLOR to use float rather than byte colors, making widget code less messy and centralizing conversion to byte colors in windowsystem_imp_for_x::convert_displaylist_to_drawoplist.
2014-08-15-22.14.21: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Clearer more concise names for the constructors.
2014-08-15-21.38.24: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Changed   Gui_Displaylist=Draw_Op;   to   Gui_Displaylist=List(Draw_Op);   which turns out to be more natural in practice.
2014-08-14-22.31.20: src/lib/x-kit/widget/theme/packed/packed-theme.pkg: Sketch in api for frame3d, filled_frame3d, cartouche3d, polygon3d.
2014-08-14-21.34.18: src/lib/std/2d/xgeometry.api: Rename Arc -> Arc64; introduce a new Arc in which angles are Float degrees instead of Int degrees*64.
2014-08-13-09.32.46: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Implemented done_extra_startframe_this_frame/done_extra_redraw_this_frame hack: Typical Mythryl in-process response time to a mouseclick is now under 3ms.
2014-08-11-23.00.46: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Collapsed note_changed_gadget_background + note_changed_gadget_foreground into single note_changed_gadget_appearance call. This eliminates bugs due to calling the wrong one first.
2014-08-10-21.44.28: src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.pkg: fun do: Added a   wake_scheduler_hostthread_if_paused();   to get rid of the agonizing 10ms lag on X event input. Mouseclick response now feels *instant*.  (Response time appears to actually be about 7-8ms in Mythryl, plus however long the X server takes.) Incidentally, average minor-garbage collect time appears to be about 40 microseconds. Imperceptible.
2014-08-10-16.12.12: src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.api: Add wake_scheduler_hostthread_if_paused().
2014-08-10-15.49.19: src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.pkg:  Establish and maintain scheduler_hostthread local, which will be needed by subsequent logic to wake the threadkit hostthread up from an is::pause() call.
2014-08-10-14.42.31: src/c/hostthread/hostthread-on-posix-threads.c: Added pth__pthread_signal().  src/c/lib/hostthread/libmythryl-hostthread.c: Added signal_hostthread().   src/lib/std/src/hostthread.api:  Added signal_hostthread().  Point of this is to give io hostthreads a way to wake the threadkit hostthread up out of a pause() state without waiting for the next 50HZ SIGALRM.
2014-08-09-12.27.45: src/lib/std/src/nj/interprocess-signals.api: Added set_log_if_on to provide Mythryl-level control of C-level log_if() calls.
2014-08-07-21.47.27: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg:  Added nonblocking twin  pass_pixel_rectangle  to existing  get_pixel_rectangle()  call.
2014-08-07-21.22.59: src/lib/x-kit/xclient/src/window/cs-pixmat.pkg: To existing (blocking) calls make_clientside_pixmat_from_readwrite_pixmap, make_clientside_pixmat_from_readonly_pixmap, make_clientside_pixmat_from_window added nonblocking twins pass_clientside_pixmat_from_readwrite_pixmap, pass_clientside_pixmat_from_readonly_pixmap, pass_clientside_pixmat_from_window.
2014-08-05-22.29.14: src/lib/x-kit/xclient/src/window/xsession-junk.api: Xsession: Eliminate xclient_to_sequencer field, replace all uses of it by windowsystem_to_xserver.xclient_to_sequencer, to avoid potential race conditions.
2014-08-05-21.56.35: src/lib/x-kit/xclient/src/window/xsession-junk.api:  Xsession:  Added  windowsystem_to_xserver: w2x::Windowsystem_To_Xserver  to soon replace  xclient_to_sequencer: x2s::Xclient_To_Sequencer.
2014-08-05-21.30.57: src/lib/x-kit/xclient/src/window/xsession-junk.pkg: Do the fake-event calls via windowsystem_to_xserver.xclient_to_sequencer.send_xrequest not xclient_to_sequencer.send_xrequest to avoid possible race conditions due to bypassing xserver imp.
2014-08-04-22.34.50: Fiddling with src/lib/x-kit/widget/widget-unit-test.pkg and kith.
2014-08-02-18.23.40: Killed lots of performance-killing printfs up and down the X event delivery chain; the widget-unit-test.pkg row of three arrowbuttons now all respond to mouseclicks as expected.  :-) :-) :-)
2014-08-02-14.12.23: src/lib/x-kit/widget/leaf/arrowbutton.api:  Fill out and use default_appearance.
2014-08-02-13.46.03: src/lib/x-kit/widget/leaf/arrowbutton.api:  Add APPEARANCE.
2014-08-02-13.31.16: src/lib/x-kit/widget/leaf/arrowbutton.api:  Add Button_Appearance_Fn.
2014-08-02-13.17.35: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Tweak startup_fn to actually use the supplied saved_widget_state if non-NULL.
2014-08-02-13.03.09: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Define a shutdown_fn, register it with widget_imp.
2014-08-02-12.18.13: src/lib/x-kit/widget/xkit/theme/packed/default/look/: object-imp.pkg, sprite-imp.pkg, widget-imp.pkg: Actually pass supplied saved object/sprite/widget state to startup_fn()s.
2014-08-02-12.05.22: src/lib/x-kit/widget/xkit/theme/packed/default/look/: object-imp.pkg, sprite-imp.pkg, widget-imp.pkg: Actually call supplied shutdown_fn()s and return result to guiboss-imp.pkg.
2014-08-02-11.58.14: src/lib/x-kit/widget/xkit/theme/packed/default/look/sprite-imp.api: Bounce_Sprite_Option: Add SHUTDOWN_FN.
2014-08-02-11.47.55: src/lib/x-kit/widget/xkit/theme/packed/default/look/object-imp.api: Canvas_Object_Option: Add SHUTDOWN_FN.
2014-08-02-11.35.59: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api: Packed_Widget_Option: Add SHUTDOWN_FN.
2014-08-02-11.19.45: src/lib/x-kit/widget/xkit/theme/packed/default/look/: object-imp.api, sprite-imp.api, widget-imp.api:  Add  Shutdown_Fn = Void -> Null_Or(Exception).
2014-08-02-11.09.00: src/lib/x-kit/widget/gui/gui-types.pkg:  BOUNCE_SPRITE_START_FN:  endstate_oneshot:  Changed type from Oneshot_Maildrop(Bounce_Sprite_Start_Fn) -> Oneshot_Maildrop((Bounce_Sprite_Start_Fn, Null_Or(Exception))) to support saved_sprite_state.
2014-08-02-10.48.45: src/lib/x-kit/widget/gui/gui-types.pkg:  CANVAS_OBJECT_START_FN:  endstate_oneshot:  Changed type from Oneshot_Maildrop(Canvas_Object_Start_Fn) -> Oneshot_Maildrop((Canvas_Object_Start_Fn, Null_Or(Exception))) to support saved_object_state.
2014-08-02-10.27.23: src/lib/x-kit/widget/gui/gui-types.pkg:  PACKED_WIDGET_START_FN:  endstate_oneshot:  Changed type from Oneshot_Maildrop(Packed_Widget_Start_Fn) -> Oneshot_Maildrop((Packed_Widget_Start_Fn, Null_Or(Exception))) to support saved_widget_state.
2014-08-02-09.59.32: src/lib/x-kit/widget/xkit/theme/packed/default/look/sprite-imp.pkg:  Add saved_sprite_state to Runstate.
2014-08-02-09.48.15: src/lib/x-kit/widget/xkit/theme/packed/default/look/object-imp.pkg:  Add saved_object_state to Runstate.
2014-08-02-09.40.32: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.pkg: Add saved_widget_state to Runstate.
2014-08-02-09.32.50: src/lib/x-kit/widget/gui/gui-types.pkg: Added saved_widget_state field to Packed_Widget_Start_Fn, saved_object_state to Canvas_Object_Start_Fn, saved_sprite_state to Bounce_Sprite_Start_Fn.
2014-08-01-23.08.01: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Implement PORT_WATCHER support.
2014-08-01-22.51.07: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Add INITIAL_STATE.
2014-08-01-22.26.16: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Add choice between MOMENTARY_CONTACT and PUSH_ON_PUSH_OFF semantics.
2014-08-01-21.55.43: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Track last_known_site, update site_watchers when it changes.
2014-08-01-13.00.03: src/lib/x-kit/widget/leaf/arrowbutton.api: For conciseness, clarity and broad applicability, renamed  APP_TO_ARROWBUTTON_NOTIFY -> PORT_WATCHER  and  STATE_CHANGE_NOTIFY -> STATE_WATCHER.  Also added SITE_WATCHER.  (<<Watcher>> is the standard Design Patterns name for this relationship.)
2014-07-31-22.19.56: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Added  process_options  support for  APP_TO_ARROWBUTTON_CALLBACK, STATE_CHANGE_NOTIFY  Options.
2014-07-31-22.09.37: src/lib/x-kit/widget/leaf/arrowbutton.api: Added  App_To_Arrowbutton  port definition and  APP_TO_ARROWBUTTON_CALLBACK, STATE_CHANGE_NOTIFY  Options. All unimplemented as yet.
2014-07-31-21.52.04: src/lib/x-kit/widget/leaf/arrowbutton.api:  has:  Changed return type from   gp::Packed_Widget  to  (List(plh::Packedspace_Layout_Hint), gp::Packed_Widget)  as a caller convenience -- this is one complete gui_plan::ROW entry.
2014-07-31-21.38.28: src/lib/x-kit/widget/gui/gui-plan.pkg: CANVASSPACE, BOUNCESPACE: Moved hints before widget.
2014-07-31-21.08.14: src/lib/x-kit/widget/gui/gui-plan.pkg: ROW, COL: Moved hints to before widget.
2014-07-30-22.40.55: src/lib/x-kit/widget/leaf/arrowbutton.pkg:  Option:  Add PIXELS_HIGH_MIN etc, process_options(), logic to pass processed options to widget-imp.pkg.
2014-07-30-22.06.40: src/lib/x-kit/widget/gui/guiboss-imp.pkg: do_key_press, do_key_release: Pass keysym + ascii through (previously just keycode).
2014-07-29-21.51.57: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Minor tidying.
2014-07-29-21.29.30: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Can now actually be placed in a gui_plan ROW and displayed. ( :-) :-) :-))
2014-07-28-21.44.00: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api: Add theme: packed_theme::Packed_Theme arg to Before_First_Frame_Fn, Start_Of_Frame_Fn, Button_Press_Fn, Key_Press_Fn.
2014-07-27-19.04.25: Makefile: Fixed:  Was forgetting to remove .a files when cleaning out out .o files etc.
2014-07-27-18.53.24: src/lib/x-kit/widget/leaf/arrowbutton.api: Established, sketched in a first approximation to the required api definition.
2014-07-27-17.54.20: src/lib/x-kit/widget/leaf/arrowbutton.pkg: Established.
2014-07-27-14.40.35: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg:  More work.
2014-07-26-15.06.59: src/lib/x-kit/widget/xkit/theme/packed/default/packed-theme-imp.pkg:  First-cut codeup.
2014-07-26-12.46.19: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg: re_site_packed_widget_tree: Reworked layout algorithm using a nice simple linear surprise-free two-pass algorithm based on widget_pixels_min + widget_pixels_cut for each widget on each dimension. (Everyone complained about the eXene layout algorithm being unintuitive; this should resolved those complaints.)
2014-07-25-21.52.29: src/lib/x-kit/widget/space/packed/packedspace-to-widget.pkg: Added   pixels_high_cut: Float  (ditto for *wide*).    src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api: Similarly added   PIXELS_HIGH_CUT Float  (ditto for *WIDE*).
2014-07-25-21.40.02: src/lib/x-kit/widget/space/packed/packedspace-to-widget.pkg: Changed   pixels_high: Null_Or(Int)  ->   pixels_high_min: Int  (ditto for *wide*).    src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api: Similarly changed   | PIXELS_HIGH Null_Or(Int)   ->   | PIXELS_HIGH_MIN Int  (ditto for *WIDE*).
2014-07-24-21.52.28: src/lib/x-kit/widget/gui/running-gui.pkg:  Packed_Widget:  ROW, COL:  Change to pixels_wide_min: Ref(Int), pixels_wide_cut: Ref(Float).
2014-07-24-16.24.45: src/lib/x-kit/widget/gui/running-gui.pkg:  Packed_Widget:  ROW, COL:  Add pixels_wide, pixels_high: Ref(Null_Or(Int)).
2014-07-24-16.04.56: src/lib/std/src/int.api:  Add list_min, list_max.
2014-07-24-15.43.43: src/lib/std/src/unt.api:  Add list_min, list_max.
2014-07-24-13.21.28: src/lib/std/src/float.api:  Add list_min, list_max.
2014-07-23-22.31.23: src/lib/x-kit/widget/space/packed/packedspace-imp.pkg:  re_site_packed_widget_tree():  Add support for the new fixed-size widgets.
2014-07-23-13.04.29: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.api:  Packed_Widget_Option:  Add  PIXELS_HIGH Null_Or(Int),  PIXELS_WIDE Null_Or(Int).
2014-07-23-12.44.04: src/lib/x-kit/widget/space/packed/packedspace-to-widget.pkg: Packedspace_To_Widget: Added  pixels_high: Null_Or(Int), pixels_wide: Null_Or(Int),  fields.
2014-07-23-01.43.52: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Gadget_Mode: Added mousebutton_is_down: Bool. Not sure if this is a good idea.
2014-07-23-00.08.42: src/lib/x-kit/widget/xkit/theme/packed/default/look/: widget-imp.pkg, sprite-imp.pkg, object-imp.pkg: Pass start_of_frame Gadget_Mode arg on through to app client code.
2014-07-22-23.53.43: src/lib/x-kit/widget/gui/guiboss-to-gadget.pkg:  start_of_frame: Pass Gadget_Mode to gadget fn.
2014-07-22-23.34.09: src/lib/x-kit/widget/gui/: For consistency renamed  guiboss-to-widget.pkg -> guiboss-to-gadget.pkg
2014-07-22-23.24.56: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Gadget_To_Guiboss: Added   note_changed_gadget_activity: { id: iul::Id, is_active: Bool } -> Void   to allow gadget code to register activity (== <<grayed-out>>) changes with guiboss-imp.pkg
2014-07-22-23.05.11: src/lib/x-kit/widget/gui/gadget-to-guiboss.pkg: Added Gadget_Mode, mostly to pass active/keyboard_focus/mouse_focus flags to draw fns so that they can render widgets differently in response.
2014-07-22-22.53.23: src/lib/x-kit/widget/gui/: Renamed widget-to-guiboss.pkg -> gadget-to-guiboss.pkg because it actually applies equally to widgets, sprites and objects. <<gadget>> is the new generic name for widgets, sprites and objects collectively.
2014-07-22-22.28.47: Renamed gui-to-packed-theme.pkg -> packed-theme.pkg because I think it is on the road to being demoted from imp to static datastructure.
2014-07-22-22.10.46: src/lib/x-kit/widget/xkit/theme/packed/default/look/object-imp.pkg: Ditto.
2014-07-22-21.52.34: src/lib/x-kit/widget/xkit/theme/packed/default/look/sprite-imp.pkg: Same change.
2014-07-22-21.35.55: src/lib/x-kit/widget/xkit/theme/packed/default/look/widget-imp.pkg: Packed_Widget_Option: Changed PACKED_WIDGET_CALLBACK from  Packed_Widget -> Void  to  Null_Or(Packed_Widget) -> Void  so that it could be used at shutdown to tell apps our packed_widget ports are no longer valid, as well as being used at startup to give our packed_widget ports to interested app code.
2014-07-21-22.12.40: Light commenting and cleaning in the old leaf widget code.
2014-07-20-22.18.37: src/lib/x-kit/widget/old/basic/topwindow.api: For clarity renamed 'start' -> 'start_widgettree_running_in_topwindow'.
2014-07-20-19.30.33: Cleaning and commenting of old widget code.
2014-07-20-16.34.04: For greppability and clarity, renamed 'realize' -> 'realize_widget' various places.
2014-07-19-11.46.21: More tidying of old button widget code.
2014-07-19-10.11.51: Minor widget-code commenting + cleaning.
2014-07-18-19.33.39: Commenting in old widget stuff.
2014-07-18-10.32.51: Test...
2014-07-18-10.32.19: Test...
2014-07-18-10.09.40: Testing...
2014-07-18-10.07.35: Testing...
2014-07-18-02.04.57: Added src/lib/src/red-black-setxy-g.pkg, src/lib/src/digraphxy.pkg.
2014-07-18-00.56.55: src/lib/src/: Renamed graph.api -> digraph.api, graph.pkg -> digraph.pkg because that is what they in fact are.
2014-07-17-13.10.09: src/lib/src/: Added graph.api, graph.pkg.
2014-07-17-12.33.03: Added src/lib/src/tuplebasex.pkg
2014-07-16-13.43.47: src/lib/src/tuplebase.pkg: Comments on space consumption.
2014-07-16-13.24.35: Commenting.
2014-07-16-13.17.01: src/lib/src/tuplebase.pkg: Added atoms_apply to support iterating over all Atoms.
2014-07-16-12.51.53: src/lib/src/tuplebase.pkg: Added get_duples + get_triples to support iterating over all tuples, saving all tuples to disk etc.
2014-07-16-11.09.16: src/lib/src/tuplebase.pkg: Added drop_duple, drop_triple.  Package should now be usable. Completely untested.
2014-07-16-10.30.15: src/lib/src/tuplebase.pkg: Added get_triples12, get_triples13, get_triples23.
2014-07-16-09.46.43: src/lib/src/tuplebase.pkg: Added has_duple() and has_triple() calls.
2014-07-16-01.39.22: src/lib/src/tuplebase.pkg: Added explicit support for sub-tuplebases attached to Atoms.
2014-07-16-01.23.02: Good progress on implementing tuplebase.pkg.  Turned out not to need red-black-map-with-implicit-keys-g.pkg, owell.
2014-07-15-23.37.10: src/lib/src/: Established tuplebase.api + tuplebase.pkg.
2014-07-15-23.20.09: Added src/lib/src/red-black-map-with-implicit-keys-g.pkg to support tuplebase and src/lib/src/red-black-map-with-implicit-keys-generic-unit-test.pkg to exercise it.
2014-07-15-20.55.18: Added src/lib/src/map-with-implicit-keys.api.
2014-07-15-11.36.13: widget-imp.api, sprite-imp.api, object-imp.api: Revived the pprint_* fns, completing the transition from the last widget framework model to the current one.
2014-07-15-11.22.01: src/lib/x-kit/widget/gui/guiboss-to-widget.pkg: Added a before_first_frame: Site -> Void call, intended primarily for widgets to set their backgrounds.
2014-07-15-01.21.38: Chop more deadwood left from last transform.
2014-07-15-00.37.37: Added OBJECT + SPRITE support to stopped-gui.pkg, running-gui.pkg, gui-plan.pkg etc on the model of the existing WIDGET support.
2014-07-14-20.19.25: For clarity and consistency renamed bounce_space -> bouncespace, canvas_space -> canvasspace, packed_space -> packedspace.
2014-07-14-12.18.46: Differentiation of sprite-imp.pkg + object-imp.pkg from their widget-imp.pkg roots.
2014-07-14-11.38.43: Ditto.
2014-07-14-11.23.00: More follow-up renaming of packages.
2014-07-14-10.48.37: Deleted packed-widget-egg.pkg, a bit of deadwood I missed yesterday.
2014-07-14-10.40.04: Established sprite-imp.pkg + object-imp.pkg.
2014-07-14-10.20.45: For clarity and consistency renamed look-to-gui.pkg -> widget-to-guiboss.pkg, look-to-packed.pkg -> widget-to-packedspace.pkg
2014-07-14-10.06.53: Renamed packed-widget-imp.pkg -> widget-imp.pkg because there are not any other kinds of widgets.
2014-07-13-23.49.29: A bit more of the same.
2014-07-13-23.37.13: Chop much deadwood from old packed-widget state-/look-imp system.
2014-07-11-23.14.38: New refactored packed-widget-imp.pkg approached hooked up and exercised by widget-unit-test.pkg
2014-07-11-21.37.39: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-widget-imp.pkg: Created.
2014-07-09-00.51.04: Renamed experimental reserved words 'class' and 'class2' to 'class__' and 'class2__' to move them out of the way.  The remaining reserved words at this point are:  also and api as case elif else end eqtype esac except exception fi for fprintf fun herein if my or package printf sharing sprintf stipulate where with withtype
2014-07-08-21.44.44: bounce-look-imp-g.pkg, canvas-look-imp-g.pkg, packed-look-imp-g.pkg: Added a STARTUP_FN option to allow application-specific look-imp behavior at widget-instantiation time.
2014-07-08-20.46.26: Ported new STATE_CHANGE_FN + START_OF_FRAME_FN stuff from packed-look-imp-g.pkg to bounce-look-imp-g.pkg and canvas-look-imp-g.pkg.
2014-07-08-20.19.16: Light commenting.
2014-07-08-20.03.23: Dropped some deadwood.
2014-07-08-01.03.12: src/lib/x-kit/widget/gui/gui-event-types.pkg: Key_Xevtinfo: Added fields  keysym: Keysym,  ascii: String.   src/lib/x-kit/widget/xkit/app/xevent-to-gui-event.pkg: do_key_xevtinfo: Added logic to fill in new keysym + ascii fields.
2014-07-07-21.53.26: Formatting cleanup in the wake of the preceding changes.
2014-07-07-18.40.33: Eliminated '-for-x' from the names of various packages which in fact wound up on the platform-independent side of the Great Divide marked by windowsystem-imp-for-x.pkg
2014-07-05-19.14.47: src/lib/x-kit/xclient/src/window/keysym-to-ascii.pkg: For clarity and consistency renamed map_keysym_to_ascii -> translate_keysym_to_ascii.
2014-07-05-12.28.19: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg:  Packed_Look_Option:  Added STATE_CHANGE_FN and START_OF_FRAME_FN. That establishes enough infrastructure to write useful widgets.
2014-07-05-11.43.47: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Eliminated Iostate -- the wants_keystrokes and wants_mouseclicks booleans now live in src/lib/x-kit/widget/gui/gui-to-look.pkg instead.
2014-07-05-11.31.29: Major restructuring of bounce-space and canvas-space code on the model established by packed-space code, forced by immediate technical issues but needed in the long run anyhow.
2014-07-04-13.39.04: More x-event support similar to previous.
2014-07-02-15.57.01: src/lib/x-kit/widget/widget-unit-test.pkg: Added an assert() testing the preceding round-trip test:  Now the code is real! :-)
2014-07-02-15.45.59: src/lib/x-kit/widget/widget-unit-test.pkg:  Did a    checkbox_options =  [ gp::checkbox::LOOK_ARG  [  tli::BUTTON_PRESS_FN  button_press_fn  ] ]   and verified that the button_press_fn actually got called. That is the first successful end-to-end test: fake mousebutton-press propagated all the way down the Mythryl GUI+X stack, out through the X server, back up through the Mythryl X+GUI stack and invoked the application-level hook function for it. Whee! :-) :-) :-)
2014-07-02-14.29.14: src/lib/x-kit/widget/gui/gui-plan.pkg:  Checkbox_Option:  Added LOOK_ARG tli::Packed_Look_Arg.  src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg: make_checkbox_widget: Pass new gp::checkbox::LOOK_ARG stuff through to stopped_gui::BOOL (the critical missing link in the chain).
2014-07-02-13.26.03: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg: Did the plumbing to have BUTTON_PRESS_FN value actually called when note_mousebutton_press_event() fires.
2014-07-02-13.04.47: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg:  Packed_Look_Option:  Estabished BUTTON_PRESS_FN { value: ss::Value, button: evt::Mousebutton, point: xg::Point, client_to_state: ss::Client_To_State, look_to_gui: l2g::Look_To_Gui, look_to_packed: l2p::Look_To_Packed } -> Void, resolving current roadblock.
2014-07-02-12.51.59: Eliminated src/lib/x-kit/widget/theme/packed/look/packed-look.pkg, moving the contents into src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg, because it turns out this interface needs to be specialized per-type.
2014-07-02-00.16.28: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg: More fiddling.
2014-07-01-22.27.28: src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg: Make state_exports.client_to_state available in main body of imp.
2014-07-01-20.28.04: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Topwindow_Info now also tracks current_frame_number, seconds_per_frame, look_to_gui, space_to_gui.
2014-07-01-12.12.37: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Successfully passed first (fake!) mouseclick to widget look-imp via look_imp_info.gui_to_look.note_mousebutton_press_event. make tart :-) :-) :-).
2014-07-01-10.53.13: src/lib/x-kit/widget/gui/guiboss-imp.pkg: guievent_sink(): Added big case breaking out all evt::x::Event possibilities for individual handling.
2014-07-01-00.17.22: src/lib/x-kit/widget/gui/guiboss-imp.pkg: make_topwindow: guievent_sink:  More fiddling.
2014-06-30-23.54.04: src/lib/x-kit/widget/gui/guiboss-imp.pkg: stop_gui' now clears topwindow_info.running_gui.
2014-06-30-23.33.04: src/lib/x-kit/widget/gui/guiboss-imp.pkg: restart_gui' now sets topwindow_info.running_gui appropriately.
2014-06-30-22.27.02: src/lib/x-kit/widget/gui/guiboss-imp.pkg: make_topwindow() now adds an appropriate entry to *me.topwindows.
2014-06-30-22.03.46: src/lib/x-kit/widget/gui/guiboss-imp.pkg:  Guiboss_State:  Added  topwindows: Ref( im::Map( Topwindow_Info  ) )   field to track currently open topwindows.
2014-06-30-21.43.44: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Moved guievent_sink() processing into the main guiboss_imp microthread. (Before, it was running in calling thread.)
2014-06-30-20.26.25: src/lib/x-kit/widget/gui/gui-to-look.pkg:  Added  note_keyboard_key_press_event, note_keyboard_key_release_event, note_mousebutton_press_event, note_mousebutton_release_event, note_mouse_motion_event.
2014-06-30-12.58.37: test
2014-06-30-10.38.02: For clarity, renamed the various fake-some-user-input calls like send_keyboard* send_mouse_* to send_fake_keyboard* send_fake_mouse_* etc.
2014-06-30-10.12.57: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Changed to call  gui_event_to_string()  instead of  gui_event_name()  on ignored events.   src/lib/x-kit/widget/widget-unit-test.pkg: Added call to new guiboss_to_topwindow.send_mousebutton_press_event() fn, verified that it propagates through X server and xclient-ximps and all the way back up to guiboss-imp where the above event-ignore logic prints it out. Whee! :-)
2014-06-30-09.55.13: src/lib/x-kit/widget/gui/gui-event-to-string.pkg:  Added gui_event_to_string, initially showing just row,col for BUTTON_PRESS, BUTTON_RELEASE.
2014-06-29-21.54.59: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Implemented send_keyboard_key_press_event  send_keyboard_key_release_event  send_mousebutton_press_event  send_mousebutton_release_event  send_mouse_motion_event ...
2014-06-29-20.41.52: Ceeated src/lib/x-kit/widget/xkit/app/gui-event-to-xevent.pkg.
2014-06-29-13.43.23: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Added (currently unimplemented) send_keyboard_key_press_event  send_keyboard_key_release_event  send_mousebutton_press_event  send_mousebutton_release_event  send_mouse_motion_event ... because the new guiboss-based widget framework is becoming complete enough to think about round-trip widget unit testing.
2014-06-29-11.11.14: Planted comments various places pointing to the dataflow diagrams in xclient-ximps.pkg
2014-06-29-10.50.03: For clarity and consistency renamed  window-watcher.pkg -> client-to-window-watcher.pkg
2014-06-29-10.31.21: For clarity and consistency renamed  image.pkg -> client-to-image.pkg
2014-06-29-10.15.34: For clarity and consistency renamed  selection-port.pkg -> client-to-selection.pkg
2014-06-29-10.04.26: For clarity and consistency renamed  atom-port.pkg -> client-to-atom.pkg
2014-06-29-09.43.48: Similarly, renamed outbuf.pkg -> xsequencer-to-outbuf.pkg
2014-06-29-00.26.49: Similarly, renamed bounce-space.pkg -> guiboss-to-bounce-space.pkg
2014-06-29-00.04.19: Similarly, renamed canvas-space.pkg -> guiboss-to-canvas-space.pkg
2014-06-28-23.42.59: For clarity and consistency renamed packed-space.pkg -> guiboss-to-packed-space.pkg
2014-06-28-23.16.15: For clarity and consistency renamed widget-to-xserver.pkg -> windowsystem-to-xserver.pkg
2014-06-28-22.49.14: For clarity and consistency renamed  appwindow_to_xevent_router -> windowsystem_to_xevent_router.
2014-06-28-21.30.45: src/lib/x-kit/xclient/src/window/xclient-ximps.pkg: Added a more detailed ("cartographic") map of the x/gui imp interconnect graph.
2014-06-28-09.49.10: src/lib/x-kit/xclient/src/window/: For clarity and consistency renamed   keymap.pkg -> xevent-router-to-keymap.pkg.
2014-06-28-00.58.28: src/lib/x-kit/widget/gui/guiboss-imp.pkg no longer depends upon xtypes.pkg or xevent-types.pkg (which are X-specific, whereas guiboss-imp is supposed to be platform-agnostic).
2014-06-28-00.40.48: src/lib/x-kit/widget/xkit/app/xevent-to-gui-event.pkg: Code complete.
2014-06-27-15.52.07: Changed xevent_types package abbreviation from et to xet per preceding renaming.
2014-06-27-15.31.41: Renamed event-types.pkg -> xevent-types.pkg because as we get more event types it becomes increasingly ambiguous.
2014-06-27-13.20.30: src/lib/x-kit/widget/xkit/app/xevent-to-gui-event.pkg: Established, as an empty shell. This is going to translate from the X-specific event world to the platform-independent event world.
2014-06-27-09.40.04: src/lib/x-kit/widget/gui/gui-event-types.pkg: Added, cloned from xserver-timestamp.pkg + xtypes.pkg + xevent-types.pkg.   src/lib/x-kit/widget/gui/gui-event-to-string.pkg: Added, cloned from xevent-to-string.pkg.
2014-06-26-21.17.58: Events are now forwarded from windowsystem_imp_for_x to guiboss_imp. That largely completes the plumbing job: Next up is adding a platform-independent Guievent parallel to Xevent, then getting guiboss_imp to forward Guievents to widgets as appropriate.
2014-06-26-20.22.27: Commenting.
2014-06-26-09.15.31: src/lib/x-kit/widget/gui/guiboss-imp.pkg, src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: First baby step toward propagating xevents from windowsystem-imp-for-x to guiboss-imp and then ultimately to appropriate widget(s).
2014-06-24-19.30.54: src/lib/x-kit/widget/theme/guiboss-to-windowsystem.pkg: Converted Topwindow_Hints from record to List(Topwindow_Hint): That appears to complete conversion of src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg from single-topwindow to multi-topwindow structure.
2014-06-23-21.58.42: src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: Another baby step toward restructuring for clean multi-topwindow support. (Lost about a week because the circus was staying with us. :-)
2014-06-23-20.06.08: Test
2014-06-23-00.15.26: Test.
2014-06-16-09.46.53: More of the same. Getting there...
2014-06-15-18.55.34: src/lib/x-kit/widget/gui/guiboss-imp.pkg, src/lib/x-kit/widget/xkit/app/windowsystem-imp-for-x.pkg: More baby steps toward restructuring for clean multi-topwindow support.
2014-06-15-17.26.05: src/lib/x-kit/widget/gui/guiboss-imp.pkg: More restructuring toward goal of supporting multiple running topwindows in guiboss.
2014-06-15-10.28.30: src/lib/x-kit/widget/gui/guiboss-imp.pkg: Some restructuring toward goal of supporting multiple running topwindows in guiboss.
2014-06-14-23.11.02: Initial steps toward having windowsystem-imp-for-x.pkg support multiple topwindows.
2014-06-13-23.19.06: src/app/lex/lexgen.pkg: \111 escapes are now octal not decimal, and hex \xff escapes are supported. yacc does not actually have its own escapes, so that completes conversion from decimal to octal escapes.
2014-06-13-15.55.32: Mythryl char and string escapes \111 etc are now octal rather than decimal, per mainstream usage.  Also hex escapes \xff etc are now supported.  (mythryl-lex and mythryl-yacc still use decimal escapes.)
2014-06-13-14.19.24: Much stuff.
2014-06-13-14.18.49: Much stuff.
2014-06-13-09.40.04: Much converting of decimal string- and char-constant escape sequences into equivalent hex escape sequences.
2014-06-11-01.01.28: Implemented \xff style hex escapes in string and char constants.
2014-06-08-23.28.46: Decided "include" did not deserve to be a reserved word and returned it to the general identifier pool.  Syntax changes to make this work:  "include foo;" -> "include package foo;",  "include Foo;" -> "include api Foo;".
2014-06-08-17.15.57: Missed one file renaming.
2014-06-07-11.07.07: test...
2014-06-03-10.52.02: Upgraded development system from squeeze to wheezy: Mythryl builds and checks without change. (!)
2014-06-02-23.12.52: Eliminated remaining uses of "abstype" in the codebase per http://successor-ml.org/index.php?title=Degrade_abstype_to_derived_form, then stripped support for it from the compiler.
2014-06-01-13.21.19: For clarity and consistency, renamed xevent-to-window.pkg -> appwindow-to-xevent-router.pkg.
2014-06-01-09.10.40: src/lib/x-kit/xclient/src/window/xclient-ximps.pkg:  Update master dataflow diagram.
2014-05-31-22.33.31: Restore unintentionally truncated change-history file.
2014-05-31-22.22.38: src/lib/x-kit/widget/gui/issue-unique-look-id.pkg: Created, used to give look-imp ids a uil::Id type disjoint from the plain Id type, to reduce the chance of repeat bugs like the below look_to_gui.id vs gui_to_look.id bug.
2014-05-31-21.07.14: src/lib/src/issue-unique-id-wrapper-g.pkg:  New package.
2014-05-31-20.34.51: src/lib/core/init/pervasive.pkg, src/lib/src/issue-unique-id-g.pkg:  Had   next_id =  result + 1;   where   next_id :=  result + 1;   was needed.  *BLUSH*!  src/lib/x-kit/widget/gui/gui-boss-imp.pkg:  Had   look_to_gui.id   where   gui_to_look.id  was needed: This is a result of insufficient typesafety in the design.
2014-05-30-23.09.51: Test...
2014-05-30-23.08.54: Test.
2014-05-18-10.31.56: Renamed "fn" to "\\" because Mythryl is about functions and "fn" is the natural abbreviation for "function" (used thousands of times in the codebase) and being unable to use it as a local variable name gets just really aggravating, and I developed Mythryl specifically to have a language that did not aggravate me. "\\" is intended to be suggestive of lambda from the lambda calculus. I did not use "\" because it is really too short for the purpose, and because it has established meaning working with sets.
2014-05-17-09.41.36: Same for other.
2014-05-17-09.30.23: Same for image.
2014-05-17-09.22.37: Same for label.
2014-05-17-08.59.51: Same for select.
2014-05-17-08.48.00: Same for checkbox.
2014-05-17-08.35.52: Same for xslider and yslider.
2014-05-17-08.16.47: src/lib/x-kit/widget/gui/gui-plan.pkg: Added package knob.  src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg: make_knob_widget: Implemented mapping from (gui_plan::KNOB arg) to (stopped_gui::FLOAT arg).
2014-05-16-20.51.09: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Translation of Gui_Plan -> Stopped_Gui and Stopped_Gui -> Running_Gui is now indirected through src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg to allow customization of widget appearance. (Once they have appearances....)
2014-05-16-04.58.57: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Added (new) start_gui.
2014-05-15-19.33.39: Renamed run_gui -> restart_gui, end_gui -> stop_gui.
2014-05-15-05.34.38: Established a new gui-plan by cloning stopped-gui.
2014-05-15-05.27.22: For clarity and to free up the gui_plan package name, renamed gui_plan -> stopped_gui and gui_tree -> running_gui.
2014-05-13-19.43.58: src/lib/x-kit/widget/gui/gui-plan.pkg (etc): Added EXCEPTION packed-widget support.
2014-05-13-10.10.10: src/lib/x-kit/widget/gui/gui-plan.pkg (etc): Added IMAGE packed-widget support.
2014-05-13-06.05.29: src/lib/x-kit/widget/gui/gui-plan.pkg (etc): Added INT packed-widget support.
2014-05-12-19.51.57: src/lib/x-kit/widget/gui/gui-plan.pkg (etc): Added BOOL packed-widget support.
2014-05-11-22.45.22: Re-organized gui-plan.pkg and gui-tree.pkg (etc) based on the types of values maintained by widgets, instead of widget appearances.
2014-05-11-09.54.38: Established src/lib/x-kit/widget/space/packed/packed-state-imp.api.
2014-05-11-09.35.13: Established src/lib/x-kit/widget/xkit/theme/packed/default/look/packed-look-imp-for-x-g.pkg.
2014-05-10-23.40.29: src/lib/x-kit/widget/space/packed/: To reduce code duplication, combined the duplicated code between float-state-imp.pkg and string-state-imp.pkg into packed-state-imp-g.pkg.
2014-05-10-17.40.23: src/lib/x-kit/widget/space/packed/: float-state.pkg, string-state.pkg:  Redefined via invocations of packed-widget-state-g.pkg.
2014-05-10-17.24.24: src/lib/x-kit/widget/space/packed/packed-widget-state-g.pkg:  Established.
2014-05-10-09.39.41: src/lib/x-kit/widget/space/packed/float-state.pkg: Made generic, so that Float appears only as a parameter.
2014-05-10-08.05.05: Same for label, then renamed label-state-imp to string-state-imp.
2014-05-10-07.43.17: src/lib/x-kit/widget/space/packed: Emptied contents of label/ into packed/, eliminated label/.
2014-05-09-10.54.33: gui-boss-imp does its first visble draw to screen(!)
2014-05-07-20.30.37: src/lib/x-kit/widget/widget-unit-test.pkg: Expanded appwindow to 800x600 pixels as preparation for checkout / debugging of gui-boss-imp frame-display cycle.
2014-05-05-21.31.34: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Look_Imp_Info: Convert foreground and background fields from List(w2x::Display_Op) to gd::Gui_Displaylist.
2014-05-04-20.25.49: src/lib/x-kit/widget/gui/look-to-gui.pkg:  Added draw_changed_widget_foreground(), draw_changed_widget_background(), equivalent to note_changed_widget_foreground(), note_changed_widget_background() except that the display is expected to be updated ASAP instead of at the next scheduled frame.
2014-05-04-19.15.04: Propagated start_of_frame code to remaining look-imps.
2014-05-04-11.36.43: src/lib/x-kit/widget/xkit/theme/packed/default/look/default-label-look-imp-for-x.pkg: Sketched in a zeroth-order start_of_frame{} implementation.
2014-05-04-11.06.49: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Made Gui_Displaylist to being just Draw_Op, eliminating one [] pair per call in typical use.
2014-05-04-10.33.46: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Previous was wrong idea. Added recursive COLOR node to Draw_Op, returned Gui_Displaylist to being just List(Draw_Op).
2014-05-04-09.43.53: src/lib/x-kit/widget/theme/gui-displaylist.pkg:  As first step toward hierarchical displaylist, made Gui_Displaylist and Draw_Op mutually recursive.
2014-05-04-09.28.50: src/lib/x-kit/widget/gui/look-to-gui.pkg:  Added widget_has_visibly_changed {...}  call.
2014-05-03-22.31.41: src/lib/x-kit/widget/gui/look-to-gui.pkg: Changed note_changed_widget_foreground() to use new cross-platform gui_displaylist::Gui_Displaylist in place of X-specific List(w2x::Draw_Op).
2014-05-03-22.14.22: src/lib/x-kit/widget/theme/gui-displaylist.pkg: Gave the new cross-platform displaylist datastructure its own package.
2014-05-03-21.58.45: src/lib/x-kit/widget/theme/gui-to-appwindow.pkg: Added Displaylist + draw_displaylist()
2014-05-03-20.25.48: Ditto.
2014-05-03-19.49.09: Still more xkit tidying.
2014-05-03-18.12.10: More xkit tidying.
2014-05-03-17.53.15: x-kit Tidying.
2014-05-03-17.43.20: src/lib/x-kit/xclient/src/window/xserver-ximp.pkg: Tidying.
2014-05-03-16.08.01: src/lib/x-kit/widget/theme/: For clarity and consistency renamed appwindow.pkg -> gui-to-appwindow.pkg
2014-05-03-13.34.13: src/lib/x-kit/xclient/src/window/: For clarity and consistency, renamed xserver.pkg -> widget-to-xserver.pkg
2014-05-03-13.08.18: src/lib/x-kit/xclient/src/wire/: For clarity and considency renamed xsequencer.pkg -> xclient-to-sequencer.pkg.
2014-05-03-11.40.38: src/lib/x-kit/xclient/src/window/pen-cache.pkg: Updating.
2014-05-03-10.35.51: pen.pkg: More commenting.
2014-05-03-10.04.56: pen.pkg, pen-guts.pkg: Updating and commenting.
2014-04-28-06.54.52: src/lib/std/2d/xgeometry.api: Added make_nested_box.
2014-04-28-06.30.00: src/lib/x-kit/widget/lib/root-window.pkg: Eliminated annoying ROOT_WINDOW constructor.
2014-04-27-20.34.41: Eliminated various annoying constructors like dy::XDISPLAY.
2014-04-27-11.20.03: More fiddling around putting in place the infrastructure for gui per-frame processing.
2014-04-26-13.20.18: Various bits of wiring in prospective support for gui per-frame processing.
2014-04-25-06.52.22: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Establish stale_foreground and stale_background sets, misc.
2014-04-22-20.53.20: Makefile: Fix  make help
2014-04-22-20.28.17: Makefile: patch sh/patch-shebangs call, fixing a simple problem that prevents successful builds on any system but mine. *blush*
2014-04-22-07.40.19: Hilco Wijbenga had problems building a github snapshot because github snapshots lack seed binaries: To prevent repeats of this problem, updated README to document the problem and solution.
2014-04-20-15.09.40: Same for bounce-space.
2014-04-20-12.39.12: Same for canvas-space.
2014-04-20-12.11.11: packed-widget look-imps now all wired to packed-space-imp.
2014-04-20-10.54.28: Tidying in default-*-look-imp-for-x.pkg
2014-04-20-08.07.29: The three space imps now all export look-imp-to-space-imp ports.
2014-04-19-20.57.03: Established src/lib/x-kit/widget/space/bounce/look-to-bounce.pkg,  src/lib/x-kit/widget/space/canvas/look-to-canvas.pkg,  src/lib/x-kit/widget/space/packed/look-to-packed.pkg
2014-04-19-20.11.26: gui-to-look wiring of all look widgets, for clarity renamed packed-widget-control -> packed-to-look, canvas-widget-control -> canvas-to-look, bounce-widget-control -> bounce-to-look.
2014-04-19-13.40.28: src/lib/x-kit/widget/gui/gui-to-look.pkg: Created.
2014-04-19-10.28.06: src/lib/src/issue-unique-id.api: For improved typesafety, introduced Id as an opaque alias for Int, changed issue_unique_id to return Id, added an id_to_int: Id -> Int; (but deliberately no int_to_id: Int -> Id; !) and an id_zero: Id guaranteed never to be returned by issue_unique_id().  For improved convenience, duplicated all this stuff in pervasive.pkg.
2014-04-19-07.57.11: Renamed gui-boss.pkg -> client-to-gui.pkg, established look-to-gui.pkg.
2014-04-15-21.53.36: src/lib/x-kit/widget/space/packed/packed-space-imp.pkg: First-cut allocation of window-space to individual packed widgets. (Yay!)
2014-04-14-19.25.53: src/lib/std/src/unt.api:  Added   sort: List( Unt ) -> List( Unt );  and  sort_and_drop_duplicates: List( Unt ) -> List( Unt );
2014-04-14-19.15.47: src/lib/std/src/float.api:  Added       median: List( Float ) -> Float;   and   sort: List( Float ) -> List( Float );    src/lib/std/src/unt.api:  Added       sum: List( Unt ) -> Unt;   and   product: List( Unt ) -> Unt;
2014-04-14-19.05.30: src/lib/std/src/int.api: Added  sort_and_drop_duplicates: List( Int ) -> List( Int );
2014-04-14-18.56.58: src/lib/std/src/int.api: Added  sort:	  List( Int ) -> List( Int );
2014-04-14-11.30.41: src/lib/std/src/float.api:  Added       sum: List( Float ) -> Float;   and   product: List( Float ) -> Float;    src/lib/std/standard.lib:   Export   pkg float   -- should have done that years ago *blush*.
2014-04-14-10.47.19: src/lib/x-kit/widget/gui/gui-tree.pkg:  To make code more concise and readable, converted constructor values from tuples to records.
2014-04-13-11.44.25: src/lib/x-kit/widget/space/packed/packed-space-imp.pkg: fun re_site_packed_widget_tree() is established and being called, next step is to actually code it up. (!) 8-)
2014-04-12-17.45.08: src/lib/std/2d/xgeometry.pkg: (Much) more of the same.
2014-04-12-12.16.26: src/lib/std/2d/xgeometry.pkg: Changed  Point = POINT { row, col }  to  Point = { row, col }.  Something in the academic mind just loves verbostity.
2014-04-11-21.54.38: Much fiddling so packed-space.pkg can accept a Gui_Tree arg without introducing a package dependency cycle.
2014-04-10-08.11.50: Added pass_window_site() to src/lib/x-kit/widget/xkit/theme/canvas/default/default-canvas-theme-imp-for-x.pkg and src/lib/x-kit/widget/xkit/theme/bounce/default/default-bounce-theme-imp-for-x.pkg.
2014-04-10-08.03.21: src/lib/x-kit/widget/xkit/theme/packed/default/default-packed-theme-imp-for-x.pkg: Added pass_window_site().
2014-04-10-07.49.23: src/lib/x-kit/widget/xkit/app/appwindow-for-x.pkg: Added pass_window_site().
2014-04-09-19.25.39: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Now saves endstate-oneshots for bounce-space, canvas-space and packed-space imps in gui-tree, then retrieves and uses them in end_run().
2014-04-09-10.55.24: More modernization: endstate-oneshot support in bounce-space, canvas-space and packed-space.
2014-04-09-07.03.52: Modernization: id support in bounce-space, canvas-space and packed-space.
2014-04-06-16.43.44: src/lib/x-kit/widget/xkit/app/appwindow-for-x.pkg: Use window-site (size+position) supplied by client code, instead of hardwiring it.
2014-04-06-13.15.19: src/lib/x-kit/widget/xkit/app/appwindow-for-x.pkg: Thorough modernization.
2014-04-05-08.09.31: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: end_gui(): Use previous when reconstructing Gui_Plan instances from Gui_Tree instances.
2014-04-05-07.57.03: src/lib/x-kit/widget/gui/gui-tree.pkg: Added slots for look-imp endstate oneshots.  src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Fill in those slots when building Gui_Tree instances.
2014-04-04-21.21.46: look imps now return final state via their endstate-oneshots.
2014-04-03-20.38.03: All look-imps now have endstate-oneshots to return their final state when endgun fires.
2014-04-03-11.49.37: All look widget ports now have id fields.
2014-04-02-07.18.52: src/lib/x-kit/widget/xkit/theme/packed/default/look/default-label-look-imp-for-x.pkg: Ripped out the mandatory-client-supplied-id logic as first step toward implementing optional-client-supplied-id logic on the pattern of {ball,node,label,slider}-state-imp.pkg.
2014-04-01-21.16.31: id arg is now client-optional on ball-state-imp, node-state-imp, label-state-imp and slider-state-imp.  Also the id is published in their exported client ports.
2014-04-01-06.41.08: src/lib/x-kit/widget/space/bounce/ball/ball-state-imp.pkg: Client specification of ball id is now optional rather than mandatory.
2014-03-30-20.28.40: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Added get_fresh_imp_id and pass_fresh_imp_id calls.
2014-03-30-19.59.31: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: gui_tree__to__gui_plan() is now first-cut complete.
2014-03-29-21.57.27: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: More work sketching in gui_tree__to__gui_plan.
2014-03-29-15.15.18: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Started work on  fun gui_tree__to__gui_plan.
2014-03-29-10.16.03: src/lib/x-kit/widget/gui/gui-plan.pkg: pprint_gui_plan() should now be usable.
2014-03-28-20.30.32: More infrastructure support for pprint_gui_plan() in src/lib/x-kit/widget/gui/gui-plan.pkg.
2014-03-27-23.33.54: Fill in prettyprint support in *-state-imp.pkg
2014-03-23-21.54.57: More filling in parts of gui-boss-imp.pkg architecture. In particular, added pprint_gui_plan() to src/lib/x-kit/widget/gui/gui-plan.pkg as debug support.
2014-03-22-17.06.04: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Sketched in more of the core logic.
2014-03-21-23.30.10: src/lib/x-kit/widget/gui/gui-plan.pkg: Replace Float args by more general and future-proof Layout_Hint lists.
2014-03-21-22.22.44: Added *_LOOK_CALLBACK options to *-look-imp.pkg.
2014-03-18-22.53.14: label-state-imp.pkg, label-look-imp.pkg:  Changed my mind, decided that supporting maildrops and callbacks both was too redundant and that a callback can always wrap a maildrop op anyhow, so eliminated the exported maildrop calls.
2014-03-18-22.33.58: src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg: Added LABEL_STATE_CALLBACK to existing LABEL_STATE_MAILDROP for increased client flexibility.
2014-03-18-22.22.20: src/lib/x-kit/widget/xkit/theme/packed/default/look/default-label-look-imp-for-x.pkg: More tweaking for increased client flexibility: port callbacks in addition to port maildrops.
2014-03-18-22.00.30: src/lib/x-kit/widget/xkit/theme/packed/default/look/default-label-look-imp-for-x.pkg: Replace Oneshot_Maildrops by plain Maildrops for increased client flexibility.
2014-03-18-21.35.13: src/lib/x-kit/widget/xkit/theme/packed/default/look/default-label-look-imp-for-x.pkg et al: Fiddling to be more client-friendly.
2014-03-15-23.56.52: Decided three gui representations was one too many: Removed gui-tree.pkg and renamed gui-seed.pkg -> gui-tree.pkg
2014-03-15-23.02.39: src/lib/x-kit/widget/gui/gui-seed.pkg: Sketched in first-cut contents.
2014-03-15-12.11.45: src/lib/x-kit/widget/gui/gui-boss-imp.pkg: Started sketching in operational logic.
2014-03-15-09.52.06: Renamed gui-imps to gui-seed.
2014-03-14-23.12.23: Cleaned up some of the mess left by preceding.
2014-03-14-22.48.27: Did *_Plea-removal on remaining imps (atom-ximp.pkg keymap-ximp.pkg selection-ximp.pkg window-watcher-ximp.pkg xevent-to-window-ximp.pkg xserver-ximp.pkg xsequencer-ximp.pkg template-imp.pkg) but left outbuf-ximp.pkg alone because it needs visibilty into the requests to optimize request batches.
2014-03-12-23.11.23: Converted about half the remaining imps to *_Plea-free form: default-ball-look-imp-for-x.pkg default-node-look-imp-for-x.pkg default-label-look-imp-for-x.pkg default-xslider-look-imp-for-x.pkg default-yslider-look-imp-for-x.pkg default-knob-look-imp-for-x.pkg gui-boss-imp.pkg image-ximp.pkg ro-pixmap-ximp.pkg shade-ximp.pkg bounce-space-imp.pkg canvas-space-imp.pkg packed-space-imp.pkg slider-state-imp.pkg default-bounce-theme-imp-for-x.pkg default-canvas-theme-imp-for-x.pkg default-packed-theme-imp-for-x.pkg
2014-03-11-23.48.14: Modernized ball-state-imp.pkg, node-state-imp.pkg, label-state-imp.pkg, slider-state-imp,pkg by eliminating *_Plea type from each.
2014-03-11-00.15.06: look imp layer now looks usably complete. Except for not actually containing draw logic. :-)
2014-03-10-00.54.09: note_new_state support in look imps.
2014-03-09-23.34.53: widget_control_callbacks support in look imps.
2014-03-09-14.01.30: Cosmetics.
2014-03-09-13.50.03: Ported pass_state from src/lib/x-kit/widget/space/canvas/node/node-state-imp.pkg to src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg.
2014-03-09-13.04.47: Ported pass_state from src/lib/x-kit/widget/space/bounce/ball/ball-state-imp.pkg to src/lib/x-kit/widget/space/canvas/node/node-state-imp.pkg.
2014-03-09-12.48.05: Ported pass_state from src/lib/x-kit/widget/space/packed/slider/slider-state-imp.pkg to src/lib/x-kit/widget/space/bounce/ball/ball-state-imp.pkg.
2014-03-09-12.32.03: Ported new functionality from src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg to src/lib/x-kit/widget/space/packed/slider/slider-state-imp.pkg.
2014-03-09-11.37.09: Ported new functionality from src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg to src/lib/x-kit/widget/space/canvas/node/node-state-imp.pkg.
2014-03-09-10.45.53: Ported new functionality from src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg to src/lib/x-kit/widget/space/bounce/ball/ball-state-imp.pkg.
2014-03-09-01.37.43: src/lib/x-kit/widget/space/packed/label/label-state-imp.pkg: This imp looks functionally complete now.
2014-03-08-11.26.45: Make endstate_maildrops optional.
2014-03-08-01.52.13: More sketching in details of the gui management framework.
2014-03-07-22.10.52: Sketch in more bounce-space stuff via clone-and-mutate of corresponding canvas-space stuff.
2014-03-06-22.58.22: Sketched in some of the canvas-space infrastructure (nodes) by clone-and-mutate of the packed-space label stuff.
2014-03-06-07.50.05: Renamed gui-plat.pkg -> gui-imps.pkg for better leading-letter alphabetic diversity; now a gui_plan holds widget eggs, a gui_imps tree holds widget imps, and a gui_tree assigns window rectangles to the widget imps.
2014-03-06-07.16.21: Renamed gui-definition.pkg -> gui-plan.pkg for brevity, established gui-tree.pkg + gui-plat.pkg: a gui_plan holds widget eggs, a gui_tree holds widget imps, and gui_plat assigns concrete window pixel rectangles to each widget imp.
2014-03-05-23.13.57: More noodling around filling in the gui-management logic.
2014-03-05-07.27.09: src/lib/x-kit/widget/space/packed/slider/slider-state-imp.pkg:  Filled in some of the internal details.
2014-03-04-23.10.42: More gui architecture noodling.
2014-03-04-11.36.36: Replace "queen" with "boss" various places.  Queen has a rarer first letter -- good for 3-letter package acronyms -- but boss is shorter and carries a clearer "manager" denotation than "queen" in contemporary usage.
2014-03-02-23.49.20: More noodling around sketching in the gui-management architecture.
2014-03-02-13.36.31: Much groping toward a viable gui framework.
2014-02-24-21.35.16: Modernize protocol used by three-phase-startup ximps.
2014-02-24-21.35.10: Modernize protocol used by three-phase-startup ximps.
2014-02-24-21.34.32: Modernize protocol used by three-phase-startup ximps.
2014-02-24-21.33.57: Modernize protocol used by three-phase-startup ximps.
2014-02-15-10.26.03: Tweak widget-unit-test.pkg
2014-02-13-23.52.26: src/lib/x-kit/widget/xkit/theme/default/: Established default-theme-for-x.pkg
2014-02-13-21.42.17: Test from new laptop
2014-02-13-21.17.24: Test from new laptop
2014-02-13-21.12.50: Test from new laptop
2014-02-10-23.05.40: Populated   src/lib/x-kit/widget/xkit/app/app-window-for-x.pkg   with code cribbed from   src/lib/x-kit/widget/widget-unit-test.pkg.
2014-02-10-21.40.25: src/lib/x-kit/widget/gui/gui-tree.pkg:  Sketched in minimal Gui_Tree definition.
2014-02-09-11.26.22: Cloned src/lib/x-kit/widget/shape/label-shape.pkg   into   src/lib/x-kit/widget/xkit/app/app-window-for-x.pkg   to establish a valid imp skeleton.
2014-02-09-11.05.59: Cloned src/lib/x-kit/widget/shape/label-shape.pkg   into   src/lib/x-kit/widget/gui/gui-queen.pkg   to establish a valid imp skeleton.
2014-02-09-10.53.06: Cloned src/lib/x-kit/widget/shape/label-shape.pkg   into   src/lib/x-kit/widget/space/canvas-space.pkg   to establish a valid imp skeleton.
2014-02-09-10.41.13: Cloned src/lib/x-kit/widget/shape/label-shape.pkg  into   src/lib/x-kit/widget/xkit/theme/default/default-label-skin-for-x.pkg  to establish a valid imp skeleton.
2014-02-09-10.24.16: Cloned src/lib/x-kit/widget/state/label-state.pkg  into  src/lib/x-kit/widget/shape/label-shape.pkg  to establish a valid imp skeleton.
2014-02-09-10.11.20: Cloned src/lib/x-kit/xclient/src/wire/sample-ximp.pkg  into  src/lib/x-kit/widget/state/label-state.pkg  to establish a valid imp skeleton.
2014-02-09-09.45.22: src/lib/x-kit/widget/:  Established label: state/label-state.pkg, shape/label-shape.pkg, xkit/theme/default/default-label-skin-for-x.pkg
2014-02-08-23.53.12: src/lib/x-kit/widget/xkit/theme/default/:  Established default-yslider-skin-for-x.pkg
2014-02-08-23.32.26: src/lib/x-kit/widget/gui/:  Established gui_tree.pkg, gui_queen.pkg.
2014-02-08-23.16.20: src/lib/x-kit/widget/: Established state/slider-state.pkg, shape/yslider-shape.pkg.
2014-02-08-23.01.05: src/lib/x-kit/widget/space/:  Established canvas_space.pkg
2014-02-08-22.49.30: src/lib/x-kit/widget/xkit/app/:  Established app-window-for-x.pkg.
2014-02-08-22.20.53: src/lib/x-kit/widget/:  Directory structure cleanup, write up design overview in README.OVERVIEW.
2014-02-08-16.08.43: Minor fixes to compile under gcc 4.7 (previous development on gcc 4.4.5) and (32bit) Linux kernel 3.2 (previous development on 2.6).
2014-02-07-10.14.18: src/lib/x-kit/widget/: Moved existing new-world X stuff out of old/ dirtree.
2014-02-07-09.25.36: src/lib/x-kit/widget/: Moved everything into new dir old/ to better segregate the old-world X stuff from the incoming new-world X stuff.
2014-02-03-22.49.02: src/lib/x-kit/xclient/src/window/cs-pixmat.pkg:  Had rgb in wrong order in two places.   src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Now successfully sends and receives pixmaps.
2014-02-02-19.29.22: src/lib/x-kit/xclient/src/window/cs-pixmat.pkg:  Successfully sent simple rw_matrix::Rw_Matrix(rgb8::Rgb8) pixrect to server-side window.  :-) :-) :-) !
2014-02-02-16.13.10: src/lib/x-kit/xclient/src/window/cs-pixmat.pkg:  Successfully returns server-side window rectangles as simple rw_matrix::Rw_Matrix(rgb8::Rgb8).
2014-02-01-13.09.35: src/lib/std/src/byte.pkg:  Moved reverse_byte_bits() here from  src/lib/x-kit/xclient/src/window/cs-pixmap.pkg  because it is not X-specific.
2014-01-31-10.01.13: src/lib/x-kit/xclient/src/window/: Cloned cs-pixmat.pkg from cs-pixmap.pkg to start work on using ZPIXMAP in place of XYPIXMAP for X client<->server transfers.
2014-01-29-20.41.10: src/lib/x-kit/widget/lib/widget-attribute.pkg: Restored lost vowels (cvt -> convert).
2014-01-26-18.55.16: src/lib/src/overloaded-vector-and-matrix-ops-unit-test.pkg:  Added previously failing test cases back;  they seem to have be fixed by adding (OVERLOADED_TYPEVAR,INCOMPLETE_RECORD_TYPEVAR) case to unify_typevars() in src/lib/compiler/front/typer/types/unify-typoids.pkg.
2014-01-26-18.25.23: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax.api:  Changed VARIABLE_IN_EXPRESSION.typescheme_args from Ref(List(tdt::Typoid)) back to just List(tdt::Typoid). (Undoing an overloaded-variable fix that ultimately proved unneeded.)
2014-01-25-12.22.13: src/lib/core/init/pervasive.pkg: Added Complex, Quaternion.
2014-01-24-21.36.04: src/lib/core/init/built-in.pkg:  Add rw_matrix_of_eight_byte_floats, rw_matrix_of_one_byte_unts.   src/lib/core/init/pervasive.pkg:  Add it::rw_matrix_of_eight_byte_floats::get, it::rw_matrix_of_one_byte_unts::get to (_[]) and it::rw_matrix_of_eight_byte_floats::set, it::rw_matrix_of_one_byte_unts::set to (_[]:=).  src/lib/src/overloaded-vector-and-matrix-ops-unit-test.pkg:  Switch to using overloaded (_[]) and (_[]:=) in exercise_rw_matrix_of_eight_byte_floats() and exercise_rw_matrix_of_one_byte_unts().
2014-01-24-15.31.45: src/lib/compiler/front/typer/types/resolve-overloaded-variables.pkg:  Make new overloading logic the default, start ripping out the old stuff.
2014-01-22-19.41.11: src/lib/compiler/front/typer/types/resolve-overloaded-variables.pkg:  Change to optionally use mainline unify_typoids() instead of simplified local version:  Engaging this option improves overloading behavior.
2014-01-17-11.52.45: src/lib/compiler/front/typer/types/:  For clarity and consistency renamed unify-types.pkg -> unify-typoids.pkg, other light tidying.
2014-01-08-22.09.02: src/lib/compiler/front/typer/types/resolve-overloaded-variables.pkg: Fiddling.
2014-01-05-19.18.54: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax-junk.pkg: Added replace_overloaded_variables_in_core_declaration().
2014-01-05-11.09.43: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax-junk.pkg: Added core_declaration_contains_overloaded_variable
2014-01-04-10.35.52: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax-junk.pkg:  Added fun clone_core_declaration ().
2013-12-30-13.51.59: Minor cleaning.
2013-12-30-13.23.58: Minor cleaning.
2013-12-29-15.34.12: Tidying centering on src/lib/compiler/back/top/closures/make-nextcode-closures-g.pkg
2013-12-29-11.13.15: MAJOR CHANGE: Made two small edits (search for FloatAsEqualityType) which seem to have successfully restored Float to its rightful place as an equality type.
2013-12-29-10.17.39: MAJOR CHANGE: Switched from   .{ ... }   to  {. ... }   syntax for tiny fns, because the latter tends to format more naturally in multiline form.
2013-12-28-11.47.55: Update copyrights 2013 -> 2014.
2013-12-28-11.43.43: Minor backend lowhalf tidying.
2013-12-25-21.14.35: src/lib/compiler/back/top/closures/: Renamed split-nextcode-fn-into-minimal-size-fns.pkg -> unnest-nextcode-fns.pkg
2013-12-25-16.01.36: Renamed src/lib/compiler/back/top/closures/nextcode-globalfix.pkg -> src/lib/compiler/back/top/closures/split-nextcode-fn-into-minimal-size-fns.pkg.
2013-12-24-15.09.56: src/lib/compiler/back/top/nextcode/translate-anormcode-to-nextcode-g.pkg: Commenting and cleaning.
2013-12-22-20.35.27: Fixed last overloading bug, immediately hit a new one which manifests as   Uncaught exception REGISTER_MAPF
2013-12-11-21.17.03: src/lib/core/init/pervasive.pkg:  Floating point division is now properly overloaded onto / instead of having to use // (gaak). Also added overloadings for cross-multiplication of Xyz values, dot-multiplication of Xyz values, Float * Xyz value, subtraction of Xyz values and similar good stuff.
2013-12-10-22.37.08: src/lib/core/init/pervasive.pkg:  Add to overloaded ops on *:   xyz * mat43  and  mat43 * mat43.
2013-12-07-20.48.21: Much re-plumbing to provide  maybe_prettyprint_machcode_controlflow_graph()  src/lib/compiler/back/low/mcg/print-machcode-controlflow-graph-g.pkg  with access to  prettyprinter_or_null.  This suppresses the obnoxious assembly code the compiler has been spewing to the console since the prettyprinter rewrite disrupted things, and also takes us one step closer to proper harmonious integration between the backend upper and lower halves.
2013-12-06-17.44.14: src/lib/compiler/back/low/main/main/backend-lowhalf-g.pkg: First pass at re-plumbing to pass   npp: Null_Or(pp::Prettyprint_Mill)   through to the backend, to start standardizing debug/prettyprint support between backend upper and lower halves (which started out as separate projects from separate universities, hence have some coherence issues).
2013-12-05-21.11.09: src/lib/prettyprint/big/src/core-prettyprint-mill-types.api: Split INDENT from BREAK. Combining them was a design disaster. The new arrangement has clearer code and will I hope be more intuitive to use.
2013-12-02-22.33.59: src/lib/src/overloaded-vector-and-matrix-ops-unit-test.pkg:  Exercise rw_matrix_of_one_byte_unts.
2013-12-02-22.04.48: Created src/lib/std/src/rw-matrix-of-one-byte-unts.pkg.
2013-12-02-21.28.40: src/lib/src/overloaded-vector-and-matrix-ops-unit-test.pkg:  Added basic exercise code for   src/lib/std/src/rw-matrix-of-eight-byte-floats.pkg.
2013-12-01-21.54.10: src/lib/std/src/rw-matrix-of-eight-byte-floats.pkg:  Created, by clone-and-mutate of src/lib/std/src/rw-matrix.pkg + src/lib/std/src/rw-vector-of-eight-byte-floats.pkg
2013-12-01-21.13.46: Added:  src/lib/std/src/typelocked-rw-matrix.api
2013-12-01-20.45.00: rm src/lib/src/matrix.pkg;  rm src/lib/src/matrix.api;  Tidying on src/lib/std/src/rw-matrix.pkg
2013-11-30-19.23.44: src/lib/compiler/back/top/lambdacode/prettyprint-lambdacode-expression.pkg: Rewrote to use Standard_Prettyprint_Mill interface like the other system prettyprinters, for better interaction with system logging etc.
2013-11-30-15.23.49: Completed renaming SUBSCRIPT exception to INDEX_OUT_OF_BOUNDS.
2013-11-30-09.46.35: Miscellaneous tidying.
2013-11-28-11.50.54: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: Add support for r[ow]_matrix_[gs]et_[with_boundscheck]?
2013-11-24-14.01.45: src/lib/core/init/built-in.pkg:  Tidying.
2013-11-24-11.59.17: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: More tidying.
2013-11-23-23.34.47: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg:  More random tidying.
2013-11-23-19.37.28: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg:  For consistency and clarity, renamed  f64_sub -> rw_f64_vec_get,  f64chk_sub -> rw_f64_vec_get_with_boundscheck,  f64_update -> rw_f64_vec_set,  f64chk_update -> rw_f64_vec_set_with_boundscheck.
2013-11-23-19.15.22: src/lib/compiler/back/top/highcode/highcode-baseops.api: Similar renaming for consistency and clarity.
2013-11-23-13.32.41: src/lib/core/init/built-in.pkg:  package rw_vector_of_chars:  For consistency and clarity, renamed  create  to  make_nonempty_rw_vector_of_chars.
2013-11-23-13.26.37: src/lib/core/init/built-in.pkg: For consistency and clarity, renamed  get_data  to  get_vector_datachunk.
2013-11-23-13.15.34: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency and clarity, renamed  get_seq_data  to  get_vector_datachunk.
2013-11-23-12.52.55: For consistency and clarity, pervasively renamed   new_array0  to  make_zero_length_vector.
2013-11-23-12.41.11: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency and clarity, renamed  new_array0  to  make_zero_length_vector.
2013-11-23-12.28.08: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency and clarity, renamed  safe_rw_vec_set  to  rw_vec_set_with_boundscheck.
2013-11-23-12.08.23: For consistency and clarity, pervasively renamed   check_set  to  set_with_boundscheck.
2013-11-23-11.57.03: For consistency and clarity, pervasively renamed   check_sub  to  get_with_boundscheck.
2013-11-23-11.45.55: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency and clarity, renamed  safe_vec_get  to  ro_vec_get_with_boundscheck.
2013-11-23-11.32.12: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency and clarity, renamed  safe_rw_vec_get  to  rw_vec_get_with_boundscheck.
2013-11-23-11.13.07: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg: For consistency, clarity and soulfilling goodness, renamed  vec_get  to  ro_vec_get.
2013-11-23-10.58.19: Pervasively renamed _AFTER_BOUNDS_CHECK to _WITH_BOUNDSCHECK for brevity and consistency.
2013-11-23-10.41.11: src/lib/compiler/front/semantic/symbolmapstack/: For brevity renamed base-types-and-ops-symbolmapstack.pkg -> base-types-and-ops.pkg.
2013-11-23-10.22.09: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops-symbolmapstack.pkg: For readability, renamed  inlordof  to  ro_int8_vec_get_with_boundscheck.
2013-11-23-00.39.26: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops-symbolmapstack.pkg: For readability, renamed  inlstore  to  rw_int8_vec_set_with_boundscheck.
2013-11-22-23.57.06: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops-symbolmapstack.pkg: For readability, renamed  inlbyteof  to  rw_int8_vec_get_with_boundscheck.
2013-11-22-23.43.16: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops-symbolmapstack.pkg: For readability, renamed  store  to  rw_int8_vec_set.
2013-11-22-23.28.05: src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops-symbolmapstack.pkg: For readability, renamed  ordof  to  ro_int8_vec_get.
2013-11-22-22.43.25: src/lib/compiler/back/top/highcode/highcode-baseops.api:  Baseop:  GET_VECSLOT_NUMERIC_CONTENTS, SET_VECSLOT_TO_NUMERIC_VALUE:  For readability renamed  checked  to  checkbounds.
2013-11-21-13.35.10: src/lib/core/init/pervasive.pkg:  Added:   overloaded my (_[]:=) :   ((X, Y, Z) -> W).
2013-11-21-09.55.30: src/lib/src/overloaded-vector-ops-unit-test.pkg: v[1] notation checks out for initial set of overloaded ops (vector, rw_vector, vector_of_chars, rw_vector_of_chars, vector_of_one_byte_unts, rw_vector_of_one_byte_unts, rw_vector_of_eight_byte_floats).
2013-11-20-23.20.27: src/lib/src/overloaded-vector-ops-unit-test.pkg:  Established.
2013-11-19-10.21.17: src/lib/compiler/front/typer/types/resolve-overloaded-variables.pkg: Victory!  Failing case now works:  v = abc; overloaded my bar: ((X, Y) -> Z) =  (string::get); bar(v,1);
2013-11-17-14.08.26: src/lib/compiler/front/typer/types/resolve-overloaded-variables.pkg:  Save new typescheme_args ref in note_overloaded_variable(), update it in resolve_overloaded_variable().
2013-11-17-13.35.38: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax.api: Deep_Expression: VARIABLE_IN_EXPRESSION: typescheme_args: Changed type from List(tdt::Typoid) to Ref(List(tdt::Typoid)) to allow sane updating after resolution of overloaded variables.
2013-11-17-10.03.50: src/lib/prettyprint/big/src/standard-prettyprint-mill.api: Reduce duplication and improve consistency and customizability by introducing fns for four standard syntactic constructs: lists, records, tuples and blocks.
2013-11-16-11.25.35: src/lib/compiler/front/typer/print/prettyprint-value.pkg, src/lib/compiler/front/typer/print/latex-print-value.pkg: Add support to display inlining_data.
2013-11-15-22.51.02: Random tidying centering on src/lib/compiler/front/typer/types/unify-and-generalize-types-g.pkg.
2013-11-10-18.18.36: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax.api:  Deep_Expression:  Same type-change for  VALCON_IN_EXPRESSION.
2013-11-10-17.37.28: src/lib/compiler/front/typer-stuff/deep-syntax/deep-syntax.api:  Deep_Expression:  Changed type of  VARIABLE_IN_EXPRESSION  from  ((Ref(vac::Variable), List(tdt::Typoid))   to   {  var: (Ref(vac::Variable),  typescheme_args: List(tdt::Typoid)  }   for readability, civility, sanity, and the greater glory of Gorignak.
2013-11-10-11.41.55: Ditto.
2013-11-10-00.38.19: src/lib/compiler/front/typer/print/unparse-deep-syntax.pkg:  More prettyprint modernization.
2013-11-09-23.07.47: More prettyprint client modernization.
2013-11-09-11.54.01: src/lib/compiler/front/typer/print/prettyprint-type.pkg, prettyprint-value.pkg:  Modernization per new prettyprint-mill api.
2013-11-09-09.45.04: src/lib/compiler/front/typer/print/unparse-junk.api: Got rid of unparse_comma() and unparse_comma_newline(), obsoleted by new prettyprinter api.
2013-11-08-09.21.43: src/lib/prettyprint/big/src/standard-prettyprint-mill.api:  Tidying.
2013-11-07-20.58.18: Added pp.rulename calls as needed.
2013-11-07-14.51.39: standard-prettyprint-mill.pkg clients converted to new api, to first approximation at least.
2013-11-07-11.28.22: More of the same.
2013-11-07-10.34.39: Update some client packages to latest prettyprint mill api.
2013-11-07-09.47.36: src/lib/prettyprint/big/src/standard-prettyprint-mill.api: Usage comments.
2013-11-06-14.58.05: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg: For cleaner semantics, changed INDENT and EXDENT to change margin relative to left margin of box rather than relative to current left margin. Now the only difference between INDENT and EXDENT is that EXDENT forces a newline when wrapped.  src/lib/prettyprint/big/src/standard-prettyprint-mill-g.pkg:  Changed pp.ind and pp.exd to have identical semantics to pp.txt except for respectively setting INDENT and EXDENT where pp.txt sets NODENT. This gives much cleaner, more orthogonal semantics and somewhat more compact notation in practice.
2013-11-05-23.55.18: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg:  Fixed a few more bugs.  Now passes all the test cases in src/lib/prettyprint/big/src/test/prettyprint-mill-lib-unit-test.pkg.
2013-11-03-21.18.34: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg: Spent the morning exploring all possible ways of getting newline handling wrong in group_tokens_into_lines() + flatten_lines_back_to_tokens() (a total of 35 lines of code).  src/lib/prettyprint/big/src/test/prettyprint-mill-lib-unit-test.pkg:  Added test_basic_newline_handling() with nine tests to consolidate my meager progress.
2013-11-02-23.02.19: Changed "space" to "blank" pervasively in the prettyprint stuff because I think it reads better.
2013-11-02-22.25.07: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg: Now has a reasonable initial set of optimization passes and -- more importantly -- a clean solid foundation going forward.
2013-11-02-18.22.46: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg: Introduced type Loc and fn update_loc and restructured de_box() around them:  Resulting code is much cleaner and in principle at least should properly implement indent()/exdent() now. (Untested.)
2013-11-02-15.24.41: src/lib/prettyprint/big/src/core-prettyprint-mill-g.pkg: Restructure to support many simple passes instead of a few complex passes.
2013-10-29-22.31.26: src/lib/compiler/front/typer/print/unparse-deep-syntax.pkg:  Cleanup and pp.rulename insertion.
2013-10-28-21.49.42: Started adding prettyprinter debug support, e.g. pp.rulename support and calls to it in unparse*.pkg files.
2013-10-28-01.29.30: Renamed "before" op to "then" because (1) "before" is used more often as a variable name (2) we have already appropriated if else elif fi as reserved words, so we might as well add "then" and have the complete set (3) principle of Least Surprise: programmers will be much less surprised to find that "then" has odd predefined semantics than to find that "before" does so.
2013-10-27-21.15.19: Get rid of en_pp() and all calls to it. (A kludge obsoleted by the new standard-prettyprint-mill.api.)
2013-10-27-15.10.25: Converting various client packages over to the new standard-prettyprint-mill.api. The screams you hear are ugliness leaving the codebase.
2013-10-26-18.04.29: src/lib/prettyprint/big/src/base-prettyprint-mill-g.pkg: Chopped out deadwood left by designs past.
2013-10-26-10.47.19: src/lib/prettyprint/big/src/out/prettyprint-output-stream.api:  Cleanup.
2013-10-25-21.51.55: src/lib/prettyprint/big/src/standard-prettyprint-mill-g.pkg is in pretty good shape -- time for unit testing, debugging and deployment.
2013-10-25-01.20.35: src/lib/prettyprint/big/src/standard-prettyprint-mill-g.pkg: Good progress beating this into something like final form.
2013-10-23-09.42.47: More prettyprint-mill fiddling.  Next up:  Finalizing the standard-prettyprint-mill.api interface.
2013-10-21-23.54.53: src/lib/prettyprint/big/src/: Core layer is approaching structural soundness; should be able to start working on standard-prettyprint-mill layer soon.
2013-10-20-21.43.40: src/lib/prettyprint/big/src/: More housecleaning. core-prettyprint-mill-g.pkg now contains about what it should -- support stuff moved into other packages.
2013-10-20-13.33.14: src/lib/prettyprint/big/src/: To facilitate factoring core-prettyprint-mill-g.pkg into multiple packages, moved its core types into new generic core-prettyprint-mill-types-g.pkg
2013-10-20-10.54.43: src/lib/prettyprint/big/src/: Switched code clients to be based off base-prettyprint-mill-g.pkg which wraps core-prettyprint-mill-g.pkg instead of the latter directly, in the hope of factoring client-support stuff out of the core into the base.  Also restructured standard-prettyprint-mill.pkg to be based on the new generic standard-prettyprint-mill-g.pkg to facilitate future code-reuse.
2013-10-15-23.50.12: More random prettyprint lib munging.
2013-10-12-15.39.24: src/lib/prettyprint/big/src/prettyprinter-g.pkg: Tinkering with core algorithms. Code looks better now, but the output looks worse. Hrm. :-)
2013-10-10-23.43.10: More prettyprinting.lib tidying.
2013-10-09-09.57.49: Replaced (almost) all uses of standard-prettyprinter by cynbe-prettyprinter, then renamed standard-prettyprinter to core-prettyprinter and cynbe-prettyprinter to standard-prettyprinter.
2013-10-09-00.44.47: src/lib/prettyprint/big/src/cynbe-prettyprinter.pkg: Added passthrough logic so as to make cynbe_prettyprinter a drop-in replacement for standard_prettyprinter.
2013-10-08-00.23.31: src/lib/prettyprint/big/src/test/prettyprinting-lib-unit-test.pkg: Does first nontrivial assert().
2013-10-07-18.44.06: Established src/lib/prettyprint/big/src/test/prettyprinting-lib-unit-test.pkg
2013-10-07-02.24.49: More prettyprint tidying.
2013-10-06-00.56.09: src/lib/prettyprint/big/src/: For clarity and greppability tenamed prettyprint.pkg -> plain-prettyprint-buffer.pkg. That was unbelievably time-consuming...
2013-10-05-18.32.44: src/lib/prettyprint/big/src: Removed prettyprint-stream-g.pkg, prettyprint-stream.api (obsoleted versions of prettyprint-buffer-g.pkg, prettyprint-buffer.api).
2013-10-05-16.20.57: General prettyprinter tidying and modernizing.
2013-10-04-08.36.58: src/lib/compiler/front/typer/print/unparse-junk.api: Improve readability of unparse_sequence and unparse_closed_sequence calls.
2013-10-03-13.06.29: Tidying.
2013-10-03-09.00.41: Cleaning:  src/lib/compiler/src/print/unparse-interactive-deep-syntax-declaration.pkg, src/lib/compiler/front/typer/print/unparse-raw-syntax.pkg
2013-10-03-00.05.07: src/lib/compiler/front/typer/print/prettyprint-raw-syntax.pkg: Cleaning.
2013-09-29-11.19.04: Wrote src/lib/compiler/back/top/highcode/prettyprint-highcode-types.pkg
2013-09-25-10.03.58: prettyprint work.
2013-09-16-23.34.18: src/lib/compiler/back/top/translate/translate-deep-syntax-pattern-to-lambdacode.pkg: Cleaning.
2013-09-16-22.22.27: src/lib/compiler/front/typer/main/type-core-language.pkg: Cleaning.
2013-09-15-10.39.35: src/lib/compiler/back/top/translate/translate-deep-syntax-to-lambdacode.pkg: Suppress internals display -- mainly clutter at present.
2013-09-15-10.08.10: src/lib/compiler/front/typer/types/unify-and-generalize-types-g.pkg: Tidying.
2013-09-15-09.36.29: src/lib/compiler/front/parser/raw-syntax/raw-syntax.api: Commenting and tidying.
2013-09-14-12.35.51: src/lib/compiler/front/typer-stuff/types/type-junk.api: Tidying.
2013-09-12-09.14.01: Squish more bloodybedamned includes.
2013-09-11-13.22.06: src/lib/compiler/front/typer/types/unify-and-generalize-types-g.pkg: Tidying.
2013-09-11-09.31.49: src/lib/core/internal/makelib.api: Added  use  synonym to  load  and  make.  Perl has this right: Scripting users care about using a library, not about whether this involves compiling or loading or whatever.
2013-09-10-18.16.36: src/lib/compiler/front/typer/types/unify-and-generalize-types-g.pkg: Tidying.
2013-09-09-23.20.05: typ/type -> type/typoid conversion essentially complete.
2013-09-09-13.54.39: More typ/type -> type/typoid conversion work.
2013-09-08-20.56.59: More typ/type -> type/typoid conversion work.
2013-09-08-19.59.44: Minor tidying.
2013-09-08-14.50.49: More housecleaning.
2013-09-08-14.26.59: More housecleaning.
2013-09-08-01.48.02: ditto.
2013-09-08-01.27.44: Ditto.
2013-09-08-01.19.19: More typ/type -> type/typoid conversion work.
2013-09-07-18.51.59: More typ/type -> type/typoid transition work.
2013-09-07-12.49.20: More typ/type -> type/typoid work.
2013-09-07-12.27.26: More typ/type -> type/typoid conversion work.
2013-09-06-13.18.35: More typ/type -> type/typoid conversion work.
2013-09-06-12.06.40: src/lib/compiler/front/typer-stuff/types/type-declaration-types.api:  Renamed Typ -> Type.  (Very satisfying!)
2013-09-06-11.54.33: Pervasively renamed uniontype -> sumtype because it is more euphonic, standard and economical of syllables.
2013-09-06-08.49.35: More typ/type -> type/typoid conversion.
2013-09-05-21.39.50: More typ/type -> type/typoid conversion work.
2013-09-05-13.40.07: More typ/type -> type/typoid conversion work.
2013-09-05-09.29.42: typ/type -> type/typoid work, cleaning.
2013-09-02-15.31.22: More tidying of typestuff.
2013-09-02-15.20.50: src/lib/compiler/front/typer/main/type-type.pkg:  Tidying.
2013-09-02-15.07.34: src/lib/compiler/front/typer/main/type-type.pkg:  Tidying.
2013-09-02-14.44.03: src/lib/compiler/front/typer/types/type-types.api: Renamed type -> typoid as first step toward switching from typ/type to type/typoid nomenclature distinction, for clarity, greppability and the greater glory of Beelzebub.
2013-09-01-14.15.04: Random cleaning.
2013-08-31-17.41.16: src/lib/compiler/front/typer-stuff/types/: For clarity and greppability renamed  types.pkg -> type-declaration-types.pkg.
2013-08-29-23.01.43: src/lib/std/src/: For consistency and clarity renamed  matrix.api -> rw-matrix.api  and   matrix.pkg -> rw-matrix.pkg;  Related tidying.
2013-08-28-21.48.36: src/app/makelib/main/makelib-g.pkg: make_standard_source_path: Tweaked to use llp::search_lib_load_path_for_file. This should make it possible to collect Mythryl libraries in /usr/lib/mythryl (say) and use them in scripts via a simple   load "foo.lib";   command.
2013-08-28-21.11.45: src/app/makelib/main/lib-load-path.pkg: Looks usable.
2013-08-28-08.20.32: src/app/makelib/main/lib-load-path.pkg: Reads and cracks MYTHRYL_LIB_LOAD_PATH
2013-08-28-07.19.19: Establish src/app/makelib/main/lib-load-path.pkg.
2013-08-26-22.01.59: Renamed src/lib/x-kit/xclient/src/window/encode-xpackets-ximp.pkg -> src/lib/x-kit/xclient/src/window/xserver-ximp.pkg (etc) because this will be the primary client-side representative of the X server.
2013-08-26-21.32.08: Renamed src/lib/x-kit/xclient/src/wire/xserver-ximp.pkg back to src/lib/x-kit/xclient/src/wire/xsequencer-ximp.pkg (etc) because it is now src/lib/x-kit/xclient/src/window/encode-xpackets-ximp.pkg which will be the primary client-side representative of the xserver.
2013-08-26-21.18.02: src/lib/x-kit/xclient/src/window/xclient-ximps.api: Dropped xserver_port from Exports, to encourage clients to use encode_xpackets_port.xserver_port instead, eliminating many potential race conditions.
2013-08-26-20.43.11: src/lib/x-kit/xclient/src/window/encode-xpackets-port.pkg: Added xserver_port, so that all calls which can be made directly to xerver-ximp.pkg can also be made indirectly via encode-xpackets-ximp.pkg. (Having clients use encode-xpacket-port.pkg exclusively eliminates an entire class of potential race conditions.)
2013-08-25-17.46.15: src/lib/x-kit/xclient/src/window/xsession-junk.pkg: Update imp diagram.
2013-08-25-12.42.56: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg:  Now correctly waits for first Expose event -- replacing prior kludge of just sleeping for a second.
2013-08-25-10.15.06: Random commenting of where ximps get instantiated.
2013-08-25-00.44.39: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: cs_pixmap_to_rgb_vector converts xypixmaps to a simple rgb vector, red_pixels()/green_pixels()/blue_pixels() count pixels by color in an rgb vector.
2013-08-23-22.35.03: src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg: Now shuts down properly when end-gun fires. This required getting preliminary mailop support working in src/lib/std/src/socket/socket.pkg.  Sweet! :-)
2013-08-23-21.57.05: src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg: Flattened nested-loops input codestructure to allow all processing to be done via one fn call per vector read.
2013-08-22-00.59.49: src/lib/std/src/socket/socket.api: receive_vektor, receive_vektor' -- first shot at mailop-friendly socket layer.
2013-08-21-22.52.29: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api:  Added find_c_function'''.
2013-08-21-22.36.25: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg:  Added fun find_c_function'''.
2013-08-21-21.55.55: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Added fun redirect_one_io_call'.
2013-08-21-09.08.41: Dropped src/lib/src/lib/thread-kit/src/core-thread-kit/safe-maildrop.api and src/lib/src/lib/thread-kit/src/core-thread-kit/safe-maildrop.pkg because client-writes to maildrops are more economically and idiomatically prevented via functional wrapping of the underlying mailops.
2013-08-18-21.57.59: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Opens an X window -- first visible sign of newworld xkit package complex actually doing anything via X server. :-)
2013-08-17-23.11.55: Have src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg and src/lib/x-kit/widget/lib/run-in-x-window.pkg call src/lib/x-kit/widget/basic/root-window.pkg instead of replicating its logic.
2013-08-17-22.09.13: Fiddling with src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg
2013-08-17-14.02.08: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Gutted of old code to make room for testing new code.
2013-08-17-13.46.32: Established src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg
2013-08-17-11.29.35: src/lib/x-kit/xclient/src/stuff/: Renamed xsocket-ximps-unit-test.pkg -> xsocket-unit-test-old.pkg, xclient-unit-test.pkg -> xclient-unit-test-old.pkg.
2013-08-16-15.10.09: Zeroth-cut version of src/lib/x-kit/xclient/src/wire/socket-closer-imp.pkg, from socket-closer-imp-old.pkg.
2013-08-15-21.47.04: src/lib/x-kit/xclient/src/window/encode-xpackets-ximp.pkg: Made all calls synchronous to avoid a slew of bad race conditions, at the cost of slight increase in potential for deadlocks.
2013-08-14-22.15.55: src/lib/x-kit/widget/basic/root-window.pkg compiles.  Newworld clones bitmap-io.pkg, standard-clientside-pixmaps.pkg of oldworld packages bitmap-io-old.pkg, standard-clientside-pixmaps-old.pkg.
2013-08-13-09.22.42: Established src/lib/x-kit/widget/basic/root-window.pkg, clone of src/lib/x-kit/widget/basic/root-window-old.pkg.
2013-08-12-20.42.51: src/lib/x-kit/widget/lib/: Cloned widget-style.pkg from widget-style-old.pkg
2013-08-12-20.32.37: src/lib/x-kit/widget/lib/:  Cloned widget-attributes.pkg from widget-attributes-old.pkg.
2013-08-12-13.16.30: src/lib/x-kit/widget/lib/: Renamed widget-style.pkg to widget-style-old.pkg
2013-08-12-09.00.01: src/lib/x-kit/xclient/src/window/: Make newworld clone selection.pkg from oldworld package selection-old.pkg.
2013-08-11-16.27.42: src/lib/x-kit/xclient/src/iccc/window-property.pkg -- first-cut newworld clone of window-property-old.pkg
2013-08-11-15.57.04: More cloning of oldworld stuff into newworld. Down to five oldworld packages not yet cloned in newworld.
2013-08-10-14.24.09: src/lib/x-kit/xclient/src/window/:  cs-pixmap.pkg, ro-pixmap.pkg, rw-pixmap.pkg now compile.
2013-08-09-23.00.41: src/lib/x-kit/xclient/src/window/:  Establish cs-pixmap.pkg, ro-pixmap.pkg, rw-pixmap.pkg.
2013-08-09-22.14.07: src/lib/x-kit/xclient/src/window/draw-types.pkg: First-cut oldworld -> newworld conversion.
2013-08-09-15.53.24: Test: github has been timing out.
2013-08-09-15.26.37: First-cut code-up of core of src/lib/x-kit/xclient/src/window/xsession-junk.pkg.
2013-08-08-12.34.22: Established src/lib/x-kit/xclient/src/window/draw-ximp.pkg.
2013-08-05-09.20.05: Renamed src/lib/x-kit/xclient/src/wire/sequencer-ximp.api -> xserver-ximp.api because client code cares more about what we represent than what we do.
2013-08-04-20.22.21: Add -old suffix to names of xclient files which should be phased out when current transform is complete.
2013-08-04-00.42.28: src/lib/x-kit/xclient/src/window/: Renamed draw-types.pkg -> draw-types-old.pkg.
2013-08-03-14.08.05: Converted src/lib/x-kit/xclient/src/window/xclient-ximps-junk.pkg in src/lib/x-kit/xclient/xclient-internals.sublib into src/lib/x-kit/widget/lib/run-in-x-window.pkg in src/lib/x-kit/widget/xkit-widget.sublib because it needed a higher-level view of the world and was evolving toward higher-level functionality.
2013-08-03-12.14.00: src/lib/x-kit/widget/lib/: Renamed run-in-x-window.api -> run-in-x-window-old.api, run-in-x-window.pkg -> run-in-x-window-old.pkg.
2013-08-03-11.31.27: src/lib/x-kit/xclient/src/window/xclient-ximps-junk.pkg: Configure atom, window-property and selection ximps.
2013-08-03-10.47.19: src/lib/x-kit/xclient/src/window/xclient-ximps.api: Added sequencer_port to Exports.
2013-08-01-21.52.47: src/lib/x-kit/widget/lib/ro-pixmap-ximp.pkg: Compiles now.
2013-08-01-10.31.15: Zeroth-order codeup of src/lib/x-kit/widget/lib/ro-pixmap-ximp.pkg
2013-08-01-09.35.06: Establish src/lib/x-kit/widget/lib/ro-pixmap-ximp.pkg
2013-07-31-23.27.27: Recoded shade-imp.pkg, image-imp.pkg as shade-ximp.pkg, image-ximp.pkg
2013-07-30-23.43.27: src/lib/x-kit/xclient/src/window/selection-imp.pkg: Light tweaking + tuning.
2013-07-30-08.34.38: src/lib/x-kit/xclient/src/window/selection-ximp.pkg: First-cut codeup compiles.
2013-07-28-13.50.42: src/lib/x-kit/xclient/src/window/selection-ximp.pkg: Establish generic ximp codestructure.
2013-07-28-12.56.42: src/lib/x-kit/xclient/src/window/selection-port.pkg:  First-cut codeup.
2013-07-28-12.40.25: src/lib/x-kit/xclient/src/window/: Establish selection-ximp.api, selection-ximp.pkg, selection-port.pkg to hold rewrite of selection-imp.pkg.
2013-07-28-12.11.44: src/lib/x-kit/xclient/src/window/: First-cut rewrite of Reppys window-property-imp.pkg .api as window-property-ximp.api, window-property-ximp.pkg, window-property-port.pkg.
2013-07-28-09.18.26: src/lib/x-kit/xclient/src/iccc/atom-ximp.pkg atom-ximp.api atom-port.pkg:  First-cut rewrite of Reppy's atom-imp.pkg etc.
2013-07-27-16.14.23: src/lib/x-kit/xclient/src/window/xclient-ximps.pkg: Plugging away toward completion of first-cut codeup.
2013-07-24-22.20.46: src/lib/x-kit/xclient/src/wire/xdisplay.pkg: Tidying.
2013-07-24-22.14.05: src/lib/x-kit/xclient/src/wire/xdisplay.api: Xdisplay/XDISPLAY: Replaced xsocket: xok::Xsocket with socket: sok::Socket in order to make xdisplay.pkg ximp-agnostic.
2013-07-24-09.02.43: Check in a week of vacation hacking on stuff in src/lib/x-kit/xclient/src.
2013-07-14-00.15.20: Much fiddling working towards first-cut codeup of src/lib/x-kit/xclient/src/window/draw-ximp.pkg.
2013-07-11-21.41.28: src/lib/x-kit/xclient/src/window/draw-port.pkg: Collapsed draw_* into just draw_xops, to establish  List(draw_port::x::Op) as the displaylist language for xkit.
2013-07-10-19.29.26: src/lib/x-kit/xclient/src/window/draw-ximp.pkg:  More boilerplate.
2013-07-10-09.48.55: src/lib/x-kit/xclient/src/window/draw-ximp.pkg: Add more of the required boilerplate code.
2013-07-08-11.43.12: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: Converted Replyqueue(X) to plain Replyqueue -- the (X) was not buying us anything.
2013-07-08-10.40.59: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  Established central definitions of Run_Gun and End_Gun (= Mailop(Void)) to eliminate clutter of defining them in every imp.
2013-07-07-18.41.18: src/lib/x-kit/xclient/src/window/pen-ximp.pkg: First-cut code-up.
2013-07-06-20.31.15: src/lib/x-kit/xclient/src/window/xevent-to-window-ximp.pkg: First-draft code-up.
2013-07-05-12.41.06: src/lib/x-kit/xclient/src/window/keymap-ximp.pkg: First cut code-up.
2013-07-04-13.36.17: src/lib/x-kit/xclient/src/wire/sequencer-port.pkg: Added  send_xrequest_and_pass_reply & send_xrequest_and_pass_completion_flag  to support nascent imp-to-imp communication protocol.
2013-07-03-19.28.57: src/lib/x-kit/xclient/src/window/font-port.pkg: Add  open_font_and_pass  to pre-existing  open_font.
2013-07-03-18.59.40: Coded first-cut version of src/lib/x-kit/xclient/src/window/font-ximp.pkg by swiping code from src/lib/x-kit/xclient/src/window/font-imp.pkg.
2013-07-01-21.32.16: Created   src/lib/x-kit/xclient/src/wire/xerror-well.pkg   because the xerror functionality does not belong in  src/lib/x-kit/xclient/src/wire/sequencer-port.pkg.  More accurate Exports for xsession-ximps.pkg and xclient-ximps.pkg
2013-06-30-21.52.53: Rough cut of src/lib/x-kit/xclient/src/window/xclient-ximps.pkg
2013-06-30-21.09.34: Rough cut of src/lib/x-kit/xclient/src/window/xsession-ximps.pkg
2013-06-30-20.25.37: src/lib/x-kit/xclient/src/window/: Established pen-ximp.pkg pen-ximp.api pen-port.pkg draw-ximp.pkg draw-ximp.api draw-port.pkg xclient-ximps.api xclient-ximps.pkg.
2013-06-30-19.32.50: src/lib/x-kit/xclient/src/window/: Established font-ximp.pkg font-ximp.api font-port.pkg xsession-ximps.pkg xsession-ximps.api xevent-to-window-ximp.pkg xevent-to-window-ximp.api xevent-to-window-port.pkg keymap-ximp.pkg keymap-ximp.api keymap-port.pkg.
2013-06-30-09.49.42: src/lib/x-kit/xclient/src/window/xsession.pkg: Tweaked impgraph ascii diagram.
2013-06-29-19.02.44: Established src/lib/x-kit/xclient/src/stuff/xsocket-ximps-unit-test.pkg by cloning src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg.
2013-06-29-17.50.54: First-cut implementation of src/lib/x-kit/xclient/src/wire/decode-xpackets-ximp.pkg, related fiddling.
2013-06-29-01.05.35: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg: First-cut implementation complete.
2013-06-27-22.24.30: Remove (X) from two Export types that no longer need it (inbuf-/outbuf-ximp).
2013-06-27-22.12.34: Move Configstate out of Exports since it is not in general a port and has a shorter uselife.
2013-06-27-20.59.37: Renamed Outport -> Import, Inport -> Export, Configport -> Configstate:  Ports are in general bidirectional so nomenclature based on I/O direction is inherently confusing, making it better to base it on the distinction between ports exported by a given imp and those imported by that imp. Also Configport turns out in general to be arbitrary data possibly not including a port at all, so Configstate is a better name.
2013-06-27-10.04.21: src/lib/x-kit/xclient/src/wire/xsocket-ximps.pkg: Coded up a first-cut implementation.
2013-06-26-10.33.26: Established src/lib/x-kit/xclient/src/wire/xsocket-ximps.pkg, initially as a simple clone of sequencer-ximp.pkg.
2013-06-25-23.16.08: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg:  Added send_xrequest_and_handle_exposures.
2013-06-25-22.59.38: Really, truly killed output-port.api. :-)
2013-06-25-22.51.13: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg:  Added send_xrequest_and_return_completion_mailop.  Dropped outbuf-port.api, sequencer-port.api, xmsg-sink.api, xerror-sink.api for contributing nothing.
2013-06-23-10.59.55: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg: do_xmsg_plea, in particular accumulate_expose_events()
2013-06-22-17.17.20: src/lib/x-kit/xclient/src/wire/xerror-sink.api: Back from the dead.
2013-06-22-16.53.35: src/lib/x-kit/xclient/src/wire/sequencer-port.api: Dropped do_something(), which was a scaffolding placeholder.
2013-06-22-16.42.48: src/lib/x-kit/xclient/src/wire/sequencer-port.api: Restore send_xrequest_and_read_reply().
2013-06-22-16.01.43: src/lib/x-kit/xclient/src/wire/sequencer-port.api: Restore send_xrequest().
2013-06-22-15.40.08: Ripped out the patronport stuff as overkill; end_gun is sufficient.
2013-06-22-10.04.31: Established shutdown_gun, for brevity and length symmetry renamed startup_gun/shutdown_gun -> run_gun/end_gun.
2013-06-22-09.15.40: Pervasively renamed starting_gun -> startup_gun for symmetry with upcoming shutdown_gun.
2013-06-20-20.32.29: For clarity and symmetry, pervasively renamed Ports -> Inports and Links -> Outports.
2013-06-17-20.49.54: Restructured sequencer/inbuf/outbuf/xevent-reader complex compiles again; still need to complete them.
2013-06-15-14.18.43: src/lib/x-kit/xclient/src/wire/xevent-reader-ximp.pkg:  Converted to use new late-binding separately-defined clientport approach.
2013-06-15-13.27.46: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg:  Converted to use new late-binding separately-defined clientport approach.
2013-06-15-13.09.43: src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg:  Converted to use new late-binding separately-defined clientport approach.  src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg: Eliminated (unused) clientport.
2013-06-15-12.36.51: src/lib/src/lib/thread-kit/src/core-thread-kit/binarytree-ximp.pkg:  Converted to use new late-binding separately-defined clientport approach.
2013-06-13-21.30.30: src/lib/x-kit/xclient/src/wire/sequencer-ximp.pkg: Upgraded to use do_one_mailop' in place of plain do_one_mailop.
2013-06-13-21.17.39: src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg: Upgraded to use do_one_mailop' in place of plain do_one_mailop.
2013-06-13-21.01.01: src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg: Upgraded to use do_one_mailop' in place of plain do_one_mailop.
2013-06-11-08.25.07: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: Added make_starting_gun to reduce risk of previous bug reoccurring.
2013-06-09-19.55.30: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: Renamed  make_maildrop -> make_full_maildrop  --  because I just wasted hours discovering that I had been assuming that   make_maildrop ()   makes an empty maildrop!   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg: Erroneously had   starting_gun' = take_from_maildrop' starting_gun;   where I needed   starting_gun' = get_from_maildrop' starting_gun;  for proper barrier semantics.  That was unpleasantly difficult to track down.
2013-06-08-11.09.04: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: prepend_replyqueue_mailops: Had  mailops  where  result  was needed.  src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.api: Debug+display support: Added get_mailqueue_reader, get_mailqueue_id, get_mailqueue_putcount, note_mailqueue_tap, drop_mailqueue_tap.
2013-06-02-11.11.02: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg: Actually create and configure a binarytree-ximp.
2013-06-02-10.38.35: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Completed do_one_mailop', completing basic deadlock-free-microthread-programming infrastructure.  src/lib/src/lib/thread-kit/src/core-thread-kit/: Added  binarytree-ximp.api, binarytree-ximp.pkg  to exercise new functionality, added calls to them in src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg.
2013-06-02-09.02.33: Moved Replyqueue up from src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg to src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg because it needs access to the ==> op defined in the latter.  Also, demoted drop_from_replyqueue() from a public fn to a private helper for put_in_replyqueue, and added logic in put_in_replyqueue() to wrap given mailop so as to call drop_from_replyqueue() when it fires -- a ridiculously simple solution that occurred to me only yesterday *blush*.
2013-06-01-20.02.03: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg, *mail*pkg: Dropped all the priority crap. It is at best premature optimization. It has no clear intent. It complicates the code. And it is likely to mostly introduce behavioral pathologies by undermining fair selection among mailops.
2013-05-30-22.44.56: src/lib/x-kit/xclient/src/wire/sample-ximp.pkg: Add Replyqueue to run() loop state.
2013-05-30-21.38.18: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  Added put_in_replyqueue, drop_from_replyqueue.
2013-05-30-09.18.46: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  Add Request_Queue and do_one_mailop'.
2013-05-30-07.43.17: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: For consistency renamed peek_* -> get_*.   src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Sketched in a first-cut Request_Queue type with motivational comments.
2013-05-28-21.47.17: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: Commenting.
2013-05-27-14.19.43: src/lib/std/standard.lib:  Added Safe_Maildrop, safe_maildrop.
2013-05-27-12.28.26: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Added top-of-file comments.
2013-05-27-11.26.29: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity and consistency renamed make_compound_mailop -> if_then'.
2013-05-26-21.47.37: Revamped src/lib/x-kit/xclient/src/wire/sequence-ximp.pkg on pattern of revised sample-ximp.pkg; now compiles again.
2013-05-26-21.11.08: Revamped src/lib/x-kit/xclient/src/wire/outbuf-ximp.pkg on pattern of revised sample-ximp.pkg; now compiles again.
2013-05-26-18.53.47: Revamped src/lib/x-kit/xclient/src/wire/inbuf-ximp.pkg on pattern of revised sample-ximp.pkg; now compiles again.
2013-05-26-17.08.39: src/lib/x-kit/xclient/src/wire/sample-ximp.api: Much fiddling to converge on a sound microthread/imp architecture. Looking good.
2013-05-26-08.27.10: Pervasively renamed take_from_maildrop -> get_from_maildrop and take_from_oneshot -> get_from_oneshot. The intended distinction is that get_* are pure ops, while take_* have side-effects.
2013-05-25-13.38.35: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.api: Added take_all_from_mailqueue, take_all_from_mailqueue'.
2013-05-25-10.21.35: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.api: Dropped nonblocking_take_from_mailqueue() because it is nowhere used and I see no reason to encourage cycle-wasting busywaits.
2013-05-18-12.31.30: src/lib/src/map.api:  Added  get_or_raise_exception_not_found  as a convenient alternative to  get  when the key is known to be in the map.
2013-05-12-12.53.08: src/lib/x-kit/xclient/src/stuff/hash-xid.api:  For consistency and clarity renamed  list  ->  keyvals_list.
2013-05-12-12.37.10: src/lib/x-kit/xclient/src/wire/xtypes.pkg:  For efficiency changed  Xid  from  XID Unt  to just  Unt.
2013-05-12-12.26.29: src/lib/x-kit/xclient/src/wire/xtypes.api:  Make Xid an opaque type, added xid_to_int, xid_to_string.  src/lib/x-kit/xclient/src/to-string/: Eliminated xtype-to-string.pkg (which had only contained xid_to_string).
2013-05-12-11.11.38: src/lib/x-kit/xclient/src/wire/xtypes.api:  Created.
2013-05-12-10.59.05: src/lib/x-kit/xclient/src/wire/xtypes.pkg:  Add same_xid, xid_compare.
2013-05-11-11.09.11: src/lib/x-kit/xclient/src/wire/xsocket.api: Tidying.
2013-05-11-10.52.43: src/lib/x-kit/xclient/src/wire/xsocket.pkg:  Changed XSOCKET.xsocket_id type from Ref(Void) to Int because sooner or later you want to index some values by the id.
2013-05-11-10.40.52: src/lib/src/: Introduced issue-unique-id.api,  issue-unique-id-g.pkg,   issue-unique-id.pkg.
2013-05-07-21.34.58: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api: Deleted the (unused) window-locking stuff. (I think it was intended as support for XOR-based rubberbanding, which is obsolete technology.
2013-05-05-15.47.05: Renamed dropx -> drop various places. This was supposed to have been done before the last check-in.
2013-05-05-13.45.04: src/lib/src/typelocked-hashtable.api, src/lib/src/set.api, src/lib/src/map.api:  To reduce ugliness and also incidence of runtime faults, replaced exception-throwing drop  with  get_and_drop + drop, neither of which throws exceptions.
2013-05-05-10.05.22: src/lib/src/set.api:  For brevity and consistency renamed  delete -> drop.
2013-05-05-09.24.52: src/lib/src/typelocked-hashtable.api:  For brevity and consistency renamed  remove -> drop.
2013-05-04-21.57.48: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg:  do_plea:  Have the   ERRORtime make compiler ; make rest ; sudo make install ; make check  cases scream to stderr and shut down the program, instead of just noting on logfile and returning.
2013-05-04-12.09.23: src/lib/x-kit/tut/colormixer/spot.api:  For clarity renamed  spot  to  make_spot.
2013-05-01-13.06.24: src/lib/src/lib/thread-kit/src/core-thread-kit/microthread-preemptive-scheduler.pkg:  Cleaned out more debug statements.
2013-04-30-20.52.03: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg: Added original perfect-numbers-loop torture test, mostly to protect it from bitrot.
2013-04-30-00.00.11: In a fit of irrational optimism, removed most of the log::note* debug calls scattered through the codebase.
2013-04-29-09.51.28: src/app/yacc/src/yacc.grammar:  Add two Lee Felsenstein quotes -- he was at Brenda + Rob's party this weekend. :-)
2013-04-28-09.58.34: src/lib/src/unit-test.pkg:  Fixed: assert() had printf() calls within   hth::with_mutex_do  mtx::mutex .{ ... }   block, which is not only st00pid, but resulted in lockup with new code that sets    runtime::microthread_switch_lock_refcell__global  whenever the primary hostthread is holding a mutex.
2013-04-26-18.04.04: Test.
2013-04-26-18.02.22: Test.
2013-04-26-18.00.45: Test.
2013-04-26-17.58.57: Test.
2013-04-26-17.57.33: De-export [a-z].
2013-04-25-21.13.18: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg:  Added   test_basic_microthread_switch_lock_functionality()  to exercise new  runtime::microthread_switch_lock_refcell__global  functionality.
2013-04-25-08.58.57: src/c/h/make-strings-and-vectors-etc.h:  For symmetry, readability, greppability and St George, renamed DEREF -> FETCH_FROM_REFCELL, ASSIGN -> STORE_INTO_REFCELL.
2013-04-24-09.59.35: src/c/h/runtime-globals.h:  More commenting of  runtime::microthread_switch_lock_refcell__global.
2013-04-24-09.51.21: src/c/h/runtime-globals.h:  Documented semantics and rationale of new   runtime::microthread_switch_lock_refcell__global;   Also made runtime package globally visible, mostly to allow interactive checkout.
2013-04-23-20.41.06: microthread_switch_lock should have been microthread_switch_lock_refcell.  Fixed.
2013-04-23-20.29.05: Test2...
2013-04-23-20.23.13: Test...
2013-04-23-20.20.58: Pervasively renamed  unused_int_refcell -> microthread_switch_lock as first step in repurposing (enpurposing?) it.
2013-04-22-10.47.33: Added src/SMP.OVERVIEW to hold reminders to myself for when we get to that point.
2013-04-21-10.21.04: Tracked v bug to default hosthread blocking attempting to acquire io::mutex.
2013-04-20-10.45.19: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg:  Added   test_basic_preemptive_scheduling_fairness().
2013-04-16-09.54.11: src/lib/src/printf-field.pkg: Uncomment the b (boolean) format specifier case. *blush*
2013-04-15-20.06.55: doc/tex/section-libref-printf-sprintf-fprintf.tex: Added, to document supported printf format specifiers.
2013-04-14-12.52.30: src/lib/src/printf-field.pkg, src/lib/src/sfprint.pkg:  Support binary:  Old %b (print boolean) becomes %B, %b becomes print-binary.
2013-04-13-16.44.48: src/lib/core/internal/mythryl-compiler-version.pkg: Really, truly bump version to 7.1.1 now that 7.1.0 is officially released.
2013-04-13-16.42.57: src/lib/core/internal/mythryl-compiler-version.pkg: Bump version to 7.1.1 now that 7.1.0 is officially released.
2013-04-13-16.41.37: Release 7.1.0.
2013-04-11-19.48.14: doc/tex/sh/synthesize-sourcecode-latex-docs: Small tweak to avoid about 100 bogus  Nonexistent sourcefile ignored  warnings due to directory-local filenames starting with src/...
2013-04-08-12.52.53: src/lib/core/internal/mythryl-compiler-version.pkg: Bumped version to 7.1.0
2013-04-07-19.10.04: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: Renamed  emptyx -> take_from_maildrop,  fillx -> put_in_maildrop  etc. Thought I did that some time ago *blush*.
2013-04-06-09.42.45: Combined C types Vunt, Punt (Val-sized unsigned int, pointer-sized unsigned int) into just Vunt, since the distinction only matters when sizeof(int) != sizeof(void*), which is true on no architecture of interest, and cannot be maintained without regular testing on such an architecture.
2013-03-22-09.36.08: src/lib/std/src/log.pkg:  Added note_on_stderr -- got frustrated at not being able to write debug stuff to console when debugging microthread I/O stuff.
2013-03-21-20.07.25: src/c/lib/heap/libmythryl-heap.c:  Added write_line_to_stderr parallel to existing write_line_to_log, write_line_to_ramlog calls.  src/lib/std/src/io/winix-text-file-for-os--premicrothread.api: Changed log_if to write to stderr via logprint_to_stderr instead of stdout via print; this is much more reliable when debugging I/O problems.
2013-03-17-11.19.53: src/lib/src/queue.api:  For consistency renamed   push_item_into_back_of_queue -> put_on_back_of_queue,   pull_item_from_front_of_queue -> take_from_front_of_queue,   unpull_item_into_front_of_queue -> put_on_front_of_queue,   unpush_item_from_back_of_queue -> take_from_back_of_queue.
2013-03-17-10.44.13: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.api:  For clarity, consistency and greppability, renamed push/pull -> take_from_mailqueue/put_in_mailqueue.
2013-03-17-02.49.24: src/lib/src/lib/thread-kit/src/core-thread-kit/mailslot.api: Renamed for consistency, clarity and greppability renamed give/take -> put_in_mailslot/take_from_mailslot.
2013-03-17-01.18.51: src/lib/src/lib/thread-kit/src/core-thread-kit/oneshot-maildrop.api: For clarity and greppability, renamed get/set -> get_from_onedrop/set_onedrop.
2013-03-15-19.04.33: src/lib/std/src/unsafe/unsafe.api:  Renamed toplevel_fate -> sigint_fate because it is executed (only) when handling a SIGINT.  Set up in src/lib/core/internal/make-mythryld-executable.pkg, used in interruptible() in src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg.
2013-03-12-15.37.02: Renamed sh/glue -> sh/opt, src/glu -> src/opt  because they are primarily about optional modules, not (just) glue modules.
2013-03-10-21.40.37: sh/git-put: Changed .git to live in parent directory when not needed, to simplify diff -r comparisons and such.
2013-03-09-21.59.17: Pervasively renamed  bin_sh -> bin_sh',  bash -> bin_sh  for clarity, accuracy, symmetry, greppability and the Greater Glory of Cthulhu.
2013-03-09-13.04.26: sh/make-tarball:  Add  --exclude=mythryl7.110.58/.git  to tar command to avoid tarballs getting 10X bigger.    .gitignore: Numerous additions.   src/lib/core/internal/mythryl-compiler-version.pkg: Change version to 7.0.0
2013-03-09-12.55.08: Test...
2013-03-09-12.05.29: sh/git-put: Chop out all the ../git/ logic and just check in directly from main development sourcetree.
13-03-09-10.23.51: sh/make-tarball:  Change vanilla tarball extension from .tbz to .tar.bz2 for better portability/intelligibility.
2013-03-07-08.48.16: src/lib/regex/glue/regular-expression-matcher.api:  For clarity renamed  find_first_group -> find_first_match_to_ith_group,   find_first -> find_first_match_to_regex,  find_first_groups_all -> find_first_match_to_regex_and_return_all_groups,  find_all_group -> find_all_matches_to_regex_and_return_values_of_ith_group,  find_all -> find_all_matches_to_regex, find_all_groups_all -> find_all_matches_to_regex_and_return_all_values_of_all_groups
2013-03-05-23.15.45: src/lib/regex/glue/regular-expression-matcher.api: Replace NOT_FOUND exceptions with Null_Or(...) result values.
2013-03-05-18.08.04: src/lib/regex/glue/regular-expression-matcher-g.pkg: Tidying.
2013-03-04-22.20.49: Eliminated  val  everywhere as a synonym for  my,  returning it to the pool of identifiers free for use.  (Boy has THAT been a long time coming!)
2013-03-04-21.21.37: src/lib/core/internal/makelib.api, src/lib/src/lib/thread-kit/src/winix/winix-process.api: Renamed system -> bin_sh because aside from being ungreppable, system is the most uselessly vague word in the language.
2013-03-03-19.33.36: src/lib/compiler/front/parser/lex/mythryl.lex:  Dropped the -F -D -P -L -S -C -B -R -W -X synonyms for isfile isdir etc. They work great in Perl but just do not fit the spirit of Mythryl.
2013-03-03-19.20.14: Pervasively:  Changed   released under Gnu Public Licence version 3    to   released per terms of SMLNJ-COPYRIGHT   in 1974 places. :-)   Also removed obsoleted src/c/check-for-gtk.
2013-03-03-18.42.25: Nuked src/c/lib/ncurses/* + src/c/lib/opencv/*: Now core system should compile without any dependencies on gtk or opencv or ncurses or opengl.
2013-03-03-17.37.52: src/glu/opencv/etc/opencv-integration.plan, src/glu/opencv/c/in-main/Makefile:  Plug in  pkg-config --libs opencv,  pkg-config --cflags opencv.
2013-03-03-16.33.28: src/c/Configure.in:  Removed outdated   AC_CHECK_HEADERS([curses.h])   AC_CHECK_HEADERS([gtk-2.0/gtk/gtk.h])  AC_CHECK_HEADERS([gtk/gtk.h]).
2013-03-03-15.17.59: src/c/lib/Makefile.in:  Removed old ../../glu/gtk/c/in-main  ../../glu/opengl/c/in-main  stuff from LIB_DIRS.
2013-03-03-15.06.41: src/lib/make-library-glue/library-patchpoints.pkg:  Added  patch_id_defs_in_src_c_lib_makefile.  src/glu/*/etc/*-integration.plan:  Added  patch_id_defs_in_src_c_lib_makefile:  LIB_DIRS +=  ../../glu/*/c/in-main  line to support global   make clean   command.
2013-03-03-13.37.58: src/glu/ncurses/src/*:  Dropped deadwood.
2013-03-03-13.19.12: src/glu/ncurses/etc/ncurses-construction.plan:  Added move, nl, noecho, nonl, refresh, start_color.
2013-03-03-12.59.38: src/glu/ncurses/etc/ncurses-construction.plan:  Added cbreak, endwin, getch, has_colors, initscr.
2013-03-03-12.10.14: src/glu/ncurses/etc/ncurses-construction.plan:  Added   -lncurses  to  rules patch for src_c_o_makefile.  src/glu/ncurses/etc/ncurses-construction.plan:  Added  addch  plain function.
2013-03-03-10.29.54: src/glu/ncurses/c/in-sub/mythryl-ncurses-library-in-c-subprocess.c, src/glu/ncurses/c/in-main/libmythryl-ncurses.c:  Added  #include <ncurses.h>
2013-03-02-14.13.17: src/lib/make-library-glue/patchfile.pkg:  Tweaked to use new  psx::file_contents_are_identical.   sh/glue:  Tweaked to use new  psx::copy_file  to install in doc/tex .tex files from selected glue modules.
2013-03-02-12.51.43: src/lib/std/src/psx/posix-io.api: For clarity renamed copy -> copy_file, equal -> file_contents_are_identical.
2013-03-02-12.26.31: src/lib/std/src/psx/posix-io.api: For scripting convenience and portability, added   equal: (filename1: String, filename2: String) -> Bool;   which returns TRUE iff the two files are byte-for-byte equal.
2013-03-02-10.20.47: src/lib/std/src/psx/posix-io.api: For scripting convenience and portability, added   copy: { from: String, to: String } -> Int;   which copies a file preserving the mode and returns count of bytes copied.
2013-02-26-21.57.17: Now that the dust has settled a bit, merged   sh/addglue + sh/rmglue  to make   sh/glue   to reduce code redundancy.
2013-02-25-21.26.14: Pervasively renamed   construction.plan -> foo-construction.plan   and   integration.plan -> foo-integration.plan   because having five integration.plan files open in emacs was confusing.
2013-02-25-01.21.35: Can now build, do  sh/addglue all  and rebuild successfully with  gtk ncurses opencv opengl qqq  modules installed.  Three of those are empty frameworks, but that is still good progress...
2013-02-24-19.46.05: Cleaning of src/glu/ncurses.
2013-02-24-19.22.05: src/glu/*/etc/integration.plan:  Moved README section into README. There is no point in waiting until a glue module is selected to document it in README.  src/lib/make-library-glue/library-patchpoints.pkg, README: Eliminated the README patchpoint.
2013-02-24-17.38.32: src/gnu: Established blank dirtrees for ncurses and opencv.
2013-02-24-13.43.15: src/glu/gtk/etc/integration.plan: Filled in the blanks, following the pattern of src/glu/opengl/etc/integration.plan.
2013-02-24-12.15.49: sh/addglue, sh/rmglue:  Tweaked to display available glue modules as well as installed glue modules.   src/glu/opengl/etc/integration.plan:  Filled with all the Right Stuff.
2013-02-23-21.50.27: sh/addglue and sh/rmglue now operational -- next step is completing src/glu/*/etc/integration.plan.
2013-02-23-20.17.48: sh/make-tarball:  Changed to  rm bin/mythryld  and  mv bin/mythryld-bare bin/mythryld-bootstrap.    bin/mythryld-bare: Changed to establish  bin/mythryld-bare  on first compile.   sh/make-libraries: Dropped -- unused in years.
2013-02-23-11.12.06: sh/make-compiler-libraries:  Tweaked to use any of bin/mythryld, bin/mythryld.previous, bin/mythryld-bare, bin/mythryld-bootstrap, in that order of preference.
2013-02-22-21.28.15: src/lib/std/src/psx/posix-io.api:	Added   write_string: (File_Descriptor, String) -> Int;   This whole I/O libray is an example of taking something very simple and making it very hard. :-( :-( :-(    src/lib/make-library-glue/patchfile.pkg: Changed to preserve modes of patched files and also not update them if there is no net change, to better humor Make etc.
2013-02-22-18.55.55: src/lib/make-library-glue/planfile.pkg:  Implemented read_planfiles. (Forgot to do that earlier, oops.)
2013-02-21-21.57.42: sh/addglue:  Mostly sketched in.  I am starting to like this language!
2013-02-21-21.29.05: src/lib/make-library-glue/planfile.pkg:  read_planfile:  Simplified the previous rule and and the implementation: A blank following the colon is eaten (i.e., is not part of the following field); otherwise anything goes, as before.
2013-02-21-21.17.47: src/lib/make-library-glue/planfile.pkg:  read_planfile:  For readability, added mandatory blank after the colon ending the typefield in a .plan file line. (Exceptions: tab or newline after the colon are also ok.)  This blank is not part of the rest-of-line field value.
2013-02-21-00.02.46: src/lib/make-library-glue/library-patchpoints.pkg:  Added  append_to_patch, append_to_patch__definition.
2013-02-20-23.45.33: src/lib/make-library-glue/library-patchpoints.pkg:  Add patch_ids mapping patch_id names to patch_id { filename, patchname } values.
2013-02-20-23.36.00: src/lib/make-library-glue/glue-junk.pkg:  Tweak to use   paf::make_patch_beginline, paf::make_patch_endline.
2013-02-20-23.24.03: src/lib/make-library-glue/patchfile.api:  Add make_patch_beginline, make_patch_endline to avoid embedding these magic strings in client files.
2013-02-20-23.03.33: src/lib/make-library-glue/glue-junk.pkg:  Changed  die  to  raise exception FAIL  throughout -- good libraries never die. :-)
2013-02-19-22.22.50: src/lib/make-library-glue/library-patchpoints.pkg (etc):  Set up library-glue integration patchpoints.
2013-02-19-15.20.19: src/lib/make-library-glue/:  Established  library-patchpoints.pkg.
2013-02-19-08.49.04: src/lib/make-library-glue/make-library-glue.pkg: More post-transition cleanup, in particular merging in wrapper functions.
2013-02-18-23.29.55: src/lib/make-library-glue/planfile.api:  Paragraph:  Added  filename: String  field, mostly for convenience of code issuing diagnostics.
2013-02-18-22.55.37: src/lib/make-library-glue/planfile.api:  Due to lack of mutually recursive record types, refactored   Paragraph(X) also Do_Fn(X)   into   Paragraph, Do_Fn(X), Paragraph_Plus_Do_Fn(X).  Which is cleaner anyhow.
2013-02-18-22.13.00: src/lib/make-library-glue/planfile.pkg:  Paragraph(X):  Added fields   line_1: Int,  line_n: Int   to support improved do-time diagnostics.
2013-02-18-21.34.28: src/lib/make-library-glue/planfile.api:  Field:  For purity and sanity, converted  line_n  from  Ref(Int)  to  Int.
2013-02-18-21.20.51: src/lib/make-library-glue/planfile.api:  Field:  For purity and sanity, converted  lines  from  Ref(List(String))  to  List(String).
2013-02-18-17.52.47: src/lib/make-library-glue/make-library-glue.pkg: Switched over from ad-hoc planfile processing to planfile.pkg-based processing. As usual, when it compiled again it worked again. Actually, it compiled first try, too. I could get to like this...
2013-02-18-17.23.28: src/lib/make-library-glue/make-library-glue.pkg: Major restructuring to fit planfile.api, in particular moving  state  and  fields  out of the Builder_Stuff record and passing fields separately.
2013-02-17-21.26.07: src/lib/make-library-glue/make-library-glue.pkg: Major restructuring to make to* process patchfiles explicitly instead of via side-effects. As usual, when it compiles again, it runs again. :-)
2013-02-17-10.43.36: src/lib/make-library-glue/make-library-glue.pkg:  Builder_Stuff:  Add patchfiles: pfs::Patchfiles.
2013-02-17-10.28.32: src/lib/make-library-glue/make-library-glue.pkg:  Minor tidying.
2013-02-17-10.03.29: src/lib/make-library-glue/planfile.api: map_patchfiles_per_plan: Added x arg so arbitrary support state can be conveniently passed in.
2013-02-16-22.08.19: src/lib/make-library-glue/make-library-glue.pkg:  Upgraded from being patchfile.pkg-based to being patchfiles.pkg-based.
2013-02-16-12.37.43: src/lib/make-library-glue/make-library-glue.pkg:  Coded up replacement to_* fns based on patchfiles.pkg to replace original ad hoc ones.
2013-02-16-10.55.07: src/lib/make-library-glue/make-library-glue.pkg: planfile conversion step 1: Established patch_ids for all patchpoints in use.
2013-02-16-09.48.15: Pervasively changed fold_left/fold_right -> fold_forward/fold_backward because after six years I still cannot keep the former two straight, plus for things like column vector there is no left/right, but forward/backward still makes sense.
2013-02-14-21.41.33: src/lib/make-library-glue/make-library-glue.pkg:  Sketched in planfile-based definitions of paragraph types  callback_fn, fn_doc, plain_fn, mythryl_code, mythryl_type.
2013-02-14-20.26.21: src/lib/make-library-glue/:  Added planfile-junk.api & planfile-junk.pkg, initially to make generally available   set_patch, append_patch, copy_patch,   which were previously buried in   src/lib/make-library-glue/planfile-unit-test.pkg.
2013-02-14-13.20.58: src/lib/make-library-glue/planfile-unit-test.pkg:  Implemented and tested  copy_patch.
2013-02-14-12.55.49: src/lib/make-library-glue/planfile-unit-test.pkg:  Implemented and tested  append_patch.
2013-02-14-09.54.27: src/lib/make-library-glue/planfile.pkg:  Implemented  map_patchfiles_per_plan().
2013-02-14-09.23.46: src/lib/make-library-glue/planfile.api:  Establish   map_patchfiles_per_plan(),    for readability also   Plan = List( Paragraph )   type synonym.
2013-02-13-00.19.44: src/lib/make-library-glue/planfile.pkg:  process_fields: reverse lines in each field, to restore original order.
2013-02-12-23.21.40: src/lib/make-library-glue/planfile.pkg:  read_planfile:  Fixed some thinko birth-defect bugs.  Now successfully reads src/lib/make-library-glue/planfile-unit-test.plan for src/lib/make-library-glue/planfile-unit-test.pkg.
2013-02-12-20.56.40: src/lib/make-library-glue/planfile.api:  Field:  To simplify client code, changed  Field.lines  from type   Lines = LINE  String | | LINES List(String) ;   to just   List(String)   and eliminated Lines.
2013-02-12-09.26.13: src/lib/make-library-glue/patchfiles.api: Introduced Patch_Id, changed Patch to use it, to make client code cleaner.
2013-02-10-22.52.54: src/lib/make-library-glue/planfile-unit-test.pkg: Added logic to exercise patchfile.api and patchfiles.api functionality.
2013-02-10-13.39.02: src/lib/make-library-glue/patchfiles.pkg (etc):  Converted   exit_x()   to   raise exception FAIL   to facilitate code-re-use.  Also testing. :-)
2013-02-09-21.36.34: src/lib/make-library-glue/planfile.pkg:  validate_fieldname:  Fixed: bug in regex turned up by src/lib/make-library-glue/planfile.pkg.
2013-02-09-21.29.21: src/lib/make-library-glue/planfile.pkg:  parse_traits:  Fixed: bug in DO_NOT_TRIM_WHITESPACE handling turned up by src/lib/make-library-glue/planfile.pkg.
2013-02-09-18.52.51: src/lib/make-library-glue/planfile-unit-test.pkg: Established.
2013-02-09-18.35.53: src/lib/make-library-glue/planfile.pkg: Coded up read_planfile.
2013-02-08-00.25.53: src/lib/make-library-glue/planfile.pkg: More fiddling.
2013-02-08-00.09.56: src/lib/make-library-glue/planfile.pkg: Completed digest_paragraph_definitions().
2013-02-07-21.18.19: src/lib/src/list-mergesort.pkg: Added sort_list_and_find_duplicates(), complimentary to pre-existing sort_list_and_drop_duplicates().
2013-02-06-21.56.33: src/lib/make-library-glue/: Dropped planfiles*, worked on planfile.api.
2013-02-05-22.21.40: Completed src/lib/make-library-glue/patchfiles.pkg, added fold to src/lib/make-library-glue/patchfile.pkg.
2013-02-05-12.51.59: src/lib/make-library-glue/: Cloned patch* to establish planfile.api, planfile.pkg, planfiles.api, planfiles.pkg, which will be needed shortly.
2013-02-05-12.39.18: For brevity pervasively renamed patchable_file -> patchfile.
2013-02-04-12.39.00: src/lib/make-library-glue/:  Establish patchable-files.api + patchable-files.pkg, to manage collections of patchable-file.api.
2013-02-04-00.06.10: src/lib/make-library-glue/patchable-file.api:  Added empty_all_patches.  src/lib/make-library-glue/patchable-file.pkg: Implemented it as   fun empty_all_patches pf = map_patches pf (fn _ = []);   What fun! :-)
2013-02-03-23.55.46: src/lib/make-library-glue/patchable-file.api:  Added map_patches, patch_apply.
2013-02-03-23.19.58: src/lib/make-library-glue/patchable-file.api:  Added patch_append, patch_prepend to take advantage of new Queue (==deque) implementation.
2013-02-03-22.52.26: src/lib/make-library-glue/patchable-file.pkg:  Changed internal representation of patch contents from List(String) to Queue(String), to efficiently support both prepend and append. Naturally, when it compiled again it ran again. Try that in C... :-)
2013-02-03-22.24.57: src/lib/src/queue.api:  Added unpull', push', from_list.
2013-02-03-21.30.15: src/lib/make-library-glue/patchable-file.api:  Added set_patch.
2013-02-03-21.18.14: src/lib/make-library-glue/patchable-file.api:  Added get_patch.
2013-02-03-21.08.27: src/lib/make-library-glue/patchable-file.api:  Added get_patch_names.
2013-02-03-21.00.33: src/lib/make-library-glue/patchable-file.api:  Made Patchable_File type opaque, since it is getting complex enough to be worth isolating from client code.
2013-02-03-20.43.16: src/lib/make-library-glue/patchable-file.api:   Renamed get_patch -> get_only_patch, set_patch -> set_only_patch, to free up former names for better uses.
2013-02-03-20.32.17: src/lib/make-library-glue/patchable-file.pkg: For consistency changed patchname quotation from single to double quotes.
2013-02-03-20.12.16: src/lib/make-library-glue/patchable-file.pkg:  Pervasive rewrite to store and access patches by name instead of number.
2013-02-03-16.40.27: src/lib/make-library-glue/patchable-file.pkg:  For clarity, consistency and brevity, pervasively renamed  exon -> text  and  intron -> patch.
2013-02-03-16.23.05: Went around filling in values for all the patchnames from previous step.
2013-02-03-16.05.53: First step to named introns:  Globally replaced   'Do not edit this or following lines -- they are autobuilt.'  with   'Do not edit this or following lines -- they are autobuilt.  (patchname=...)'
2013-02-02-22.12.46: src/lib/make-library-glue/glue-junk.pkg:  Minor tidying.
2013-02-02-21.22.52: src/lib/make-library-glue/: Established glue-junk.pkg to hold random junk useful to sh/addglue and sh/rmglue.
2013-02-02-17.40.55: src/lib/make-library-glue/patchable-file.pkg: Minor bugfixes in new code.
2013-02-02-16.27.40: src/lib/make-library-glue/patchable-file.pkg:  Added a print_patchable_file fn for debugging.
2013-02-02-16.12.26: src/lib/make-library-glue/patchable-file.pkg: Added convenience fns intron_count, exon_count, get_intron, get_introns, set_intron, set_introns.   src/lib/std/src/io/winix-text-file-for-os.api, src/lib/std/src/io/winix-text-file-for-os--premicrothread.api:  Renamed lines -> as_lines, partly for better greppability, mostly because we will probably wind up with a small family of as_* fns, and this will make the family relationship clearer.
2013-02-02-13.22.48: src/app/makelib/main/makelib-g.pkg:  mkdir:  Tweaked to take just a path instead of path+permissions.  For scripting we prefer the convenience of defaulting to 755 privs.   src/lib/std/src/io/winix-text-file-for-os.api:  Added convenience fns read_lines, lines, from_lines from src/lib/std/src/io/winix-text-file-for-os--premicrothread.api.
2013-02-02-11.38.39: src/lib/src/dir.api:  Added is_something to is_directory and is_file.
2013-02-01-23.17.42: src/lib/src/dir-tree.api:  Tweaks parallel to the preceding dir.api tweaks.
2013-02-01-20.59.29: src/lib/src/dir.api:  Added is_file, is_directory, directory_names, directories, etc.
2013-01-31-13.37.26: src/glu/*/etc/:  Established empty integration.plan files.
2013-01-31-13.20.34: src/glu/*/etc/:  Renamed library-glue.plan -> construction.plan for clarity, because I want to introduce a separate integration.plan file.
2013-01-31-08.52.03: Established sh/addglue and sh/rmglue.
2013-01-30-20.38.52: src/lib/make-library-glue/make-library-glue.pkg:  To facilitate re-use, split off   src/lib/make-library-glue/patchable-file.pkg.
2013-01-30-16.20.39: src/lib/make-library-glue/make-library-glue.pkg:  build_fun_definition_for_xxx_client_driver_for_library_in_c_subprocess_pkg:  For safety converted arg from record to tuple.
2013-01-30-16.09.44: src/lib/make-library-glue/make-library-glue.pkg:  build_fun_declaration_for_xxx_client_driver_api:  For safety converted arg from record to tuple.
2013-01-30-15.56.04: src/lib/make-library-glue/make-library-glue.pkg:  build_fun_definition_for_xxx_client_driver_for_library_in_main_process_pkg:  For safety converted arg from record to tuple.
2013-01-30-15.22.19: src/lib/make-library-glue/make-library-glue.pkg:  build_fun_declaration_for_xxx_client_api:  For safety converted arg from record to tuple.  Added api_doc slot.
2013-01-29-22.29.57: src/lib/make-library-glue/make-library-glue.pkg: Added support for libcal+ field.
2013-01-29-21.44.28: src/lib/make-library-glue/make-library-glue.pkg: For clarity renamed field 'code'to 'cg-funs' and field 'type' to 'cg-typs'.
2013-01-29-21.23.02: src/glu/opengl/c/in-main/libmythryl-opengl.c, src/glu/opengl/c/in-sub/mythryl-opengl-library-in-c-subprocess.c: Added logic to link in GLEW library.
2013-01-29-08.47.11: src/glu/opengl/etc/library-glue.plan:  open_window:  Dropped fullscreen arg.
2013-01-28-16.42.41: src/glu/opengl/sh/make-opengl-glue:  build_callback_fun_for_xxx_client_g_pkg:  Tweak to produce   fun set_window_size_event_callback s c   instead of      fun set_window_size_event_callback s w c   (no widgets in OpenGL, unlike Gtk).  Output of make-opengl-glu now actually compiles. :-)
2013-01-28-15.54.27: src/lib/make-library-glue/make-library-glue.pkg: Moved   build_callback_fun_for_xxx_client_g_pkg   into  src/glu/gtk/sh/make-gtk-glue + src/glu/opengl/sh/make-opengl-glue  because it is in fact library-specific (and in fact only invoked from the latter two scripts).
2013-01-27-20.54.13: src/glu/opengl/sh/make-opengl-glue:  Second mutate step.
2013-01-27-20.29.20: src/glu/opengl/sh/make-opengl-glue:  First mutate step for preceding clone-and-mutate op.
2013-01-27-11.11.28: src/glu/opengl/sh/make-opengl-glue:  Cloned   build_callback_function()   from   src/glu/gtk/sh/make-gtk-glue  as a first step in clone-and-mutate.
2013-01-26-21.38.04: src/glu/gtk/sh/make-gtk-glue:  Documented the call context for   figure_function_result_type.
2013-01-26-20.54.01: src/glu/gtk/sh/make-gtk-glue:  Documented the call context for  handle_new_widget_result_type_for__build_plain_fun_for__'libmythryl_xxx_c' + handle_widget_result_type_for__build_plain_fun_for__'libmythryl_xxx_c'.
2013-01-26-20.15.10: src/glu/gtk/sh/make-gtk-glue:  Documented the call context for  handle_new_widget_result_type_for__build_plain_fun_for__'mythryl_xxx_library_in_c_subprocess_c' + handle_widget_result_type_for__'build_plain_fun_for__mythryl_xxx_library_in_c_subprocess_c'.
2013-01-26-19.06.05: src/glu/gtk/sh/make-gtk-glue:  Document context in which we will call build_arg_load_for_mythryl_xxx_library_in_c_subprocess_c and build_arg_load_for_libmythryl_xxx_c.
2013-01-26-13.29.25: src/glu/gtk/sh/make-gtk-glue: build_callback_function: Added contextual comments on when and why it is called.
2013-01-26-13.08.06: src/glu/gtk/sh/make-gtk-glue:  libcall_to_args_fn:  Added some comments clarifying where it is called from and what its argument is and means.
2013-01-26-12.34.04: Added comments at all points where src/lib/make-library-glue/make-library-glue.pkg inserts code, documenting just how that code gets synthesized.
2013-01-22-22.42.27: src/lib/make-library-glue/make-library-glue.pkg: Plugin: CLIENT_DRIVER_ARG_TYPE (String, String), CLIENT_DRIVER_RESULT_TYPE (String, String).
2013-01-22-22.16.16: src/lib/make-library-glue/make-library-glue.pkg:  Plugin:  DO_COMMAND_TO_STRING_FN (String, String).
2013-01-22-21.56.03: src/lib/make-library-glue/make-library-glue.pkg: Plugins: DO_COMMAND_FOR_XXX_CLIENT_DRIVER_FOR_LIBRARY_IN_C_SUBPROCESS_PKG (String, String).
2013-01-22-21.30.26: src/lib/make-library-glue/make-library-glue.pkg: Plugin: FIGURE_FUNCTION_RESULT_TYPE.
2013-01-21-23.02.09: src/lib/make-library-glue/make-library-glue.pkg:  Remaining Gtk-specific code moved to  src/glu/gtk/sh/make-gtk-glue.
2013-01-20-23.03.02: src/lib/make-library-glue/make-library-glue.pkg:  Moved Gtk-specific handling of widget arg loads into   src/glu/gtk/sh/make-gtk-glue   via new  BUILD_ARG_LOAD_FOR_MYTHRYL_XXX_LIBRARY_IN_C_SUBPROCESS_C and BUILD_ARG_LOAD_FOR_MYTHRYL_XXX_LIBRARY_IN_MAIN_PROCESS_C  plugins.
2013-01-20-21.38.36: src/lib/make-library-glue/make-library-glue.pkg:  Plugin:  Establish  BUILD_ARG_LOAD  to handle library-specific (e.g. Widget) argument types.
2013-01-20-20.46.44: Moved callback-fn generation code from src/lib/make-library-glue/make-library-glue.pkg to src/glu/gtk/sh/make-gtk-glue to make the former more library-agnostic.
2013-01-20-18.02.03: src/lib/make-library-glue/make-library-glue.pkg: Exported   State   as an opaque type.
2013-01-20-17.12.58: src/lib/make-library-glue/make-library-glue.pkg: Plugin: Established LIBCALL_TO_ARGS_FN.
2013-01-20-15.54.49: src/lib/make-library-glue/make-library-glue.pkg:  Added  (plugins: List(Plugin))  parameter to   fun make_library_binding   to clear the way for further factoring-out of remaining Gtk-specific functionality.
2013-01-20-11.05.34: src/glu/opengl/c/in-main/libmythryl-opengl.c:  Added set_window_title, set_window_size, set_window_position.
2013-01-20-10.40.58: src/glu/opengl/try/minimal-glfw-app works -- first successful OpenGL script run! :-) :-) :-)
2013-01-19-20.22.00: src/glu/opengl/etc/library-glue.plan:  Renamed  glfw_get_window_param -> get_window_param  etc because the symbol-initial garbage Just Looks Wrong in Mythryl, which unlike C has good namespace management.
2013-01-19-20.12.26: src/glu/opengl/etc/library-glue.plan:  Added  glfw_get_window_param()  because it is the last fn needed for glfw hello-world example.
2013-01-19-19.36.27: src/glu/opengl/etc/library-glue.plan:  Added  glfw_get_window_param()  because it is the last fn needed for glfw hello-world example.
2013-01-19-19.15.39: src/glu/opengl/etc/library-glue.plan:  Added  gl_clear()  because it is the next fn needed for glfw hello-world example.
2013-01-19-19.08.03: src/glu/opengl/etc/library-glue.plan:  Changed glfw_open_window result type to Bool, because the C fn is defined that way.
2013-01-19-18.48.48: src/glu/opengl/etc/library-glue.plan:  Added glfw_open_window(),  because you cannot have fun without it.
2013-01-19-18.16.14: src/glu/opengl/etc/library-glue.plan:  Added glfw_terminate(), glfw_swap_buffers(), because Void -> Void fns are easy. :-)
2013-01-19-17.47.14: src/glu/opengl/src/opengl-client-driver-for-library-in-main-process.pkg: make_session: Uncommented   init ()   call, which had been commented out during bootstrapping.
2013-01-19-17.26.55: src/glu/opengl/src/test/: opengl-client-for-library-in-main-process-unit-test.pkg, opengl-client-for-library-in-c-subprocess-unit-test.pkg: Added asserts to exercise negate_boolean, negate_int, negate_float.
2013-01-19-17.02.43: src/glu/opengl/etc/library-glue.plan:  Added negate_boolean. Works.
2013-01-19-12.20.46: src/glu/opengl/etc/library-glue.plan:  Added negate_float. Works.
2013-01-19-11.15.56: src/glu/opengl/etc/library-glue.plan:  Added negate_int: (Session, Int) -> Int  as a test. Works.
2013-01-19-10.42.39: For clarity renamed ogl -> opengl.
2013-01-18-19.39.48: For consistency, clarity and Cthulhu, renamed  src/bnd -> src/glu.
2013-01-18-19.22.50: For brevity, bith and consistency renamed  library-binding.specification  ->  library-glue.plan.
2013-01-18-19.08.57: For brevity and pith renamed   src/lib/make-library-binding/make-library-binding.pkg   to   src/lib/make-library-glue/make-library-glue.pkg.
2013-01-18-18.49.49: src/lib/make-library-binding/make-library-binding.pkg: Rename make linetype to build-a for better symmetry, accuracy, readability and greppability.
2013-01-18-18.17.44: Holy shit:    ogl_client_for_library_in_main_process::print_hello_world (ogl_client_for_library_in_main_process::make_session []);   and   ogl_client_for_library_in_c_subprocess::print_hello_world (ogl_client_for_library_in_c_subprocess::make_session []);  both worked first try!  This is getting scary, man.
2013-01-18-18.00.59: src/bnd/ogl/src/ogl-client.api:  Re/created make_session declaration.
2013-01-15-21.59.28: src/bnd/ogl/src/ogl-client-g.pkg: Re/created make_session[].   src/bnd/ogl/src/ogl-client-driver.api:  Re/created make_session[].
2013-01-15-21.59.28: src/lib/make-library-binding/make-library-binding.pkg:  For clarity renamed lowhalf -> libcall.  src/bnd/ogl/etc/library-binding.specification:  To get the ball rolling, added a fn-name: print_hello_world entry. 4 lines of spec that produce about 65 lines of synthesized code. :-)
2013-01-15-21.30.07: src/lib/make-library-binding/make-library-binding.pkg:  For brevity renamed *generate* -> *build*
2013-01-14-21.19.44: src/lib/make-library-binding/make-library-binding.pkg: More tidying.
2013-01-14-20.55.28: src/lib/make-library-binding/make-library-binding.pkg: More tidying.
2013-01-14-20.36.05: src/lib/make-library-binding/make-library-binding.pkg: Tidying.
2013-01-13-15.25.38: src/lib/make-library-binding/make-library-binding.pkg: Changed _lib7_Gtk_ fn prefix to do__ (now that they are static), other tidying.
2013-01-13-11.36.12: For cleanliness (more use of static fns) in src/bnd/ogl/c/in-main/: merged mythryl-ogl-library-in-main-process.c into libmythryl-ogl.c, in src/bnd/gtk/c/in-main/ merged mythryl-gtk-library-in-main-process.c into libmythryl-gtk.c.
2013-01-12-22.24.54: src/lib/make-library-binding/make-library-binding.pkg: More tidying.
2013-01-12-21.43.58: src/lib/make-library-binding/make-library-binding.pkg: Tidying.
2013-01-12-18.15.33: Converted make-gtk-glue and make-ogl-glue to be just wrappers around make-library-binding.pkg.
2013-01-12-16.49.01: Renamed gtk-glue.config, ogl-glue.config -> library-binding.specification for accuracy and clarity. (The file does much more than configure the library binding;  it contains most of the library content.)
2013-01-12-16.22.14: src/app/makelib/main/makelib-g.pkg: Changed dirname to return . when no directory part is present. This conforms to dirname(1) on Linux and programmer convenience.
2013-01-12-16.06.03: src/lib/make-library-binding/make-library-binding.pkg: Moved guts of make-gtk-glue script in, teased into compiling. (Issues were mainly lack of scripting_globals::.)
2013-01-12-14.35.30: Established src/lib/make-library-binding/make-library-binding.pkg to factor out common code between  src/bnd/gtk/sh/make-gtk-glue  and  src/bnd/ogl/sh/make-ogl-glue.
2013-01-12-14.15.18: src/bnd/gtk/src/, src/bnd/ogl/src/: Moved unit test code into test/ subdirs.
2013-01-12-13.01.56: For clarity renamed *server-in* -> *library-in*, for example ogl-client-for-server-in-main-process-unit-test.pkg -> ogl-client-for-library-in-main-process-unit-test.pkg.
2013-01-12-12.34.59: src/bnd/A.DIRECTORY.OVERVIEW:  More comments.
2013-01-12-11.28.14: More dir cleanup:  Moved  src/bnd/gtk/lib -> src/bnd/gtk/c/in-main,  src/bnd/ogl/lib -> src/bnd/ogl/c/in-main.
2013-01-12-10.46.48: Dir cleanup: moved  src/bnd/gtk/c/* -> src/bnd/gtk/c/in-sub,  src/bnd/ogl/c/* -> src/bnd/ogl/c/in-sub.
2013-01-10-21.24.11: sh: For clarity and consistency renamed uninstall -> make-uninstall.
2013-01-10-20.20.38: Dropped some ancient-and-unused gtk crud.
2013-01-09-12.59.27: doc/tex/: Moved to src/bnd/gtk/doc/tex: section-libref-gtk.tex top-pkg-gtk_via_pipe.tex top-pkg-gtk_driver.tex top-pkg-gtk.tex top-pkg-easy_gtk.tex top-pkg-gtk_via_pipe_driver.tex top-api-Easy_Gtk.tex top-api-Gtk.tex top-api-Gtk_Driver.tex.  Moved to src/bnd/ogl/doc/tex: top-pkg-ogl_driver.tex top-pkg-ogl_via_pipe_driver.tex top-pkg-ogl_via_pipe.tex top-pkg-easy_ogl.tex top-pkg-ogl.tex section-libref-ogl.tex top-api-Ogl.tex top-api-Ogl_Driver.tex top-api-Easy_Ogl.tex.
2013-01-09-12.48.29: Renamed src/srv -> srv/bnd because the crucial concept is not servers but library bindings
2013-01-08-23.49.47: mv try/gtk src/srv/gtk/try
2013-01-08-23.42.29: mv src/lib/src/gtk-event.pkg src/srv/gtk/src;  mv src/lib/src/ogl-event.pkg src/srv/ogl/src.
2013-01-08-23.23.54: mv src/lib/src/gtk-client* src/srv/gtk/src;  mv src/lib/src/ogl-client* src/srv/ogl/src.
2013-01-08-22.47.21: mv src/lib/src/easy-gtk.* src/srv/gtk/src;   mv src/lib/src/easy-ogl.* src/srv/ogl/src.
2013-01-08-22.22.20: Moved src/c/lib/gtk/* -> src/srv/gtk/lib,  src/c/lib/ogl/* -> src/srv/ogl/lib.
2013-01-08-19.20.20: Moved  mythryl-gtk-server-in-c-subprocess.c  src/c/gtk/ -> src/srv/gtk/c/,  moved mythryl-ogl-server-in-c-subprocess.c  src/c/ogl/ -> src/srv/ogl/c/.
2013-01-07-22.20.35: Moved make-gtk-glue to src/srv/gtk/sh/make-gtk-glue, make-ogl-glue to src/srv/ogl/sh/make-ogl-glue.
2013-01-07-22.01.27: As a first step in rationalizing library bindings, moved gtk-glue.config -> src/srv/gtk/etc and ogl-glue.config -> src/src/ogl/etc.
2013-01-07-21.32.18: *ogl*: Re/established make_session() and init().
2013-01-07-18.16.46: For clarity and consistency renamed   gtk-driver.c -> mythryl-gtk-server-in-main-process.c,    ogl-driver.c -> mythryl-ogl-server-in-main-process.c.
2013-01-07-17.54.43: For clarity and consistency renamed src/c/ogl/mythryl-ogl-server.c -> src/c/ogl/mythryl-ogl-server-in-c-subprocess.c,  src/c/gtk/mythryl-gtk-server.c src/c/gtk/mythryl-gtk-server-in-c-subprocess.c.
2013-01-07-17.24.19: Re-encountered the glutMainLoop() idiocy/issue, decided to switch to GLFW to avoid it: src/c/lib/ogl/ogl-driver.c, src/c/ogl/mythryl-ogl-server.c:  Changed #include <GL/freeglut.h>  -> #include <GL/glfw.h>  src/c/o/Makefile.in: RUNTIME, mythryl-ogl-server: -lglfw -lXrandr -lrt -lX11 -lGLU -lGL -pthread -lm.
2013-01-06-20.51.23: Massive renaming of gtk and ogl binding files for clarity and symmetry.
2013-01-06-18.09.07: src/lib/src/ogl-driver.api (etc): Re-established a skeletal Session type.
2013-01-06-17.42.31: src/lib/src/gtk-driver.pkg, src/lib/src/gtk-via-pipe-driver.pkg, src/lib/src/gtk-g.pkg: Moved callback maps into a separate record for tidiness.
2013-01-06-16.21.47: Slightly better generated-code attributions in make-gtk-glue + make-ogl-glue.
2013-01-06-10.35.41: More out-with-the-old in: src/lib/src/ogl-driver.api, src/lib/src/ogl.api, src/lib/src/ogl-driver.pkg, src/lib/src/ogl-g.pkg, src/lib/src/ogl-event.pkg, src/lib/src/ogl-via-pipe-driver.pkg.
2013-01-06-09.56.52: src/c/lib/ogl/ogl-driver.c: Cleaning, added  #include <GL/freeglut.h>.     src/c/ogl/mythryl-ogl-server.c: Cleaning, added   #include <GL/freeglut.h>.   src/c/o/Makefile.in: $(RUNTIME), mythryl-ogl-server:  Added  -lglut -lGL.
2013-01-05-23.41.45: Renamed all the SDL infrastructure to OGL: The SDL docs just failed to excite, and OpenGL is the safest bet in town.
2013-01-04-23.45.04: Cleaned most of the Gtk stuff out of the new SDL infrastructure, clearing the way to start adding actual SDL content to it tomorrow. What fun! :-)
2013-01-03-21.21.27: Code generated by sdl-glue now compiles. Of course it needs to be all deleted anyhow -- it is still actually gtk stuff.
2013-01-03-21.05.20: Tweaked some Do not edit lines to match make-sdl-glue expectations; the latter now runs to completion.
2013-01-03-20.52.13: Cloned all the gtk stuff to produce a zero-th order sdl infrastructure.
2013-01-01-13.21.59: Added src/srv/A.SERVER.OVERVIEW
2013-01-01-13.03.34: Established src/srv to hold mythryl servers and src/srv/gtk to hold mythryl gtk server stuff.
2013-01-01-12.45.52: Deleted various old ramlog.buf crudfiles.
2013-01-01-11.14.02: src/lib/src/make-gtk-glue: Cosmetic cleaning.
2013-01-01-10.59.50: Renamed mythryl-gtk-slave -> mythryl-gtk-server to better conform to modern usage (e.g., X server).
2012-12-31-21.11.18: src/lib/std/src/threadkit/: Renamed threadkit-process-result.api -> process-result.api.
2012-12-31-21.01.49: src/lib/std/src/socket/: Renamed threadkit-internet-socket.api -> internet-socket.api
2012-12-31-20.50.53: src/lib/std/src/socket/: Renamed threadkit-socket.api -> socket.api.
2012-12-31-20.39.47: src/lib/std/src/socket/: Renamed threadkit-plain-socket.api -> plain-socket.api.
2012-12-31-20.30.51: src/lib/std/src/socket/: Renamed threadkit-unix-domain-socket.api -> unix-domain-socket.api.
2012-12-31-20.20.15: src/lib/std/src/posix/: Renamed threadkit-spawn.api -> spawn.api.
2012-12-31-20.11.37: src/lib/std/src/io/: Renamed threadkit-winix-text-file-for-os.api -> winix-text-file-for-os.api.
2012-12-31-19.59.21: src/lib/std/src/io/: Renamed threadkit-winix-pure-text-file-for-os.api -> winix-pure-text-file-for-os.api.
2012-12-31-19.49.03: src/lib/std/src/io/: Renamed threadkit-winix-file-for-os.api -> winix-file-for-os.api.
2012-12-31-19.37.10: src/lib/std/src/io/: Renamed threadkit-winix-extended-file-io-driver-for-os.api -> winix-extended-file-io-driver-for-os.api.
2012-12-31-19.18.08: src/lib/std/src/io/: Renamed threadkit-winix-data-file-for-os.api -> winix-data-file-for-os.api
2012-12-31-19.05.07: src/lib/std/src/io/: Renamed threadkit-winix-base-file-io-driver-for-os.api -> winix-base-file-io-driver-for-os.api.
2012-12-31-18.53.52: src/lib/std/src/io/: Renamed threadkit-io-startup-and-shutdown.api -> io-startup-and-shutdown.api.
2012-12-31-18.37.56: src/lib/src/lib/thread-kit/src/winix/: Renamed threadkit-winix-process.api -> winix-process.api.
2012-12-31-18.28.47: src/lib/src/lib/thread-kit/src/winix/: Renamed threadkit-winix-io.api -> winix-io.api.
2012-12-31-18.18.03: src/lib/src/lib/thread-kit/src/winix/: Renamed threadkit-winix.api -> winix.api.
2012-12-31-17.21.20: src/lib/std/src/socket/: Renamed internet-socket.api -> internet-socket--premicrothread.api
2012-12-31-17.11.06: src/lib/std/src/socket/: Renamed socket.api -> socket--premicrothread.api
2012-12-31-16.49.57: src/lib/std/src/socket/: Renamed plain-socket.api -> plain-socket--premicrothread.api
2012-12-31-16.36.49: src/lib/std/src/socket/: Renamed unix-domain-socket.api -> unix-domain-socket--premicrothread.api
2012-12-31-16.26.55: src/lib/std/src/posix/: Renamed spawn.api -> src/lib/std/src/posix/spawn--premicrothread.api
2012-12-31-16.15.00: src/lib/std/src/io/: Renamed winix-text-file-for-os.api -> winix-text-file-for-os--premicrothread.api.
2012-12-31-16.04.21: src/lib/std/src/io/: Renamed winix-pure-text-file-for-os.api -> winix-pure-text-file-for-os--premicrothread.api.
2012-12-31-15.53.05: src/lib/std/src/io/: Renamed winix-pure-file-for-os.api -> winix-pure-file-for-os--premicrothread.api
2012-12-31-15.39.55: src/lib/std/src/io/: Renamed winix-file-for-os.api -> winix-file-for-os--premicrothread.api
2012-12-31-15.31.05: src/lib/std/src/io/: Renamed winix-extended-file-io-driver-for-os.api -> winix-extended-file-io-driver-for-os--premicrothread.api.
2012-12-31-15.21.35: src/lib/std/src/io/: Renamed winix-data-file-for-os.api -> winix-data-file-for-os--premicrothread.api
2012-12-31-15.10.30: src/lib/std/src/io/: Renamed winix-base-file-io-driver-for-os.api -> winix-base-file-io-driver-for-os--premicrothread.api
2012-12-31-15.01.46: src/lib/std/src/io/: Renamed io-startup-and-shutdown.api -> io-startup-and-shutdown--premicrothread.api.
2012-12-31-14.51.29: src/lib/std/src/winix/: Renamed winix-process.api -> winix-process--premicrothread.api
2012-12-31-14.41.43: src/lib/std/src/winix/: Renamed winix-io -> winix-io--premicrothread.api.
2012-12-31-14.32.54: src/lib/std/src/winix/: Renamed winix.api -> winix__premicrothread.api
2012-12-31-14.16.09: src/lib/src/lib/thread-kit/src/lib/: Renamed threadkit-uncaught-exception-reporting.api -> uncaught-exception-reporting.api.
2012-12-31-13.56.41: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed run-at.api -> threadkit-run-at.api.
2012-12-30-20.49.16: Eliminated now-unused   src/lib/std/src/threadkit/posix/retry-syscall-on-eintr.pkg
2012-12-30-20.39.09: src/lib/std/src/posix/winix-data-file-io-driver-for-posix.pkg:  Eliminated now-redundant calls to retry_on_eintr.
2012-12-30-20.30.15: src/lib/x-kit/xclient/src/wire/display.pkg:  Eliminated now-redundant calls to retry_on_eintr.
2012-12-30-15.27.37: src/lib/std/src/io/: Renamed threadkit-winix-mailslot-io-g.pkg -> winix-mailslot-io-g.pkg.
2012-12-30-15.19.13: src/lib/std/src/threadkit/: Renamed threadkit-process-result.pkg -> process-result.pkg.
2012-12-30-15.08.54: src/lib/std/: Renamed threadkit-winix.pkg -> winix.pkg.
2012-12-30-14.59.22: src/lib/std/src/threadkit/posix/: Renamed threadkit-winix-io.pkg -> winix-io.pkg.
2012-12-30-14.49.36: src/lib/std/src/socket/: Renamed threadkit-unix-domain-socket.pkg -> unix-domain-socket.pkg.
2012-12-30-14.39.28: src/lib/std/src/socket/: Renamed threadkit-proto-socket.pkg -> proto-socket.pkg.
2012-12-30-14.29.36: src/lib/std/src/socket/: Renamed threadkit-plain-socket.pkg -> plain-socket.pkg.
2012-12-30-14.20.06: src/lib/std/src/socket/: Renamed threadkit-socket.pkg -> socket.pkg.
2012-12-30-14.10.48: src/lib/std/src/socket/: Renamed threadkit-internet-socket.pkg -> internet-socket.pkg.
2012-12-30-14.02.32: src/lib/std/src/posix/: Renamed threadkit-winix-text-file-io-driver-for-posix.pkg -> winix-text-file-io-driver-for-posix.pkg.
2012-12-30-13.51.17: src/lib/std/src/posix/: Renamed threadkit-winix-text-file-for-posix.pkg -> winix-text-file-for-posix.pkg.
2012-12-30-13.38.47: src/lib/std/src/posix/: Renamed threadkit-winix-data-file-io-driver-for-posix.pkg -> winix-data-file-io-driver-for-posix.pkg.
2012-12-30-12.18.10: src/lib/std/src/posix/: Renamed threadkit-winix-data-file-for-posix.pkg -> winix-data-file-for-posix.pkg.
2012-12-30-12.01.19: src/lib/std/src/posix/: Renamed threakit-data-file.pkg -> data-file.pkg.
2012-12-30-11.44.05: src/lib/std/src/posix/: Renamed threadkit-winix-process.pkg -> winix-process.pkg.
2012-12-30-11.32.55: src/lib/std/src/posix/: Renamed threadkit-spawn.pkg -> spawn.pkg.
2012-12-30-11.21.43: src/lib/std/src/io/: Renamed threadkit-winix-text-file-for-os-g.pkg -> winix-text-file-for-os-g.pkg.
2012-12-29-20.51.47: src/lib/std/src/io/: Renamed threakit-winix-data-file-for-os-g.pkg -> winix-data-file-for-os-g.pkg.
2012-12-29-20.51.47: src/lib/std/src/io/: Renamed threadkit-winix-base-text-file-io-driver-for-posix.pkg -> winix-base-text-file-io-driver-for-posix.pkg.
2012-12-29-20.08.46: src/lib/std/src/io/: Renamed threadkit-winix-base-file-io-driver-for-posix-g.pkg -> winix-base-file-io-driver-for-posix-g.pkg.
2012-12-29-19.57.46: src/lib/std/src/io/: Renamed threadkit-io-startup-and-shutdown.pkg -> io-startup-and-shutdown.pkg.
2012-12-29-19.36.03: src/lib/std/src/io/: Renamed threadkit-winix-base-data-file-io-driver-for-posix.pkg -> winix-base-data-file-io-driver-for-posix.pkg.
2012-12-29-19.26.20: src/lib/src/: Renamed threadkit-quickstring.pkg -> quickstring.pkg.
2012-12-29-18.52.30: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed threadkit-run-at.pkg -> run-at.pkg.
2012-12-29-18.38.16: src/lib/std/: Renamed winix.pkg -> winix--premicrothread.pkg.
2012-12-29-17.52.08: src/lib/std/src/posix/: Renamed winix-io.pkg -> winix-io--premicrothread.pkg.
2012-12-29-17.33.29: src/lib/std/src/socket/: Renamed unix-domain-socket.pkg -> unix-domain-socket--premicrothread.pkg.
2012-12-29-17.12.53: src/lib/std/src/socket/: Renamed proto-socket.pkg -> proto-socket--premicrothread.pkg.
2012-12-29-17.01.22: src/lib/std/src/socket/: Renamed plain-socket.pkg -> plain-socket--premicrothread.pkg.
2012-12-29-16.40.42: src/lib/std/: Renamed socket.pkg -> socket--premicrothread.pkg.
2012-12-29-11.32.22: src/lib/std/src/socket/: Renamed internet-socket.pkg -> internet-socket--premicrothread.pkg.
2012-12-29-11.20.44: src/lib/std/src/posix/: Renamed winix-text-file-io-driver-for-posix -> winix-text-file-io-driver-for-posix--premicrothread.pkg.
2012-12-29-11.04.05: src/lib/std/src/posix/: Renamed winix-text-file-for-posix.pkg -> winix-text-file-for-posix--premicrothread.pkg.
2012-12-29-10.46.29: src/lib/std/src/posix/: Renamed winix-data-file-io-driver-for-posix.pkg -> winix-data-file-io-driver-for-posix--premicrothread.pkg
2012-12-28-23.11.35: src/lib/std/src/posix/:  Renamed file.pkg -> file--premicrothread.pkg.  (Oboy was that not fun...)
2012-12-28-17.59.08: src/lib/std/src/posix/: Renamed winix-data-file-for-posix.pkg -> winix-data-file-for-posix--premicrothread.pkg.
2012-12-28-17.47.49: src/lib/std/src/posix/: Renamed data-file.pkg -> data-file--premicrothread.pkg.
2012-12-27-21.16.24: src/lib/std/src/posix/: Renamed winix-process.pkg -> winix-process--premicrothread.pkg.
2012-12-27-21.07.08: src/lib/std/src/posix/: Renamed spawn.pkg -> spawn--premicrothread.pkg.
2012-12-27-20.51.58: src/lib/std/src/io/: Renamed winix-text-file-for-os-g.pkg -> winix-text-file-for-os-g--premicrothread.pkg.
2012-12-27-20.37.02: src/lib/std/src/io/: Renamed winix-data-file-for-os-g.pkg -> winix-data-file-for-os-g--premicrothread.pkg.
2012-12-27-20.23.40: src/lib/std/src/io/: Renamed winix-base-text-file-io-driver-for-posix.pkg -> winix-base-text-file-io-driver-for-posix--premicrothread.pkg.
2012-12-27-20.11.36: src/lib/std/src/io/: Renamed winix-base-file-io-driver-for-posix-g.pkg -> winix-base-file-io-driver-for-posix-g--premicrothread.pkg.
2012-12-27-19.19.12: src/lib/std/src/io/: Renamed io-startup-and-shutdown.pkg -> io-startup-and-shutdown--premicrothread.pkg.
2012-12-27-19.06.16: src/lib/std/src/io/: Renamed winix-base-data-file-io-driver-for-posix.pkg -> winix-base-data-file-io-driver-for-posix--premicrothread.pkg.
2012-12-27-18.51.27: src/lib/src/: Renamed quickstring.pkg -> quickstring--premicrothread.pkg
2012-12-27-18.29.22: src/lib/std/src/win32/: Renamed winix-text-file-io-driver-for-win32.pkg -> winix-text-file-io-driver-for-win32--premicrothread.pkg.
2012-12-27-18.18.13: src/lib/std/src/win32: Renamed winix-text-file-for-win32.pkg -> winix-text-file-for-win32--premicrothread.pkg
2012-12-27-18.10.28: src/lib/std/src/win32: Renamed winix-data-file-io-driver-for-win32.pkg -> winix-data-file-io-driver-for-win32--premicrothread.pkg
2012-12-27-18.01.08: src/lib/std/src/nj/: Renamed run-at.api -> run-at--premicrothread.api, run-at.pkg -> run-at--premicrothread.pkg.
2012-12-27-17.31.12: src/c/lib/hostthread/libmythryl-hostthread.c: Dropped send_fake_posix_signal_to_mythryl_hostthread because that whole idea turned out to be unworkable.
2012-12-26-21.05.54: src/lib/src/lib/thread-kit/src/core-thread-kit/:  Dropped threadkit-version.pkg because as an integrated part of the system threadkit no longer needs a separate version number.
2012-12-26-20.34.59: src/c/lib/socket/sendbufto.c:  Uncommented retry-on-EINTR logic.
2012-12-26-20.21.33: src/c/lib/socket/sendbuf.c:  Uncommented retry-on-EINTR logic.
2012-12-26-20.10.56: src/c/lib/socket/recvfrom.c:  Uncommented retry-on-EINTR logic.
2012-12-26-19.59.22: src/c/lib/socket/recvbuffrom.c:  Uncommented retry-on-EINTR logic.
2012-12-26-19.45.00: src/c/lib/socket/close.c:  Uncommented retry-on-EINTR logic.
2012-12-26-19.11.34: src/c/lib/posix-io/write.c:  Uncommented retry-on-EINTR logic.
2012-12-26-18.59.08: src/c/lib/posix-io/fcntl_l_64.c:  src/c/lib/posix-io/fcntl_sfl.c:  Uncommented retry-on-EINTR logic.
2012-12-26-18.44.27: src/c/lib/posix-io/fcntl_d.c: src/c/lib/posix-io/fcntl_gfl.c: src/c/lib/posix-io/fcntl_l.c:   Uncommented retry-on-EINTR logic.
2012-12-26-18.14.28: src/c/lib/posix-io/dup.c:  Uncommented retry-on-EINTR logic.
2012-12-26-18.01.36: src/c/lib/posix-file-system/mkstemp.c:  Uncommented retry-on-EINTR logic.
2012-12-26-17.47.56: src/c/lib/posix-file-system/ftruncate.c, ftruncate_64.c:  Uncommented retry-on-EINTR logic.
2012-12-26-14.38.20: src/c/lib/socket/recvbuf.c:  Re-enabled retry-on-EINTR, this time it worked, I think because ripping out all the nonblocking-socket stuff resolved the problem.
2012-12-26-00.32.40: src/lib/std/src/socket/proto-socket.pkg: Simplified  Socket (A_sock, A_af) = SOCKET { file_descriptor: Socket_Fd, nonblocking: Ref(Bool) }  down to just  Socket (A_sock, A_af) = Socket_Fd.
2012-12-26-00.07.36: src/lib/std/src/socket/socket-guts.pkg:  More ripping out unwanted nonblocking-I/O crud.
2012-12-25-23.36.43: src/lib/std/src/socket/:  Dropped now-unused nonblocking-socket-junk.pkg
2012-12-25-23.26.55: src/lib/std/src/socket/socket-guts.pkg:  Still more ripping out unwanted nonblocking-I/O crud.
2012-12-25-16.46.28: src/lib/std/src/socket/socket-guts.pkg:  More ripping out unwanted nonblocking-I/O crud.
2012-12-25-16.39.40: src/lib/std/src/socket/socket-guts.pkg:  Ripping out unwanted nonblocking-I/O crud.
2012-12-24-11.15.10: src/c/lib/socket/accept.c:  Uncommented retry-on-EINTR logic.
2012-12-24-01.58.06: src/lib/std/src/io/winix-base-file-io-driver-for-os.api:	    FILEREADER:  Dropped read_rw_vector because it is never used and sometimes not even defined.
2012-12-23-16.54.37: src/lib/std/src/io/winix-base-file-io-driver-for-os.api:  FILEREADER: Changed   read_vector   from   Null_Or(Int -> Vector)   to   Int -> Vector   as part of my anti-flaky-by-design campaign.
2012-12-23-16.30.04: Removed a bunch of commented-out max_readable_without_blocking code left from last step.  src/lib/std/src/io/io-exceptions.api: Dropped exception NONBLOCKING_IO_NOT_SUPPORTED, which is no longer used anywhere.
2012-12-23-15.24.33: src/lib/std/src/socket/socket.api and many related socket-I/O and file-I/O files:  Eliminated all the nonblocking ops, which are a design disaster in the context of concurrent Mythryl, and which were used only once in entire codebase.
2012-12-22-13.34.56: src/lib/std/src/socket/socket-guts.pkg:  Renamed sock_nb -> socket_nonblocking, sock_b -> socket_blocking.
2012-12-22-13.04.44: src/lib/std/src/socket/nonblocking-socket-junk.pkg:  For clarity and greppability renamed  wrap_nb_o -> wrap_nonblocking_o,   wrap_nb_b -> wrap_nonblocking_b.
2012-12-20-22.05.05: src/c/h/asm-to-c-request-codes.h:  For clarity rename REQUEST_RESUME_SOFTWARE_GENERATED_PERIODIC_EVENT_HANDLER -> REQUEST_RESUME_AFTER_RUNNING_SOFTWARE_GENERATED_PERIODIC_EVENT_HANDLER.
2012-12-20-21.48.32: src/c/h/asm-to-c-request-codes.h:  For clarity rename REQUEST_RESUME_SIGNAL_HANDLER -> REQUEST_RESUME_AFTER_RUNNING_SIGNAL_HANDLER.
2012-12-20-20.53.24: src/c/h/runtime-base.h:  struct hostthread:  For clarity and consistency renamed posix_signal_pending -> interprocess_signal_pending.
2012-12-20-20.31.28: src/c/h/asm-to-c-request-codes.h:  For clarity and consistency renamed REQUEST_CLEANING -> REQUEST_HEAPCLEANING.
2012-12-20-20.12.01: src/lib/compiler/back/top/nextcode/nextcode-form.api:  For consistency and brevity renamed (sub) package type -> typ. (Subpackage names by convention are 3 chars or less.)
2012-12-20-09.31.25: src/lib/compiler/back/top/closures/:  On second thought renamed map-free-variables-of-functions.pkg -> make-per-function-free-variable-maps.pkg
2012-12-20-09.05.34: src/lib/compiler/back/top/closures/:  For clarity renamed freeclose.pkg -> map-free-variables-of-functions.pkg.  Established src/A.CLOSURE.OVERVIEW
2012-12-17-21.59.34: For maintainability, pervasively changed RELEASE_MYTHRYL_HEAP + RECOVER_MYTHRYL_HEAP to use __func__ instead of literal function names.
2012-12-17-09.49.22: src/lib/src/lib/thread-kit/src/core-thread-kit/:  For clarity and consistency renamed thread-scheduler.api -> microthread-preemptive-scheduler.api, thread-scheduler.pkg -> microthread-preemptive-scheduler.pkg.
2012-12-17-09.09.54: src/lib/std/src/hostthread.pkg: Hooked up Mythryl-level send_fake_posix_signal_to_mythryl_hostthread() to C-level do_send_fake_posix_signal_to_mythryl_hostthread() in src/c/lib/hostthread/libmythryl-hostthread.c.
2012-12-16-22.10.22: src/c/lib/hostthread/libmythryl-hostthread.c:  Implemented do_send_fake_posix_signal_to_mythryl_hostthread.
2012-12-16-21.51.52: src/c/lib/hostthread/libmythryl-hostthread.c:  Established   send_fake_posix_signal_to_mythryl_hostthread.
2012-12-16-21.32.37: src/lib/std/src/hostthread.api: Established   send_fake_posix_signal_to_mythryl_hostthread: (Hostthread, ip::Signal) -> Void;   -- 5 minutes of work and the point of the last two weeks of work. :-)
2012-12-16-21.12.05: The signal-handling code thicket was beyond salvage; took two weeks to rewrite it completely. posix-signal.api, posix-signals.api and runtime-signals.api have collapsed into just interprocess-signals.api; the corresponding C-side code thicket has been pruned back to just interprocess-signals.c.
2012-12-11-22.02.23: To better localize signal-table processing, moved signal-count initialization from src/c/main/runtime-state.c to new fn clear_signal_counts() in src/c/machine-dependent/posix-signal.c
2012-12-11-22.02.23: To better localize signal-table processing, moved choose_signal() from src/c/machine-dependent/signal-stuff.c to src/c/machine-dependent/posix-signal.c
2012-12-11-21.51.39: src/lib/std/src/nj/: Rename runtime-signals.api -> interprocess-signals.api (etc).
2012-12-10-23.02.19: src/lib/std/src/psx/: Eliminated posix-signal.api + posix-signal.pkg as incompatible and redundant with posix-signals.api + posix-signals.pkg.
2012-12-08-23.29.11: src/lib/std/src/nj/runtime-signals-guts.pkg:  To simplify the code changed   Signal = SIGNAL ci::System_Constant;   to   Signal = ci::System_Constant;
2012-12-08-23.08.16: src/lib/std/src/nj/runtime-signals-guts.pkg: Switched from weak to strong sealing for to make Signal type more opaque externally.
2012-12-08-22.52.50: src/lib/std/src/posix/spawn.api:  Removed from_status() because it is weird and nowhere used.
2012-12-08-22.36.33: src/lib/std/src/psx/posixlib.api:  For conciseness + consistency renamed package error -> package err, package signal -> package sig.
2012-12-08-21.04.23: src/lib/std/src/psx/posix-signal.pkg:  Eliminate   to_unt: Signal -> hu::Unt;   because it likewise breaks abstraction and is not used.
2012-12-08-20.56.19: src/lib/std/src/psx/posix-signal.pkg:  Eliminated   from_unt:  hu::Unt -> Signal;  because it is not used and breaks abstraction of Signal unpleasantly.
2012-12-08-20.31.04: Time to chop back the signals code-thicket a bit.  First step: Eliminated the runtime-signals stuff. (Good idea, bad design.)
2012-12-08-14.11.16: src/c/config/posix-signals.c:  SigTable[]:  Added in all Linux signals not already present, from 2.6.32 /usr/include/bits/signum.h, excepting SIGFPE and SIGSEGV, which were recalcitrant.
2012-12-02-20.28.46: src/lib/x-kit/xclient/: For consistency renamed pkg/ -> src/.   src/lib/x-kit/xclient/src/wire/:  src/lib/x-kit/xclient/src/wire/xsocket.pkg:  Light cleaning.
2012-12-01-12.59.33: src/lib/std/src/io/winix-text-file-for-os-g.pkg: For consistency renamed GLOBAL_FILE_STUFF.closed -> GLOBAL_FILE_STUFF.is_closed.
2012-12-01-10.35.43: src/lib/std/src/socket/socket-guts.pkg:  For clarity rename nbio -> nonblockingio.  (I thought it must be NETBIOS. :-)
2012-12-01-10.17.02: src/lib/std/src/socket/socket.api:   For concision and consistency, renamed subpackage socket to typ.  src/lib/std/src/socket/threadkit-socket.pkg:  For concision and consistency, renamed subpackage control to ctl.
2012-12-01-09.44.29: src/lib/std/src/socket/socket.api:   For concision and consistency, renamed subpackage control to ctl.
2012-11-24-11.40.30: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg:  redirect_slow_syscalls_via_support_hostthreads: Overwhelming majority of slow system calls now successfully redirected. Problems remain in posix_id, socket_guts and net_db packages.
2012-11-23-20.32.53: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg:  Redirection of posix_io and posix_file seems to be working -- looks like we are over the hump on this.  Configured redirection of remaining packages to be env-var selectable to speed remaining checkout.
2012-11-23-14.45.49: src/c/hostthread/hostthread-on-posix-threads.c:  Brutally hacked pth__pthread_create() to leave SIGALRM blocked in secondary hostthreads because alarm_handler in src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg was getting called in secondary pthreads, with bad results.  src/lib/std/src/posix/spawn.pkg: fork_process':  Changed pio::close -> pio::close__without_syscall_redirection, pio::dup2 -> pio::dup2__without_syscall_redirection, pio::setfd -> pio::setfd__without_syscall_redirection, especially in child process where redirection will not work.
2012-11-22-14.07.29: src/lib/std/src/hostthread-unit-test.pkg:  Switched from assert() to assert'() in secondary-hostthread code because assert() prints dots via ops which use microthread ops, which do not work in secondary hostthreads.
2012-11-22-10.51.19: src/lib/std/src/psx/posix-io.api:  Added make_pipe__without_syscall_redirection, close__without_syscall_redirection, read_as_vector__without_syscall_redirection, read_into_buffer__without_syscall_redirection, write_vector__without_syscall_redirection, write_rw_vector__without_syscall_redirection.  src/lib/std/src/winix/winix-io.api:   wait_for_io_opportunity__without_syscall_redirection.   src/lib/std/src/hostthread/io-wait-hostthread.pkg: Converted to use preceding calls.
2012-11-21-00.12.52: src/c/main/ramlog.c:  Log id and name of current hostthread.
2012-11-20-23.41.36: src/c/main/runtime-state.c:  make_task: Initialization of hostthread->id fields was totally broken.
2012-11-20-22.41.20: src/c/h/runtime-base.h:  Add   extern Hostthread* pth__get_hostthread_by_id (int id).   src/c/lib/hostthread/libmythryl-hostthread.c:  Code up do_get_hostthread_name(), do_set_hostthread_name().
2012-11-20-21.50.50: src/c/h/runtime-base.h:  struct hostthread:  Added   char* name;  field.
2012-11-20-20.39.04: src/c/lib/hostthread/libmythryl-hostthread.c: Establish get_hostthread_name(), set_hostthread_name().  src/lib/std/src/hostthread.api: Establish get_hostthread_name(), set_hostthread_name().
2012-11-20-19.54.43: src/lib/std/src/hostthread.api: Renamed pthread_exit -> hostthread_exit for clarity, consistency and the Greater Glory of Gondwana.
2012-11-20-17.22.37: src/c/main/ramlog.c: ramlog_printf:  Log hostthread id (pthread_self()) on each line to facilitate debugging multi-hostthread stuff.
2012-11-19-20.12.07: src/lib/src/unit-test.pkg:  assert:  Changed   print .;   to   printf .;   to be a bit more agnostic on microthread/hostthread sorts of things.
2012-11-18-18.51.44: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  add_inter_hostthread_request_handler_thunk_to_run_queue':  Added an   if  because this fn can be called within or without uninterruptible scopes, but must call run_thunk_immediately__iu only within uninterruptible scope.
2012-11-18-11.01.31: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  run_thunk_immediately:  I added   enter_uninterruptible_scope (); ...  exit_uninterruptible_scope ();  in this fn thinking Reppy had forgotten to do so, but in fact he was right and I was wrong, it is only called from within uninterruptible scopes, so removed the enter/exit pair and renamed to   run_thunk_immediately__iu  to flag the fact that it should be called only from within uninterruptible scopes.
2012-11-17-11.13.16: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: Tidying.
2012-11-17-10.28.38: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c:  make_package_literals_via_bytecode_interpreter__may_heapclean:  Had   if (tripwirebuf[0] != 0)   where   if (tripwirebuf[0] != AGEGROUP0_OVERRUN_TRIPWIRE_BUFFER_VALUE)   was needed.  Worse, it was logging it but not being noticed because it did not exit().
2012-11-11-22.11.58: src/lib/std/src/hostthread/io-bound-task-hostthreads.pkg:  Applied changes from src/lib/std/src/hostthread/cpu-bound-task-hostthreads.pkg.
2012-11-11-21.56.10: src/lib/std/src/hostthread/cpu-bound-task-hostthreads.pkg: Mutex-related tweaking.
2012-11-11-21.02.05: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: alarm_handler: Do not switch microthreads if *hth::microthread_switch_lock != 0.
2012-11-11-20.46.25: src/lib/std/src/hostthread.api:  Added 	microthread_switch_lock: Ref(Int); increment_microthread_switch_lock: Void -> Void; decrement_microthread_switch_lock: Void -> Void;
2012-11-11-20.23.12: src/lib/std/src/hostthread/io-wait-hostthread.pkg: echo: Moved write_to_private_pipe() outside mutex-holding critical section to eliminate deadlock route.
2012-11-11-19.06.17: src/c/main/runtime-main.c:  print_stats_and_exit:  Improved debug support:  if getenv(MILLISECONDS_BETWEEN_RAMLOG_AND_SYSLOG_DUMPS) then  dump_ramlog(); dump_syscall_log();  before exit()ing.
2012-11-04-20.41.14: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  get_any_new_inter_hostthread_requests:  Rewrote to fix long-standing (most of the year) freeze-while-compiling-with-syscall-redirects-on bug.
2012-11-03-11.37.08: src/c/lib/heap/libmythryl-heap.c:  do_write_line_to_ramlog:  Client no longer needs to (or should) supply terminal newline. For consistency between log::note and log::note_in_ramlog and also just good programming practice (easier to add a newline than to remove one).
2012-11-03-11.05.09: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  Dropped the do_timeslice stuff, an idea that did not work.
2012-11-03-10.52.47: src/c/heapcleaner/heap-debug-stuff.c & kith:  light commenting.
2012-11-03-10.27.33: src/c/heapcleaner/heap-debug-stuff.c:  dump_ramlog:  Renamed logfile from ramlog.log to ram.log because the former is redolent of redundancy.
2012-10-28-21.56.20: src/lib/std/src/io/winix-text-file-for-os-g.pkg: make_logstring:  Stopped adding terminal newline -- leave that to caller.
2012-10-28-20.42.50: src/c/heapcleaner/heap-debug-stuff.c:  dump_syscall_log__guts:  Had syscall_log_prev where syscall_log_next was needed.
2012-10-28-10.11.08: src/c/heapcleaner/heap-debug-stuff.c:  dump_syscall_log__guts: Changed to print in oldest-first order for consistency with related fns and least surprise.
2012-10-20-14.52.53: src/c/heapcleaner/heap-debug-stuff.c:  dump_syscall_log__guts: Changed to print in oldest-first order for consistency with related fns and least surprise.
2012-10-20-14.52.53: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: redirect_one_io_call: Added ramlog/log::note calls to help track down syscall-redirection teething problems.
2012-10-20-14.33.21: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg:  To support debugging, added lib_name,fun_name to args passed by redirect_refcell().
2012-10-20-12.50.07: src/lib/std/src/io/winix-text-file-for-os-g.pkg:  Switched logprint() to a simpler implementation more compatible with debugging syscall redirection and computations in secondary hostthreads.  src/c/main/error-reporting.c: log_if: Added kludge to avoid double-headers on lines logged via new write_line_to_log fn.
2012-10-20-11.51.17: src/c/lib/heap/libmythryl-heap.c: Hooked do_write_line_to_log() up to log_if() by way of implementation.
2012-10-20-11.43.42: src/c/lib/heap/libmythryl-heap.c: Established write_line_to_log patterned on write_line_to_ramlog.
2012-10-20-11.09.14: src/lib/std/src/byte.pkg:  Light cleaning.
2012-10-20-10.48.56: src/lib/std/src/psx/posix-io.pkg: Decrypted c2w_vs -> convert__vector_slice_of_chars__to__vector_slice_of_one_byte_unts.
2012-10-20-10.38.01: src/lib/std/src/psx/posix-io.pkg: Decrypted c2w_a -> convert__rw_vector_of_chars__to__rw_vector_of_one_byte_unts.
2012-10-20-10.27.42: src/lib/std/src/psx/posix-io-unit-test.pkg: Added log::note{} calls for debugging current problem.  src/lib/src/sfprintf.pkg: Changed %b fields to print as TRUE/FALSE instead of true/false.  src/lib/std/src/psx/posix-io.pkg: Decrypted c2w_as -> convert__rw_vector_slice_of_chars__to__rw_vector_slice_of_one_byte_unts.
2012-10-18-16.52.22: src/c/machine-dependent/posix-signal.c: c_signal_handler: Upgraded the periodic-dumps-of-ramlog-and-syscall-log hack to be controlled by MILLISECONDS_BETWEEN_RAMLOG_AND_SYSLOG_DUMPS env var instead of hardwired.
2012-10-18-09.19.47: src/app/makelib/compile/compile-in-dependency-order-g.pkg:  After a week, finally figured out that the mysterious bug (not) in ramlog.c was that my test call to it in compile-in-dependency-order-g.pkg was *after* fun announce_compile() rather than *in* fun announce_compile() as intended. *BLUSH*
2012-10-18-08.18.11: src/c/main/ramlog.c: ramlog_printf: Added line numbers.
2012-10-16-13.50.24: src/c/main/ramlog.c: ramlog_printf: Defensive programming: make sure each line ends with a newline by appending one if necessary.
2012-10-15-18.34.44: src/c/machine-dependent/posix-signal.c:  Added kludge to dump syscall_log and ramlog every five seconds of runtime, to maybe help track down occasional compiler freezes.
2012-10-15-18.06.41: src/c/heapcleaner/heap-debug-stuff.c:  Added dump_ramlog().  (Renamed previous dump_ramlog -> dump_ramlog__guts. :-)
2012-10-15-17.42.44: src/c/main/ramlog.c:  Added   void dump_ramlog (FILE* fd) { for_all_lines_in_ramlog(  write_line_to_file,  (void*) fd  ); }
2012-10-14-10.32.06: src/lib/std/src/io/winix-text-file-for-os.api:  Added  note_in_ramlog:	(Void -> String) -> Void;
2012-10-14-10.10.29: src/lib/std/src/nj/heap-debug.api:  Added write_line_to_ramlog: String -> Void.
2012-10-14-09.56.00: Globally changed  package pth = hostthread  to  package hth = hostthread  as follow-up to recent pthread -> hostthread namechange.
2012-10-14-09.39.13: src/c/lib/heap/libmythryl-heap.c:  Implemented do_write_line_to_ramlog().
2012-10-14-09.24.15: src/c/lib/heap/libmythryl-heap.c:  Established do_write_line_to_ramlog, exported to Mythryl as write_line_to_ramlog.
2012-10-13-01.16.48: src/c/config/generate-task-and-hostthread-struct-field-offsets-h.c, src/c/h/runtime-base.h:  For accuracy (changed my mind midstream) renamed  heap_allocation_limit__ptr_for__c_signal_handler -> mythryl_stackframe__ptr_for__c_signal_handler.
2012-10-13-00.54.24: src/c/machine-dependent/prim.intel32.asm:  Removed last traces of LIB7_intel32Frame global.  That should be the end of that particular source of segfaults.
2012-10-13-00.36.23: src/c/h/system-dependent-signal-get-set-etc.h: For clarity renamed HEAP_ALLOCATION_LIMIT_intel32OFFSET -> HEAP_ALLOCATION_LIMIT__WORD_OFFSET_IN_MYTHRYL_STACKFRAME.  Dropped   extern Punt* LIB7_intel32Frame;   .
2012-10-13-00.21.25: src/c/h/system-dependent-signal-get-set-etc.h: ZERO_HEAP_ALLOCATION_LIMIT_FROM_C_SIGNAL_HANDLER: Replace  LIB7_intel32Frame  everywhere by  task->heap_allocation_limit__ptr_for__c_signal_handler.
2012-10-13-00.06.18: src/c/machine-dependent/prim.intel32.asm: Initialize task->heap_allocation_limit__ptr_for__c_signal_handler_byte_offset_in_task_struct at same time and with same value as LIB7_intel32Frame.
2012-10-12-23.29.17: src/c/h/runtime-base.h, src/c/config/generate-task-and-hostthread-struct-field-offsets-h.c:  Added task->heap_allocation_limit__ptr_for__c_signal_handler field.
2012-10-12-22.59.04: src/c/machine-dependent/prim.intel32.asm:  Much commenting.
2012-10-12-20.48.52: src/c/h/system-dependent-signal-get-set-etc.h:  For clarity renamed  SIG_Zero_Heap_Allocation_Limit to ZERO_HEAP_ALLOCATION_LIMIT_FROM_C_SIGNAL_HANDLER.
2012-10-10-23.46.09: src/c/machine-dependent/prim.intel32.masm: Added a comment that this file has not been used in years and probably should be deleted. (The active-use file is src/c/machine-dependent/prim.intel32.asm.)
2012-10-10-23.46.09: src/c/machine-dependent/prim.intel32.asm: Moved request_w from static global ram to stack slot, to give each hostthread its own copy, making that aspect of the code properly reentrant.
2012-10-10-13.38.38: src/c/heapcleaner/heap-debug-stuff.c: Changed contents of tripwire buffers from 0 to 0xDEADBEEF -- zero is too common of a value, might miss a buffer overrun due to some big vector being zeroed out.
2012-10-09-23.38.05: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Make redirection of read(), readbuf(), write_rw_slice(), write_ro_slice() conditional upon environment vars. Looks like this one is not going to be easy...
2012-10-09-22.27.18: src/lib/std/src/hostthread/thread-scheduler-inter-hostthreads-unit-test.pkg: After previous fix, divide-by-zero and int-overflow work correctly in secondary hostthread tests.
2012-10-09-22.10.41: src/c/machine-dependent/posix-arithmetic-trap-handlers.c:  Upgraded #define SELF_HOSTTHREAD from (bogus)   (hostthread_table__global[ 0 ])   to   (pth__get_hostthread()).
2012-10-09-21.00.23: src/lib/std/src/hostthread/thread-scheduler-inter-hostthreads-unit-test.pkg: Added tests for divide-by-zero and int-overflow trapping in secondary hostthreads.
2012-10-09-13.36.00: src/A.SEGFAULT-DEBUGGING.OVERVIEW: Documented tripwire buffers and debug_tripwires() call.
2012-10-08-08.54.22: src/A.SEGFAULT-DEBUGGING.OVERVIEW: Documented tripwire buffers and debug_tripwires() call.
2012-10-08-08.54.22: Created and populated src/A.SEGFAULT-DEBUGGING.OVERVIEW to document new ramlog and syscall_log functionality, as well as older log_if functionality.
2012-10-08-08.54.22: Did another pass adding EXIT_MYTHRYL_CALLABLE_C_FN()s to match pre-existing ENTER_MYTHRYL_CALLABLE_C_FN()s.
2012-10-07-21.09.27: src/c/heapcleaner/make-strings-and-vectors-etc.c:  make_biwordslots_vector_sized_in_bytes__may_heapclean:  Fixed nasty little segfault bug in which final result was assigned to the wrong 'result' var. (Introduced during recent pass adding EXIT_MYTHRYL_CALLABLE_C_FN() calls.)
2012-10-07-10.42.26: Globally renamed appthread -> microthread since that seems to be emerging as the mainstream term for them.
2012-10-07-10.20.05: src/c/heapcleaner/heap-debug-stuff.c: dump_syscall_log__guts: output format tweaking.
2012-10-07-09.59.57: src/c/h/runtime-base.h:  Added syscall_log_and_ramlog_enabled, made operation of note_fn_entry_in_syscall_log(), note_fn_exit_in_syscall_log() and ramlog_printf() contingent upon it.
2012-10-07-08.56.20: src/lib/src/lib/thread-kit/src/lib/logger.api:  make_logtree_leaf:  Added  default: Bool   arg.
2012-10-06-23.34.40: src/c/h/runtime-base.h: Tweaked syslog stuff to count + display all syscalls sequentially, to make it easier to watchpoint call #187 or whatever.
2012-10-06-23.17.36: src/c/main/ramlog.c: Coded up first-draft implementation. Compiled first try, for no obvious reason.
2012-10-06-17.50.35: Established src/c/main/ramlog.c.
2012-10-06-16.28.13: Renamed ramlog -> syscall_log because it only tracks syscalls (well, Mythryl -> C calls, mostly the same thing) and I (may) want to implement a more general ramlog.
2012-10-06-16.11.21: src/c/lib/posix-file-system/opendir.c: Researched + wrote comment explaining why   return PTR_CAST( Val, dir);   is ok.
2012-10-06-13.01.21: Globally changed  ENTER_MYTHRYL_CALLABLE_C_FN("foo") -> ENTER_MYTHRYL_CALLABLE_C_FN(__func__)  and    EXIT_MYTHRYL_CALLABLE_C_FN("foo") -> EXIT_MYTHRYL_CALLABLE_C_FN(__func__). (I had forgotten __func__ existed.)
2012-10-02-08.43.22: src/c/lib/raise-error.h:  Changed RETURN* to need explicit  return  op.  (This is more flexible -- makes them data constructors instead of control constructs.)
2012-10-01-23.01.15: src/c/o/Makefile.in:  Added -Werror to CFLAGS.  src/c/lib/posix-os/select.c: Changed roots1 to &roots1 in call_heapcleaner_with_extra_roots call.  This might have been our SEGV bug.
2012-09-30-13.57.41: src/c/heapcleaner/heap-debug-stuff.c: Fns intended to be called from gdb:  debug_help(), debug_tripwires(), debug_ramlog().
2012-09-30-13.39.23: src/c/machine-dependent/posix-arithmetic-trap-handlers.c: Tweaked so that it handles SEGV-in-C-layer by looping waiting for gdb to attach rather than dumping and exiting.
2012-09-30-09.21.41: src/lib/std/src/psx/posix-io.api:  For clarity, renamed read_into_buffer arg from   buffer  to  read_buffer.   src/lib/std/src/psx/posix-io-unit-test.pkg: Implemented exercise__read_into_buffer__and__write_rw_vector().  src/lib/std/src/typelocked-rw-vector-slice.api: Added (_[]) and (_[]:=).
2012-09-30-08.29.34: src/lib/std/src/psx/posix-io-unit-test.pkg:  Establish exercise__read_into_buffer__and__write_rw_vector().
2012-09-30-08.18.23: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg:  Also redirect psx::setfd, psx::getfd syscalls.
2012-09-29-22.38.20: src/c/lib/posix-io/fcntl_gfd.c:  Restored retry-on-EINTR logic.  src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Redirect fcntl_gfl + fcntl_sfl syscalls (psx::setfl, psx::getfl).  src/lib/std/src/psx/posix-io-unit-test.pkg: Verify redirection of getfl()/setfl(). In short, first successful end-to-end redirection of microthread I/O -- stopping for the night and breaking out the bubbly. :-)
2012-09-29-20.25.10: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.api:  Added system_calls_are_being_redirected_via_support_hostthreads() and count_of_redirected_system_calls_done(), as support for src/lib/std/src/psx/posix-io-unit-test.pkg
2012-09-29-12.16.45: src/lib/std/src/psx/posix-io-unit-test.pkg: Light cleaning.
2012-09-27-08.56.36: src/lib/std/src/psx/posix-io-unit-test.pkg: Light cleaning.
2012-09-27-08.56.36: Renamed posix_1003_1b everywhere to posixlib because I can never remember the confounded number.  'posixlib' is still easier to grep for than 'posix', which has way too many false positives.
2012-09-26-21.50.46: src/c/lib/posix-io/fcntl_gfl.c:  Had F_GETFD where F_GETFL was needed.  Maybe even theory people need to do regression testing! :-)
2012-09-26-19.45.56: src/lib/std/src/typelocked-vector.api: Added (_[]) and (_[]:=).
2012-09-25-19.11.20: src/lib/std/src/posix-1003.1b/: Renamed posix-io-unit-text.pkg -> posix-io-unit-test.pkg *blush*
2012-09-25-19.02.23: Established src/lib/std/src/posix-1003.1b/posix-io-unit-text.pkg.
2012-09-24-10.58.48: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Corrected redirect_one_io_call() :-).
2012-09-24-10.44.26: src/lib/src/lib/thread-kit/src/glue/redirect-slow-syscalls-via-support-hostthreads.pkg: Added redirect_one_io_call().
2012-09-23-13.33.37: src/lib/std/src/hostthread/thread-scheduler-inter-hostthreads-unit-test.pkg: verify_do_via_cpu_bound_hostthread () works now! :-)
2012-09-23-13.16.49: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: start_supporting_hostthreads_if_not_running: Was starting up 0 instead of hostthreads_to_start cpu and io hostthreads, oops.
2012-09-22-13.11.58: src/lib/std/src/hostthread/thread-scheduler-inter-hostthreads-unit-test.pkg:  First three basic tests work.
2012-09-22-11.51.16: src/lib/src/lib/thread-kit/src/core-thread-kit/timeout-mailop.api:  For convenience, changed  sleep_for  from  time::Time -> Void  to  Float -> Void  making the typical call just   sleep_for 0.1  instead of  sleep_for (time::from_milliseconds 100)  which is clumsy.  Similarly changed  timeout_in'  from  time::Time -> Mailop(Void)  to  Float -> Mailop(Void).
2012-09-22-10.02.36: Established   src/lib/std/src/hostthread/thread-scheduler-inter-hostthreads-unit-test.pkg   to exercise new thread-scheduler.pkg support for inter-hostthread communication.
2012-09-21-08.37.08: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Took another swing at making thread-scheduler responsive to inter-hostthread requests.
2012-09-21-08.25.46: src/c/lib/posix-os/: Renamed poll.c -> select.c because BSD select() is more common than SysV poll() in open source circles. (Also, the whole point is to NOT do polling.) Added additional paranoid checking because we got another SEGV immediately after calling it.
2012-09-20-09.11.48: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api:  Add fun run_thunks thunks = apply run_thunk thunks;
2012-09-20-08.57.29: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api:  Added run_thunk_soon and run_thunk, parallel to existing run_thunk_immediately.
2012-09-17-09.10.37: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  Added thread_scheduler_requests_thread.
2012-09-17-08.57.21: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity and debuggability split thread_scheduler_temporary_thread into no_runnable_threads_left_thread and run_thunk_immediately_thread.
2012-09-16-22.16.48: src/c/lib/posix-os/poll.c: Added need_to_call_heapcleaner() call to guard against heap overflow;  this probably fixes the sporadic SEGV I have been seeing since 2011-12.  Also added result_vector_buf to reduce number of malloc()/free() calls needed.
2012-09-16-12.37.00: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed threadkit-startup-and-shutdown-hooks.api -> threadkit-run-at.api (etc) for brevity and consistency with  src/lib/std/src/nj/run-at.api.
2012-09-16-12.05.26: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed threadkit-startup-and-shutdown-hooks.api -> threadkit-run-at.api (etc) for brevity and consistency with  src/lib/std/src/nj/run-at.api.
2012-09-16-12.05.26: Commented out hordes of log::note() calls in threadkit code;  System now compiles and checks normally.  Apparently we had reached the point where the diagnostics were the problem. :-)
2012-09-15-15.34.58: Commented out hordes of log::note() calls in threadkit code;  System now compiles and checks normally.  Apparently we had reached the point where the diagnostics were the problem. :-)
2012-09-15-15.34.58: src/lib/x-kit/xclient/pkg/wire/display.api:  For consistency and clarity renamed close_display -> close_xdisplay.  src/lib/x-kit/xclient/pkg/stuff/xclient-unit-test.pkg: run:  Lacked   dy::close_xdisplay  xdisplay  call, leaving window open indefinitely.
2012-09-15-12.37.22: src/lib/x-kit/tut/colormixer/colormixer-app.pkg:  drag_slider:  Added 50ms wait per X event synthesized to prevent lost X events. (I am assuming the X server was unable to keep up and thus dropping queue events.) colormixer-app selfcheck now runs to completion.
2012-09-15-09.46.34: Changed  select -> do_one_mailop  in various comments and docs -- followup on recent renam of that fn.
2012-09-13-21.45.25: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Fixed bug I introduced into switch_to_thread__usend(), plus heavily commented it.  I think I actually understand it now. :-) This was a (the?) source of duplicate run-queue entries.
2012-09-11-07.49.53: Set version to 6.2.187.
2012-09-09-20.23.47: src/lib/x-kit/tut/xkit-tut-unit-test.pkg: All xkit tutorial apps now converted to new task-based threadkit mechanism and compiling again: triangle_app, plaid_app, nbody_app, calculator_app, colormixer_app, bouncing_heads_app, arithmetic_game_app, badbricks_game_app, show_graph_app. (Running will have to wait for another night. :-)
2012-09-09-09.29.17: src/lib/x-kit/tut/colormixer/colormixer-app.pkg:  For brevity, readability and consistency, pervasively renamed *color-mixer* files to *colormixer* and *color_mixer* identifiers to *colormixer*.
2012-09-08-20.43.23: src/lib/std/src/io/winix-text-file-for-os-g.pkg:  Make fatal() actually be fatal. :-)  src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Add check for duplicate run queue entries, since it seems to keep happening.
2012-09-08-19.08.09: src/lib/x-kit/tut/nbody/nbody-app.pkg:  Run all app-specific threads under nbody app task.
2012-09-08-18.49.19: src/lib/x-kit/tut/plaid/plaid-app.pkg: Run all app-specific threads under "plaid app" task.   Various: standardize log::note messages to start with thread scheduler state string.
2012-09-08-13.40.37: src/lib/x-kit/tut/triangle/triangle-app.pkg:  Now seems reasonably well converted to new threadkit task functionality.
2012-09-08-10.32.42: src/lib/x-kit/xclient/pkg/stuff/xlogger.pkg:  Added make_thread' to existing make_thread, mostly to allow specifying a task.
2012-09-03-20.24.02: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: Renamed   select -> do_one_mailop   for clarity, for greppability, to avoid confusion with the C select() fn, and because it is now or never.
2012-09-03-19.09.49: Finally makes it through   make check   again without crashing! :-)
2012-09-03-17.47.16: src/c/lib/posix-io/fcntl_sfd.c, src/c/lib/posix-io/dup2.c:  Restored retry-on-EINTR loops because they triggered.
2012-09-03-17.23.26: src/lib/src/lib/thread-kit/src/core-thread-kit/timeout-mailop.pkg:  timeout_at'()/set_up_mailopready_watch(), timeout_in'/set_up_mailopready_watch(): Eliminated erroneous terminal  ts::exit_uninterruptible_scope ();   calls.
2012-09-03-11.45.32: Finally got logging stuff working decently again, so back to mail-system debugging:  src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg:  nonblocking_peek: Added missing   ts::exit_uninterruptible_scope ();   call on NULL path through fn.
2012-09-03-00.06.36: Added sev= (severity) field to logfile format.
2012-09-02-10.38.24: Also, switched fron  20 monitor to 30 monitor. :-)
2012-09-02-10.38.24: Much log-support work, including adding src/lib/std/src/log.pkg and tweaking src/lib/src/lib/thread-kit/src/lib/logger.pkg, src/lib/std/src/io/winix-text-file-for-os-g.pkg and src/c/main/error-reporting.c to add task_id= field to each log line.
2012-08-19-10.44.08: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api:  Added get_exception_that_killed_thread, get_exception_that_killed_task to compensate for preceding change.
2012-08-19-10.01.39: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.pkg: Split itt::state::State into separate internal (itt::state::State) and external (state::State) versions, so that the latter can be an equality type for the convenience of client code.
2012-08-19-09.53.05: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api:  Renamed end_task_as_failure back to kill_task in yet another flipflop.
2012-08-19-09.32.16: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api:  Renamed end_thread_as_failure back to kill_thread in yet another flipflop.
2012-08-19-09.05.15: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api: Flip-flopping for the umpteenth time on this front, collapsed thread_succeeded()/thread_failed() back into thread_exit { success: Bool }.
2012-08-19-07.48.12: src/lib/src/lib/thread-kit/src/core-thread-kit/task-junk.pkg: First-cut implementations of get_or_make_current_cleanup_task, note_thread_cleanup_action, note_task_cleanup_action.
2012-08-18-21.05.29: src/lib/std/standard.lib: To reduce clutter, ceased separately exporting the component apis and packages of Threadkit and threadkit.
2012-08-18-20.25.18: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Replaced the old trivalued thread_scheduler_state (NORMAL/UNINTERRUPTIBLE/UNINTERRUPTIBLE_WITH_PENDING_THREADSWITCH) with a Dijkstra P/V-style uninterruptable_mode_counter plus a need_to_switch_threads_when_exiting_uninterruptable_mode boolean.
2012-08-18-20.25.18: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: For better abstraction level renamed disable_thread_switching -> enter_uninterruptible_mode, reenable_thread_switching -> exit_uninterruptible_mode.
2012-08-17-21.13.31: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: APPTASK: Added  cleanup_task: Null_Or(Apptask)  field.
2012-08-17-19.54.40: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api: Split thread_exit into thread_succeeded() + thread_failed() in support of new task functionality.
2012-08-16-22.13.06: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api: Moved ALIVE|... type into subpackage state.
2012-08-16-09.11.18: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg (et al): Complete first-cut implementation of task/thread semantics. src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api: Documented said semantics.
2012-08-16-08.47.44: src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api:  Added get_task_alive_threads_count.
2012-08-16-08.38.26: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  APPTASK: Added threads_alive counter.
2012-08-16-07.45.37: src/lib/src/lib/thread-kit/src/core-thread-kit/: For clarity, brevity and symmetry tenamed thread-handle.api -> appthread.api, thread-handle.pkg -> appthread.pkg.  src/lib/src/lib/thread-kit/src/core-thread-kit/appthread.api: make_task: Added list of (threadname,threadbody) threads to create for task.
2012-08-14-19.16.33: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  Moved dummy_thread, error_thread and error_fate here from thread-scheduler.pkg to make them available early and more widely; added task field to THREAD_HANDLE;  initialized current_thread_register earlier.
2012-08-14-18.58.25: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-handle.api: Added get_task_id, get_task_name, get_task_state, same_task, compare_task.
2012-08-13-20.15.55: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-handle.api: Added Task_Handle, make_task.
2012-08-12-18.23.19: src/lib/x-kit/widget/lib:  For clarity and consistency, renamed run-xkit.api -> run-in-x-window.api,  run-xkit.pkg -> run-in-x-window.pkg.
2012-08-12-18.13.31: src/lib/x-kit/widget/lib/run-xkit.api: For clarity renamed run_xkit -> run_in_x_window.
2012-08-12-17.39.39: src/lib/x-kit/widget/lib/run-xkit.api: Converted  run_xkit' to use the List(Run_Xkit_Options) arg form which I want to standardize on.
2012-08-12-14.36.18: src/lib/src/lib/thread-kit/src/core-thread-kit/: For increased clarity, renamed thread-data.api -> thread-handle.api, thread-data.pkg -> thread-handle.pkg.
2012-08-11-22.04.34: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: dequeue_thread_preferably_an_io_bound_one, dequeue_cpu_bound_thread: Tweaked to drop non-ALIVE threads on the floor, ensuring that reenable_thread_switching_and_dispatch_next_thread will never run a non-ALIVE thread (thus implementing non/ALIVE semantics).
2012-08-11-21.01.30: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-data.api:  Added kill_thread(), an indispensable function.
2012-08-11-21.01.30: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-data.api: Added get_thread_id, get_thread_state, renamed name_of_thread -> get_thread_name, id_string_of_thread -> get_thread_id_as_string.
2012-08-11-20.21.59: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Thread_Data:  Added field state: Ref( Thread_State ).
2012-08-11-13.18.48: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-data.api: Future-proofed make_thread' by giving it a List(Make_Thread_Args) argument.
2012-08-11-13.06.40: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-data.api: For clarity and consistency renamed thread_to_name -> name_of_thread and thread_to_string -> id_string_of_thread.
2012-08-11-12.54.44: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-data.api: For clarity and consistency renamed thread_done -> thread_exit.
2012-08-11-11.45.59: For clarity and clearer separation between our C layer and <pthread.h> code, renamed pthread -> hostthread everywhere except when dealing with actual <pthread.h> api stuff.
2012-08-11-10.10.03: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed thread.api -> thread-data.api & thread.pkg -> thread-data.pkg, partly for precision (Thread_Data instances only capture part of a threads state) mostly for greppability (grepping for thread yields forests of false positives).  Also commented out raging Mongol hordes of prints and printfs throughout the codebase.
2012-08-06-23.14.58: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-startup-and-shutdown-hooks.pkg: Same problem and fix in   note_imp()  and  note_mailqueue()  as  previous in   note_mailslot().
2012-08-06-23.07.39: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-startup-and-shutdown-hooks.pkg: fun note_mailslot had   forget_mailslot name   where it needed   forget mailslots name   resulting in nested  exclusively  constructs, blocking the only extant thread from running.
2012-08-03-08.23.08: First compile at 326 Pelton. :-)
2012-08-01-21.05.55: src/lib/std/src/nj/run-at.api: Added STARTUP_PHASE_1_RESET_STATE_VARIABLES, renumbering remaining cases appropriately.  src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler-is-running.pkg: Added started_thread_scheduler_shutdown, at::STARTUP_PHASE_1_RESET_STATE_VARIABLES fn resetting that and thread_scheduler_is_running_as_pid.
2012-07-29-13.13.31: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: Wrote code for fulltime-multithreaded operation. Compiles but system crashes when running it.
2012-07-29-12.59.19: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: start_up_thread_scheduler, src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg: wrap_for_export: Try to be robust against double-shutdowns due to variant shutdown/exit sequences.
2012-07-29-12.05.30: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: For clarity and greppability, renamed thread_scheduler() -> run_under_thread_scheduler().  Also, tweaked start_up_thread_scheduler() and start_up_thread_scheduler' to work usably whether or not the thread scheduler is already running, to ease transition to always-on multi-threaded operation.
2012-07-26-07.56.50: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: For clarity renamed  run_thread(thread,fate) -> enqueue_old_thread_plus_old_fate_then_install_new_thread { new_thread, old_fate }.
2012-07-24-08.05.31: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api:  Stopped exporting Thread_Scheduler_State and thread_scheduler_state because they are internal stuff nowhere referenced externally.
2012-07-23-21.42.43: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: For clarity renamed various foo_hook -> foo_fate, since they were.
2012-07-23-19.44.29: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: stop_supporting_pthreads_if_running: Re-activate   cpu::change_number_of_server_pthreads_to  per_who  0;  and  io::change_number_of_server_pthreads_to  per_who  0;  calls.
2012-07-23-19.22.52: src/lib/std/src/io/winix-text-file-for-os-g.pkg: at::scheduled at::STARTUP_PHASE_1_REOPEN_MYTHRYL_LOG thunk to reset server_name, log_fd, log_to, logger_cleanup globals.
2012-07-23-18.59.03: src/lib/std/src/nj/run-at.api:  Establish STARTUP_PHASE_1_REOPEN_MYTHRYL_LOG, STARTUP_PHASE_2_REOPEN_USER_LOGS.
2012-07-22-12.06.21: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: reenable_thread_switching_and_dispatch_next_thread:  Added a service_inter_pthread_requests (get_any_new_inter_pthread_requests()) at top.
2012-07-22-12.06.21: src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg:  no_runnable_threads_left__fate:  Tweaked to call  ts::block_until_inter_pthread_request_queue_is_nonempty if iow::is_doing_useful_work () or cbp::is_doing_useful_work () or ibp::is_doing_useful_work ().
2012-07-22-11.14.24: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api   Added block_until_inter_pthread_request_queue_is_nonempty: Void -> Void   for   no_runnable_threads_left__fate   in   src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg.
2012-07-22-11.14.24: src/lib/std/src/pthread/io-bound-task-pthreads.api, src/lib/std/src/pthread/cpu-bound-task-pthreads.api:  Added   is_doing_useful_work:	Void -> Bool   calls parallel to that in   src/lib/std/src/pthread/io-wait-pthread.api.
2012-07-22-09.28.38: src/lib/std/src/pthread/io-wait-pthread.api:  Added   is_doing_useful_work: Void -> Bool   as support for no_runnable_threads_left__fate   in   src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg.
2012-07-21-21.16.39: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler-is-running.pkg: Rewrote to track pid for improved robustness vs heap save/load cycles.
2012-07-15-10.38.32: To save flipping back and forth when code reading, merged the tiny  src/lib/std/src/nj/wrap-export.pkg  into it's only client,  src/lib/std/src/nj/save-heap-to-disk.pkg.
2012-07-15-09.45.07: src/lib/std/src/nj/run-at.api:  Establish STARTUP_PHASE_7_START_NEW_DLOPEN_ERA for src/lib/c-glue-lib/ram/linkage-dlopen.pkg, renumbering others appropriately.  Changed src/lib/c-glue-lib/ram/linkage-dlopen.pkg to use it.
2012-07-15-09.34.40: src/lib/src/lib/thread-kit/src/glue/: Rename redirect-syscalls-via-thread-scheduler.api -> redirect-slow-syscalls-via-support-pthreads.api,  redirect-syscalls-via-thread-scheduler.pkg -> redirect-slow-syscalls-via-support-pthreads.pkg.
2012-07-15-09.29.33: src/lib/std/src/nj/run-at.api:  Established STARTUP_PHASE_9_START_THREAD_SCHEDULER and SHUTDOWN_PHASE_2_STOP_THREAD_SCHEDULER, renumbering other phases appropriately.
2012-07-15-08.59.54: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg: Scheduled redirect_slow_syscalls_via_support_pthreads to run at STARTUP_PHASE_8_REDIRECT_SYSCALLS and unredirect_slow_syscalls to run at SHUTDOWN_PHASE_2_UNREDIRECT_SYSCALLS.
2012-07-14-16.56.20: src/lib/std/src/nj/run-at.api: Established STARTUP_PHASE_8_OF_HEAP_MADE_BY_FORK_TO_DISK parallel to STARTUP_PHASE_8_OF_HEAP_MADE_BY_SPAWN_TO_DISK.
2012-07-14-16.35.13: src/lib/std/src/nj/run-at.api:  For clarity and consistency renamed APP_STARTUP -> STARTUP_PHASE_8_OF_HEAP_MADE_BY_SPAWN_TO_DISK.
2012-07-14-15.55.45: src/lib/std/src/nj/save-heap-to-disk.pkg: spawn_to_disk:  run at::SHUTDOWN_PHASE_3_CLEAR_POSIX_INTERPROCESS_SIGNAL_HANDLER_TABLE hooks.   src/lib/std/src/nj/runtime-signals.pkg: Run clear_posix_interprocess_signal_handler_table at at::SHUTDOWN_PHASE_3_CLEAR_POSIX_INTERPROCESS_SIGNAL_HANDLER_TABLE instead of at::SPAWN_TO_DISK.
2012-07-14-12.43.49: src/lib/std/src/nj/run-at.pkg: Establish SHUTDOWN_PHASE_3_CLEAR_POSIX_INTERPROCESS_SIGNAL_HANDLER_TABLE, renumbering others appropriately.
2012-07-14-12.30.11: src/lib/compiler/front/basics/stats/compile-statistics.pkg: Switched over from SPAWN_TO_DISK to new SHUTDOWN_PHASE_2_ZERO_COMPILE_STATISTICS.
2012-07-14-12.12.43: src/lib/std/src/nj/run-at.api:  Established SHUTDOWN_PHASE_2_ZERO_COMPILE_STATISTICS, renamed SHUTDOWN_PHASE_1_RUN_USER_AT_EXIT_FNS -> SHUTDOWN_PHASE_1_USER_HOOKS for better parallelism with STARTUP_PHASE_7_USER_HOOKS.
2012-07-14-11.56.04: src/lib/std/src/posix/winix-process.pkg:  exit_x:  Moved at::SHUTDOWN_PHASE_3_STOP_SUPPORT_PTHREADS processing to before at::SHUTDOWN_PHASE_4_CLOSE_OPEN_FILES processing.
2012-07-14-11.43.37: src/lib/std/src/winix/: On second thought, eliminated  at-exit.pkg  entirely -- better to just use  run-at.pkg.
2012-07-14-11.26.57: src/lib/std/src/winix/at-exit.pkg:  Factor at_exit_function run at both SPAWN_TO_DISK and SHUTDOWN_PHASE_1_RUN_USER_AT_EXIT_FNS into two separate fns, one for each time.
2012-07-14-11.09.18: src/lib/std/src/nj/save-heap-to-disk.pkg: spawn_to_disk:  Add call to at::SHUTDOWN_PHASE_1 hooks.  src/lib/std/src/nj/run-at.api: Rename SHUTDOWN_PHASE_1 -> SHUTDOWN_PHASE_1_RUN_USER_AT_EXIT_FNS.
2012-07-14-10.42.40: src/lib/std/src/io/io-startup-and-shutdown.pkg: Switched .flush calls from at::FORK_TO_DISK to new at::SHUTDOWN_PHASE_4_FLUSH_OPEN_FILES.
2012-07-14-10.11.44: src/lib/std/src/nj/save-heap-to-disk.pkg:  fork_to_disk:  Added call to at::SHUTDOWN_PHASE_4_FLUSH_OPEN_FILES.
2012-07-14-10.03.44: src/lib/std/src/io/io-startup-and-shutdown.pkg: Dropped at::SPAWN_TO_DISK from .close streams case -- replaced by at::SHUTDOWN_PHASE_4_CLOSE_OPEN_FILES.
2012-07-14-09.30.50: src/lib/std/src/nj/save-heap-to-disk.pkg:  Add call to SHUTDOWN_PHASE_2_CLOSE_OPEN_FILES after SHUTDOWN_PHASE_3_STOP_SUPPORT_PTHREADS.  src/lib/std/src/nj/run-at.api: Renamed SHUTDOWN_PHASE_2* -> SHUTDOWN_PHASE_4*.
2012-07-14-09.12.23: src/lib/std/src/io/io-startup-and-shutdown.pkg:  Migrated file closing action from SHUTDOWN_PHASE_1 -> SHUTDOWN_PHASE_2_CLOSE_OPEN_FILES.
2012-07-14-08.24.29: src/lib/std/src/nj/run-at.api:  Established SHUTDOWN_PHASE_2_CLOSE_OPEN_FILES and its FORK_TO_DISK alternate SHUTDOWN_PHASE_2_FLUSH_OPEN_FILES.
2012-07-14-08.01.03: src/lib/std/src/nj/run-at.pkg:  Eliminated  all  variable, which is now unused -- and a very bad idea.
2012-07-11-22.42.40: src/lib/std/src/nj/run-at.api: Renamed SHUTDOWN_PHASE_2_STOP_SUPPORT_PTHREADS -> SHUTDOWN_PHASE_3_STOP_SUPPORT_PTHREADS.
2012-07-11-22.31.36: src/lib/std/src/nj/run-at.api: Renamed SHUTDOWN -> SHUTDOWN_PHASE_1, POST_SHUTDOWN -> SHUTDOWN_PHASE_2_STOP_SUPPORT_PTHREADS.
2012-07-11-22.02.05: src/lib/std/src/nj/run-at.api: Dropped now-unused COMPILER_STARTUP2 case.
2012-07-11-20.49.04: src/lib/compiler/front/basics/stats/compile-statistics.pkg:  Migrated handler from COMPILER_STARTUP2 -> STARTUP_PHASE_5_RESET_COMPILER_STATISTICS.
2012-07-11-07.52.07: src/lib/std/src/nj/runtime-signals.pkg:  Migrated handler from COMPILER_STARTUP2 -> STARTUP_PHASE_4_RESET_POSIX_INTERPROCESS_SIGNAL_HANDLER_TABLE.
2012-07-11-07.22.28: src/lib/std/src/nj/run-at.api:  Eliminated COMPILER_STARTUP case (obsoleted by COMPILER_STARTUP2).
2012-07-11-07.05.17: src/lib/std/src/nj/run-at.api:  Established hooks STARTUP_PHASE_4_RESET_POSIX_INTERPROCESS_SIGNAL_HANDLER_TABLE, STARTUP_PHASE_5_RESET_COMPILER_STATISTICS, STARTUP_PHASE_6_RESET_RUNTIME_TIMERS, STARTUP_PHASE_7_USER_HOOKS.
2012-07-10-22.28.29: src/lib/std/src/nj/run-at.api:  Renamed  PRE_STARTUP -> STARTUP_PHASE_3_START_SUPPORT_PTHREADS.
2012-07-10-22.08.37: src/lib/std/src/io/io-startup-and-shutdown.api: For clarity renamed  add_cleaner -> note_stream_startup_and_shutdown_actions,  rebind_cleaner -> change_stream_startup_and_shutdown_actions, remove_cleaner -> drop_stream_startup_and_shutdown_actions.
2012-07-10-21.51.46: src/lib/std/src/io/io-startup-and-shutdown.pkg:  Internal cleaning.
2012-07-10-21.32.40: src/lib/std/src/io/io-startup-and-shutdown.pkg: Moved at::SPAWN_TO_DISK,SHUTDOWN out of run(), making it a stand-alone scheduled thunk, then eliminated run().
2012-07-09-22.46.28: src/lib/std/src/io/io-startup-and-shutdown.pkg: Moved at::FORK_TO_DISK out of run(), making it a stand-alone scheduled thunk.
2012-07-09-22.38.31: src/lib/std/src/io/io-startup-and-shutdown.api:  Eliminated now-unused std_strm_hook.
2012-07-09-22.22.31: src/lib/std/src/io/winix-text-file-for-os-g.pkg: Changed to recreate stdin/stdout/stderr directly via run-at.pkg instead of indirectly via std_strm_hook.
2012-07-09-22.06.25: src/lib/std/src/io/io-startup-and-shutdown.pkg: Factored code so std_strm_hook() runs at::STARTUP_PHASE_1_MAKE_STDIN_STDOUT_AND_STDERR and run_selected_cleaner_functions .init runs at::STARTUP_PHASE_2_CLOSE_STALE_OUTPUT_STREAMS.
2012-07-09-21.27.23: src/lib/std/src/nj/run-at.api: Renamed STARTUP_PHASE_1_STDIO_ETC -> STARTUP_PHASE_1_MAKE_STDIN_STDOUT_AND_STDERR
2012-07-09-21.06.52: src/lib/std/src/nj/run-at.pkg: Added STARTUP_PHASE_2_CLOSE_STALE_OUTPUT_STREAMS.
2012-07-09-20.52.34: src/lib/std/src/io/io-startup-and-shutdown.pkg: Eliminated os_init_hook(), which was unused clutter.
2012-07-04-11.33.48: Made a pass through *.c making sure that every  printf()  has a  fflush(stdout).  *blush*
2012-07-03-07.18.16: src/lib/std/src/winix/winix-process.api: For clarity and better parallelism with exit()/exit_uncleanly(), renamed exitx() -> exit_x(), terminatex() -> exit_uncleanly_x().
2012-07-02-08.00.46: src/lib/std/src/winix/winix-process.api: For clarity and better parallelism with exit(), renamed terminate() -> exit_uncleanly().
2012-06-30-11.41.29: src/lib/std/src/io/: For clarity and accuracy renamed io-cleanup-at-shutdown.pkg -> io-startup-and-shutdown.pkg.
2012-06-30-10.26.51: src/lib/std/src/nj/run-at.pkg: Added STARTUP_PHASE_1_STDIO_ETC as first step in radically reorging this stuff, making start-up sequencing much more explicit.
2012-06-15-12.01.30: src/lib/std/src/pthread/io-wait-pthread.pkg: Reworked the start_server_pthread_if_not_running() code on the model of the more successful code from src/lib/std/src/pthread/io-bound-task-pthreads.pkg and src/lib/std/src/pthread/cpu-bound-task-pthreads.pkg.
2012-06-14-10.21.31: src/c/o/mythryl.c: copy_from_to:  Added   do { ... } while (bytes_written == -1  &&  errno == EINTR)   wrapper around the core read() call for pro-active good measure.
2012-06-14-10.21.31: src/c/o/mythryl.c: copy_from_to:  Added   do { ... } while (bytes_written == -1  &&  errno == EINTR)   wrapper around the core write() call.
2012-06-13-14.01.26: src/lib/std/src/winix/winix-process.api:  Renamed exit/terminate -> exitx/terminatex, defined new exit/terminate with result type of Void instead of X.  We need the latter in contexts where the compiler cannot resolve X, and the former in case statements where the branch type needs to match the other branch types.  src/lib/core/internal/makelib.api: Similarly renamed exit/die -> exitx/die_x and introduced new exit/die fns with Void result types.
2012-06-12-13.50.44: src/lib/compiler/toplevel/main/compiler-controls.pkg:  Switched compile_in_subprocesses default value from TRUE to FALSE, because fork()-without-exec() is hard-but-workable in a monothreaded context but becomes an insane hairball in a heavily multithreaded context -- in particular I was getting EOF-on-private-pipe problems in src/lib/std/src/pthread/io-wait-pthread.pkg.
2012-06-12-12.55.04: src/lib/std/src/pthread/io-wait-pthread.pkg: Added explicit check-and-exit for unexpected-EOF on private pipe. (Traced teething problem to that; root cause still unknown.)
2012-06-11-21.50.32: src/c/lib/posix-os/poll.c:  Restored retry-on-EINTR logic commented out in 2010.
2012-06-11-00.25.51: src/lib/std/src/pthread/io-wait-pthread.pkg:  Tweaked startup/shutdown for improved locking and robustness;  for clarity and consistency renamed  start -> start_server_pthread_if_not_running.
2012-06-11-00.18.57: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Activated logic to run  start_supporting_pthreads_if_not_running ()  at  PRE_STARTUP  and  stop_supporting_pthreads_if_running ()  at  POST_SHUTDOWN.  These currently call  cpu::change_number_of_server_pthreads_to()  and  io::change_number_of_server_pthreads_to()  but not yet  iow::start().
2012-06-10-21.18.03: src/lib/std/src/pthread/cpu-bound-task-pthreads.pkg, src/lib/std/src/pthread/cpu-bound-task-pthreads.pkg:  Fixed:  do_stop() was decrementing running_servers_count without acquiring mutex or broadcasting condvar. *BLUSH*.
2012-06-09-09.45.22: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Sketch in first-cut version of  stop_supporting_pthreads_if_running().
2012-06-09-09.24.10: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Converted start_supporting_pthreads_if_not_running() to use cpu::change_number_of_server_pthreads_to + io::change_number_of_server_pthreads_to.
2012-06-08-23.06.32: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Added supporting_pthreads_are_running state variable, random tweaking.
2012-06-08-23.01.28: src/lib/std/src/pthread/io-bound-task-pthreads.pkg, src/lib/std/src/pthread/cpu-bound-task-pthreads.pkg:  For clarity renamed  change_number_of_live_pthreads_to -> change_number_of_server_pthreads_to.
2012-06-08-12.25.27: src/lib/std/src/pthread/io-bound-task-pthreads.pkg, src/lib/std/src/pthread/cpu-bound-task-pthreads.pkg:  First-cut implementation of change_number_of_live_pthreads_to.
2012-06-07-11.34.22: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Created seven fns dummy_fork_to_disk_fn() ... dummy_poststartup_fn ().
2012-06-07-11.26.24: src/lib/std/src/nj/save-heap-to-disk.pkg:  Arranged to run POST_SHUTDOWN hooks after SPAWN_TO_DISK and FORK_TO_DISK hooks complete.
2012-06-04-16.53.27: src/lib/std/src/nj/run-at.api:  Added POST_SHUTDOWN to match PRE_STARTUP.
2012-06-04-13.27.03: src/lib/std/src/nj/:  For clarity and greppability renamed  export.api -> save-heap-to-disk.api,  export.pkg -> save-heap-to-disk.pkg.
2012-06-04-13.17.45: src/lib/std/src/nj/run-at.api:  Arranged for PRE_STARTUP hook fns to be run right before COMPILER_STARTUP and APP_STARTUP hook fns.
2012-06-04-13.07.50: src/lib/std/src/nj/run-at.api:  Added PRE_STARTUP.
2012-06-02-13.14.16: src/lib/std/src/nj/run-at.api:  Much commenting. For clarity and greppability renamed STARTUP -> COMPILER_STARTUP.
2012-06-02-12.34.58: For clarity and consistency renamed at.pkg -> run_at.pkg.
2012-04-29-10.00.44: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api:  Add timeslice() entrypoint.
2012-04-29-00.44.25: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for internal_cpu_timer.
2012-04-29-00.36.27: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for winix_io.
2012-04-29-00.32.05: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for winix_file.
2012-04-29-00.23.54: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for dns_host_lookup.
2012-04-29-00.17.04: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for unix_domain_socket.
2012-04-29-00.12.37: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for plain_socket.
2012-04-29-00.06.52: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for net_db.
2012-04-29-00.00.23: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for socket_guts.
2012-04-28-23.53.39: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for net_service_db.
2012-04-28-23.45.58: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for internet_socket.
2012-04-28-23.39.02: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for net_protocol_db.
2012-04-28-23.32.16: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for time_guts.
2012-04-28-23.26.07: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_signal.
2012-04-28-23.21.13: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_tty.
2012-04-28-23.14.18: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_file.
2012-04-28-23.08.17: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_io.
2012-04-28-23.02.19: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_process.
2012-04-28-22.54.28: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_id.
2012-04-28-22.46.17: src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg:  Sketch in redirect calls for posix_etc.
2012-04-28-22.14.02: src/lib/std/standard.lib: Added src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.api, src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg.
2012-04-28-21.56.37: src/lib/std/standard.lib: Added src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.api, src/lib/src/lib/thread-kit/src/glue/redirect-syscalls-via-thread-scheduler.pkg.
2012-04-28-21.56.37: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api:  Added  restore_redirected_syscalls_to_direct_form.
2012-04-28-21.40.04: Undo previous two check-ins. :-)
2012-04-28-21.21.21: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api: Added find_c_function''', which additionally returns a reset_refcell fn.
2012-04-28-21.12.57: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: Add  do().
2012-04-28-19.33.11: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Added DO_THUNK, and do_thunk() to process it.
2012-04-28-12.39.01: Tidying.
2012-04-28-12.31.55: src/lib/std/src/cpu-timer.api:                    Export *__syscall, set__*__ref.
2012-04-28-12.17.06: src/lib/std/src/winix/winix-io.api:               Export *__syscall, set__*__ref.
2012-04-28-12.07.45: src/lib/std/src/winix/winix-file.api:             Export *__syscall, set__*__ref.
2012-04-28-12.00.23: src/lib/std/src/posix-1003.1b/posix-tty.api:      Export *__syscall, set__*__ref.
2012-04-27-22.48.34: src/lib/std/src/posix-1003.1b/posix-tty.api:      Export *__syscall, set__*__ref.
2012-04-27-22.19.03: src/lib/std/src/posix-1003.1b/posix-file.api:     Export *__syscall, set__*__ref.
2012-04-27-21.51.21: src/lib/std/src/posix-1003.1b/posix-io.api:       Export *__syscall, set__*__ref.
2012-04-27-21.31.24: src/lib/std/src/posix-1003.1b/posix-etc.api:      Export *__syscall.
2012-04-27-21.21.57: src/lib/std/src/posix-1003.1b/posix-process.api:  Export *__syscall, set__*__ref.
2012-04-27-20.54.08: src/lib/std/src/posix-1003.1b/posix-id.api:       Export *__syscall, set__*__ref.
2012-04-27-20.20.34: src/lib/std/src/socket/dns-host-lookup.pkg:       Export *__syscall, set__*__ref.
2012-04-27-18.32.09: src/lib/std/src/socket/unix-domain-socket.api:    Export *__syscall, set__*__ref.
2012-04-27-18.24.57: src/lib/std/src/socket/plain-socket.api:          Export *__syscall, set__*__ref.
2012-04-27-18.17.51: src/lib/std/src/socket/net-db.api:                Export *__syscall, set__*__ref.
2012-04-27-18.07.50: src/lib/std/src/socket/socket.api:                Export *__syscall, set__*__ref. (Whew!)
2012-04-27-17.34.43: src/lib/std/src/socket/net-service-db.api:        Export *__syscall, set__*__ref.
2012-04-27-17.27.01: src/lib/std/src/socket/internet-socket.api:       Export *__syscall, set__*__ref.
2012-04-27-17.12.18: src/lib/std/src/socket/net-protocol-db.api:       Export *__syscall, set__*__ref.
2012-04-27-17.00.48: src/lib/std/src/date.api:                         Export *__syscall.
2012-04-27-14.53.04: Previous check-in was unclean, this check-in fixes that.
2012-04-27-14.47.29: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api: Added find_c_function'' which adds the syscall proper to returned value; converted all relevant files to use find_c_function'' instead of find_c_function'.
2012-04-25-21.27.27: Merged in Dave Huseby's tweaks for portability to OpenBSD: Changes in 21 files, in particular creating  src/c/o/nprocs.c and src/c/o/Makefile.intel32-openbsd.
2012-04-25-10.45.59: src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg:    Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-25-10.40.03: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-25-09.54.33: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-debug.pkg: Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-24-23.33.15: src/lib/std/src/internal-cpu-timer.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-24-23.22.49: src/lib/std/src/internal-cpu-timer.pkg:  Light cleaning.
2012-04-24-23.16.26: src/lib/std/src/posix/winix-io.pkg: Switched from hardwired to redirectable syscalls.
2012-04-24-23.01.56: src/lib/std/src/posix/winix-io.pkg:  Light cleaning.
2012-04-24-22.53.27: src/lib/std/src/posix/winix-file.pkg: Switched from hardwired to redirectable syscalls.
2012-04-24-22.18.17: src/lib/std/src/posix/winix-file.pkg: Light cleaning.
2012-04-24-20.49.48: src/lib/std/src/posix-1003.1b/posix-io-64.pkg:  Comment.
2012-04-24-20.35.26: src/lib/std/src/posix-1003.1b/posix-signal.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-24-20.20.45: src/lib/std/src/posix-1003.1b/posix-signal.pkg: Light cleaning.
2012-04-24-20.09.23: src/lib/std/src/posix-1003.1b/posix-tty.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-24-19.16.13: src/lib/std/src/posix-1003.1b/posix-tty.pkg:  Light cleaning.
2012-04-24-17.58.42: src/lib/std/src/posix-1003.1b/posix-file-system-64.pkg:   Comment.
2012-04-24-13.04.25: src/lib/std/src/posix-1003.1b/posix-file.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-24-12.13.20: src/lib/std/src/posix-1003.1b/posix-file.pkg:  Light cleaning.
2012-04-24-11.45.18: src/lib/std/src/posix-1003.1b/posix-io.pkg: Switched from hardwired to redirectable syscalls.
2012-04-24-04.01.44: src/lib/std/src/posix-1003.1b/posix-io.pkg: Replace awful  stipulate package x: {...} = pf; herein include x; end;  hack with less awful  Open_Mode == pf::Open_Mode;  hack.
2012-04-23-23.52.45: src/lib/std/src/posix-1003.1b/posix-error.pkg: Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-23-23.25.58: src/lib/std/src/posix-1003.1b/posix-process.pkg:  Switched sysconf, osval, kill and waitpid from hardwired to redirectable syscalls. Left fork, exec, exece, execp, exit, alarm, sleep and pause as hardwired syscalls.
2012-04-23-19.20.11: src/lib/std/src/posix-1003.1b/posix-process.api:  Light cleaning.
2012-04-23-19.05.57: src/lib/std/src/posix-1003.1b/posix-id.api: Renamed get_elapsed_seconds_since_jan_1_1970 ->  get_elapsed_seconds_since_1970.
2012-04-23-18.54.46: src/lib/std/src/posix-1003.1b/posix-id.api: Renamed time -> get_elapsed_seconds_since_jan_1_1970, uname -> get_kernel_info.
2012-04-23-15.45.08: src/lib/std/src/posix-1003.1b/posix-id.pkg: Switched from hardwired to redirectable syscalls.
2012-04-23-14.38.55: src/lib/std/src/posix-1003.1b/posix-id.pkg: Light cleaning.
2012-04-23-14.20.43: src/lib/std/src/posix-1003.1b/posix-id.pkg: Light cleaning.
2012-04-23-14.11.21: src/lib/std/src/socket/dns-host-lookup.pkg: Switched from hardwired to redirectable syscalls.
2012-04-23-13.51.09: src/lib/std/src/socket/dns-host-lookup.pkg: Light cleaning.
2012-04-23-13.19.22: src/lib/std/src/socket/unix-domain-socket.pkg: Switched from hardwired to redirectable syscalls.
2012-04-23-12.58.17: src/lib/std/src/socket/threadkit-unix-domain-socket.api: Rename  socket -> make_socket (etc).
2012-04-23-12.40.09: src/lib/std/src/socket/threadkit-internet-socket.api: Rename  socket -> make_socket (etc).
2012-04-23-12.34.30: src/lib/std/src/socket/threadkit-plain-socket.api:  Rename  socket -> make_socket (etc).
2012-04-23-11.47.40: src/lib/std/src/socket/unix-domain-socket.api: Rename  socket -> make_socket (etc).
2012-04-23-11.31.34: src/lib/std/src/socket/internet-socket.api:  Light cleaning.
2012-04-23-11.22.58: src/lib/std/src/socket/plain-socket.api:  Light cleaning.
2012-04-23-11.11.18: src/lib/std/src/socket/plain-socket.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-23-10.53.11: src/lib/std/src/socket/net-db.pkg: Switched from hardwired to redirectable syscalls.
2012-04-23-02.58.04: src/lib/std/src/socket/net-db.pkg: Light cleaning.
2012-04-23-02.42.35: src/lib/std/src/socket/socket-guts.pkg: Switched from hardwired to redirectable syscalls.
2012-04-22-22.47.13: src/lib/std/src/socket/net-service-db.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-22-22.28.49: src/lib/std/src/socket/internet-socket.pkg: Switched from hardwired to redirectable syscalls.
2012-04-22-21.43.53: src/lib/std/src/socket/net-protocol-db.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-22-21.18.02: src/lib/std/src/socket/net-protocol-db.pkg:  Light cleaning.
2012-04-21-13.48.46: src/lib/std/src/nj/runtime-profiling-control.pkg: Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-13.42.27: src/lib/std/src/nj/export.pkg:                    Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-13.27.57: src/lib/std/src/nj/runtime-signals-guts.pkg:      Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-13.18.28: src/lib/std/src/nj/platform-properties.pkg:       Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-13.10.25: src/lib/std/src/nj/heapcleaner-control.pkg:       Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-12.56.06: src/lib/src/kludge.pkg:                           Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-12.37.37: src/lib/std/src/nj/heap-debug.pkg:                Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-12.32.12: src/lib/std/src/nj/set-sigalrm-frequency.pkg:     Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-12.16.23: src/lib/std/src/computer-vision.pkg:              Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-11.31.25: src/lib/std/src/ncurses.pkg:                      Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-21-11.16.26: src/lib/std/src/ieee-float.pkg:                   Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-20-22.43.06: src/lib/std/src/unsafe/unsafe-chunk.pkg:          Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-20-22.13.09: src/lib/std/src/unsafe/unsafe.pkg:                Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-20-22.06.00: src/lib/std/src/pthread.pkg:                      Documented the reason(s) for not switching over from  ci::find_c_function  to  ci::find_c_function'.
2012-04-20-19.14.49: src/c/lib/pthread/libmythryl-pthread.c:  do_get_pthread_id:  Changed return type from tagged int to boxed unsigned per report from Dave Huseby that the underlying type is a pointer on OpenBSD (vs long unsigned on Linux).
2012-04-20-15.21.50: src/lib/std/src/date.pkg:  Switched from hardwired to redirectable syscalls.
2012-04-20-13.04.43: src/lib/std/src/time-guts.pkg:  Switched from hardwired to redirectable syscall.
2012-04-19-20.59.54: src/lib/std/commandline.pkg:  Comments.
2012-04-19-20.52.32: src/lib/compiler/execution/code-segments/code-segment.pkg:  Lazily declined to convert three  ci::find_c_function  calls to   ci::find_c_function'   calls.
2012-04-19-20.40.10: src/lib/std/src/posix-1003.1b/posix-etc.api: Added set__getgrgid__ref, set__getgrnam__ref, set__getpwuid__ref, set__getpwnam__ref.
2012-04-19-20.21.08: src/c/o/Makefile.in: set_heapdump_shebang: Added ALL_LIBS to (I hope) resolve  "undefined reference"  link errors reported by Dave Huseby on OpenBSD 5.0.
2012-04-19-15.07.11: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg: Move redirect_refcell() into find_c_function' -- best done once here rather than once per client call.  src/lib/std/src/posix-1003.1b/posix-etc.pkg: Rewrote to respect new api established by previous tweak.
2012-04-19-14.23.47: src/lib/std/src/posix-1003.1b/posix-etc.pkg: Experimental conversion from  find_c_function -> find_c_function'.
2012-04-19-14.04.16: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api: Added find_c_function' as a probe for a way forward.
2012-04-19-13.29.37: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.api: Commented out  Cfunction  and  find_cfun  (unused and dangerous-looking).
2012-04-19-09.48.18: src/lib/std/src/posix-1003.1b/posix-etc.pkg:  More light cleaning.
2012-04-19-09.35.56: src/lib/std/src/posix-1003.1b/posix-etc.pkg:  Light cleaning.
2012-04-18-21.52.08: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg: Refactored, added note_redirected_cfun().
2012-04-18-21.41.32: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg: Added note_cfun() and a call to it in   find_c_function.
2012-04-18-21.14.49: src/lib/std/src/unsafe/mythryl-callable-c-library-interface.pkg: Establish cfuns__local and redirected_cfuns__local, big comment.
2012-04-17-23.00.46: src/c/h/runtime-base.h, src/c/pthread/pthread-on-posix-threads.c: Commented out #includes of <sys/prctl.h> because they seem unused and Dave Huseby reports they are not available on OpenBSD 5.0.
2012-04-15-23.00.13: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity renamed  do_mailop -> block_until_mailop_fires.
2012-04-15-22.32.40: src/lib/std/src/posix/threadkit-winix-data-file-for-posix.pkg:  For clarity and consistency renamed  read_file' -> file_read_now_possible',  write_file' -> file_write_now_possible'.
2012-04-15-22.21.19: src/lib/std/src/socket/threadkit-proto-socket.pkg: For clarity and consistency renamed  read_socket' -> socket_read_now_possible_on',  write_socket' -> socket_write_now_possible_on'.
2012-04-15-22.09.02: src/lib/src/lib/thread-kit/src/core-thread-kit/io-now-possible-mailop.api: For improved clarity, renamed  io_now_possible' -> io_now_possible_on'.
2012-04-15-21.57.27: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed  io-mailop.api -> io-now-possible-mailop.api,   io-mailop.pkg -> io-now-possible-mailop.pkg.
2012-04-15-21.43.41: src/lib/src/lib/thread-kit/src/core-thread-kit/io-mailop.api: For clarity renamed  io_mailop' -> io_now_possible'.
2012-04-15-21.30.10: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg (and kith):  Light cleaning.
2012-04-15-20.54.19: src/lib/std/src/posix/threadkit-winix-data-file-io-driver-for-posix.pkg:  Renamed  read_mailop -> read_file',  write_mailop -> write_file'.
2012-04-15-20.41.19: src/lib/std/src/socket/threadkit-proto-socket.pkg: For clarity and consistency renamed  in_mailop -> read_socket', out_mailop - > write_socket'.
2012-04-15-16.52.20: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity and consistency renamed  make_select_rule -> make_compound_mailop.
2012-04-15-14.45.51: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: Renamed  make_full_maildrop -> make_maildrop because it was confusing me -- make_full_maildrop as opposed to make_partial_maildrop? -- and because full is the more common case than empty, 22 to 16.
2012-04-15-10.54.09: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity renamed  Isready_Mailop -> Base_Mailop,  ISREADY_MAILOPS -> BASE_MAILOPS.  Renamed Start_Watching_For_Mailop_Ready__Fn -> Set_Up_Mailopready_Watch__Fn.  src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Renamed start_mailop_watches -> set_up_mailopready_watches.
2012-04-15-10.24.40: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg
2012-04-14-23.15.03: src/lib/src/lib/thread-kit/src/core-thread-kit/io-mailop.pkg: For brevity, readability and consistency, renamed  make_io_mailop -> io_mailop'.
2012-04-14-22.58.04: src/lib/src/lib/thread-kit/src/winix/threadkit-winix-io.api: Dropped deprecated  select and select_mailop  synonyms for wait_for_io_opportunity and wait_for_io_opportunity_mailop (not to be confused with regular threadkit  select).
2012-04-14-22.58.04: Change ioq -> iom verious places as abbreviation for io_mailop.
2012-04-14-22.52.24: src/lib/src/lib/thread-kit/src/core-thread-kit/:  For consistency and brevity renamed  threadkit-io-queen.api -> io-mailop.api,  threadkit-io-queen.pkg -> io-mailop.pkg.
2012-04-13-23.55.09: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-13-23.50.34: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-13-23.38.26: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-13-23.29.36: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-13-23.08.54: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-13-22.53.57: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Dropped a   un_wrapped_flag =   REF FALSE;   whose result was never used.
2012-04-13-22.15.02: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-04-13-21.06.01: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Yet more light cleaning.
2012-04-13-20.16.53: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: More light cleaning.
2012-04-13-19.30.24: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-04-13-04.24.44: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  next -> return_to__start_mailop_watches__loop.
2012-04-13-04.03.32: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: For clarity rename  run -> start_mailop_watches__loop.
2012-04-13-03.52.53: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: For clarity renamed  select_do_fn -> pick_highest_priority_mailop_breaking_ties_fairly.
2012-04-13-03.27.50: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-04-13-03.16.18: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: For clarity renamed  new_v -> new_maildrop_value.
2012-04-13-03.08.07: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  For brevity renamed  start_watching_for_mailop_ready_to_fire -> start_watching_for_mailop_ready.  Still a far-from-wonderful name.
2012-04-11-01.33.59: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity and greppability renamed  choose -> cat_mailops.
2012-04-11-00.42.48: src/lib/src/lib/thread-kit/src/core-thread-kit/oneshot-maildrop.pkg, src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: Light cleaning.
2012-04-11-00.19.19: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg (etc):  For clarity and consistency renamed   cancel_transaction_and_return_thread_id -> mark_selectrun_complete_and_return_thread.
2012-04-11-00.03.32: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Still more light cleaning.
2012-04-10-23.50.06: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Yet more light cleaning.
2012-04-10-23.37.18: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: More light cleaning.
2012-04-10-23.31.32: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-04-10-23.05.08: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: For clarity and consistency renamed  always_mailop -> always',  never -> never'.
2012-04-10-01.08.52: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For symmetry, clarity and namespace cleanliness, renamed  CHOOSE -> CHOOSE_MAILOP.
2012-04-10-01.00.10: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity, consistency and symmetry renamed  WITH_NACK -> DYNAMIC_MAILOP_WITH_NACK.
2012-04-10-00.45.56: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity and symmetry renamed  with_nack -> dynamic_mailop_with_nack.
2012-04-10-00.26.54: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity renamed  clean_up -> finish_selectrun.
2012-04-09-23.53.55: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity and to avoid split phrase, renamed set_up__mailop_ready_to_fire__watch -> start_watching_for_mailop_ready_to_fire.
2012-04-09-23.25.31: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: For clarity renamed  check_condvars -> send_nacks_as_appropriate.
2012-04-09-23.14.45: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  For clarity renamed unready_mailop -> set_up__mailop_ready_to_fire__watch.
2012-04-09-22.45.21: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity renamed Unready_Mailop(X) -> Set_Up__Mailop_Ready_To_Fire__Watch__Fn(X).
2012-04-09-16.28.25: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  CONDVAR_UNSET-> CONDVAR_IS_NOT_SET,  CONDVAR_VALUE -> CONDVAR_IS_SET.
2012-04-09-16.07.07: For clarity and consistency pervasively renamed  mailop_done -> select_run_status  in the threadkit implementation.
2012-04-09-15.53.33: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity and to distinguish between  mailops (static) and select runs (dynamic) renamed  Mailop_Done -> Select_Run_Status,  MAILOP_DONE -> SELECT_RUN_IS_COMPLETE,  MAILOP_PENDING_FOR -> SELECT_RUN_IS_BLOCKED.
2012-04-09-15.43.33: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  MAILOP_READY -> MAILOP_IS_READY_TO_FIRE,  MAILOP_UNREADY -> MAILOP_IS_NOT_READY_TO_FIRE.
2012-04-09-15.35.09: For clarity, pervasively renamed  wait_for -> set_up__mailop_ready_to_fire__watch  in the threadkit implementation.
2012-04-09-14.40.39: For clarity, pervasively renamed  is_ready -> is_mailop_ready_to_fire  in threadkit code.
2012-04-09-14.17.59: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed  fire_select_rule -> fire_mailop  because select rules are really just mailops and suggesting otherwise might confuse.
2012-04-09-14.03.03: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  Renamed  Is_Ready_Mailop -> Isready_Mailop,  IS_READY_MAILOPS -> ISREADY_MAILOPS.
2012-04-09-05.23.01: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity, consistency and greppability, renamed DYNAMIC_RULE -> DYNAMIC_MAILOP, dynamic_rule -> dynamic_mailop.
2012-04-09-05.15.11: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api:  For clarity renamed  guard -> dynamic_rule.
2012-04-09-04.58.31: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg:  For clarity and honesty renamed  GUARD -> DYNAMIC_RULE.
2012-04-09-04.42.41: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  do_it -> fire_select_rule.
2012-04-09-04.12.09: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity and consistency renamed  BASEOPS -> IS_READY_MAILOPS.
2012-04-09-04.01.50: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed Mailop_Baseop -> Is_Ready_Mailop.
2012-04-09-03.49.02: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-09-03.34.37: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Light cleaning.
2012-04-09-03.13.50: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-09-03.10.05: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-09-03.03.32: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-09-02.54.45: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-09-02.46.42: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  Light cleaning.
2012-04-08-23.21.16: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  For clarity and consistency renamed   Mailop_Group -> Prepared_Mailops,  BASEOP_GROUP -> NACKFREE_MAILOPS,  MAILOP_GROUP -> NACKFULL_MAILOPS,  NACK_GROUP -> WITHNACK_MAILOP.
2012-04-08-23.09.14: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg:  For clarity, consistency and symmetry, renamed  PLAIN_GROUP -> MAILOP_GROUP.  Light cleaning.
2012-04-08-21.24.21: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: For clarity renamed  wrap -> make_select_rule.
2012-04-08-12.02.55: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: Rename wrap_handler -> make_exception_handling_mailop.
2012-04-08-11.53.06: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.api: Commenting and cleaning.
2012-04-08-11.34.03: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-04-08-11.20.36: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Light cleaning.
2012-04-08-03.06.30: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg etc: Light cleaning.
2012-04-08-02.54.18: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop etc: Light cleaning.
2012-04-08-02.04.42: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.pkg: More light cleaning.
2012-04-08-01.38.31: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.pkg: Light cleaning.
2012-04-08-01.18.32: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  Mailop_State -> Mailop_Done, mailop_state -> mailop_done.
2012-04-08-01.03.06: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed  Mailop_Status(X) -> Mailop_Readiness(X)
2012-04-07-18.16.12: src/lib/src/: Moved guts of queue.pkg into new file queue-via-paired-lists.pkg
2012-04-06-02.50.32: Renamed src/lib/std/src/socket/pre-socket.pkg -> src/lib/std/src/socket/proto-socket.pkg, src/lib/std/src/socket/threadkit-pre-socket.pkg -> src/lib/std/src/socket/threadkit-proto-socket.pkg
2012-04-06-02.42.36: src/lib/std/src/: Renamed pre-basis.pkg -> proto-basis.pkg
2012-04-06-01.40.36: src/lib/std/src/: Renamed num-scan.pkg ->  number-scan.pkg
2012-04-06-01.07.43: src/lib/std/src/: Renamed num-format.pkg -> number-format.pkg
2012-04-06-00.58.52: src/lib/std/src/:  Renamed pre-string.pkg -> protostring.pkg.  Much light cleaning in this and related files.
2012-04-05-18.47.54: src/lib/core/init/: Renamed prestring.pkg -> protostring.pkg
2012-04-05-13.13.43: src/lib/core/init/: Renamed pre-string.pkg -> protostring.pkg
2012-04-05-13.06.00: src/lib/core/init/:  Renamed   pre-pervasive.pkg -> proto-pervasive.pkg  because the former sucks donkey parts.
2012-04-05-12.42.15: src/lib/core/init/pre-pervasive.pkg:  Light cleaning.
2012-04-05-12.28.34: src/lib/std/src/socket/threadkit-socket.pkg: Light cleaning.
2012-04-05-03.08.02: src/lib/std/src/socket/threadkit-socket.pkg: More light cleaning.
2012-04-05-03.05.34: src/lib/std/src/socket/threadkit-socket.pkg: Light cleaning.
2012-04-05-02.42.32: src/lib/std/src/posix/threadkit-winix-data-file-io-driver-for-posix.pkg: More light cleaning.
2012-04-05-02.37.17: src/lib/std/src/posix/threadkit-winix-data-file-io-driver-for-posix.pkg: Light cleaning.
2012-04-04-21.57.59: src/lib/std/src/posix-1003.1b/posix-process.pkg:  Light cleaning.
2012-04-04-20.48.33: src/lib/std/src/winix/winix-io.api: For brevity and consistency renamed Wait_Request -> Ioplea.
2012-04-04-20.36.23: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed MAILOP_PENDING(Thread) -> MAILOP_PENDING_FOR(Thread)  because I think it reads a bit better.
2012-04-04-19.44.11: src/c/h/runtime-base.h: Renamed  pth__heapcleaner_state -> pth__heapcleaner_state__global,  pth__running_pthreads_count -> pth__running_pthreads_count__global.
2012-04-04-18.20.11: src/c/h/runtime-base.h: For clarity commandline_arguments_without_argv0__global -> commandline_args_without_argv0_or_runtime_args__global;  for clarity and consistency renamed  raw_args -> raw_commandline_args__global.
2012-04-04-15.11.02: src/c/h/runtime-base.h: For clarity and consistency renamed commandline_arguments -> commandline_arguments_without_argv0__global.
2012-04-04-14.57.04: src/c/h/runtime-base.h: For clarity and consistency renamed verbosity -> verbosity__global.
2012-04-04-14.50.10: src/c/h/runtime-base.h: For clarity and consistency renamed saw_shebang_line -> saw_shebang_line__global.
2012-04-04-14.31.46: src/c/h/runtime-base.h: For clarity and consistency renamed running_script -> running_script__global.
2012-04-04-14.31.46: src/c/mythryl-config.h: Moved TRUE/FALSE defs here from src/c/h/runtime-base.h, to improve readability in mythryl-config.h, plus defined NEEDD_TO_EXECUTE_ASSERTS flag.  src/c/machine-dependent/signal-stuff.c: Added an   #if NEED_TO_EXECUTE_ASSERTS   clause to suppress an unused-variable warning.  src/c/main/runtime-main.c:  Split  handle_mythryl_script_environment_variable()  off from  process_commandline_options(), which was getting cluttered and formless.
2012-04-02-16.09.42: src/c/main/runtime-main.c: Per Hue White, changed   if (mythryl_script__global) {   to   if (mythryl_script) {.   *BLUSH*
2012-04-02-00.03.23: src/c/config/posix-signals.c: Added RUNSIG_THREAD_SCHEDULER_TIMESLICE/THREAD_SCHEDULER_TIMESLICE to runtime_generated_signals__local [].  (Believe it or not, that took about a week...)
2012-04-01-20.43.19: src/lib/std/src/rw-vector.api (etc):  For clarity and consistency renamed findi -> keyed_find and map_in_place_i -> keyed_map_in_place.
2012-04-01-14.07.48: src/lib/std/src/nj/runtime-signals-guts.pkg: Light cleaning.
2012-04-01-13.16.09: src/lib/std/src/nj/runtime-signals-guts.pkg: Light cleaning.
2012-03-31-23.03.53: src/lib/std/src/matrix.api: Renamed Array -> Matrix, array -> make_matrix.
2012-03-31-22.52.34: src/lib/std/src/typelocked-matrix.api: Ditto.
2012-03-31-22.41.59: src/lib/std/src/typelocked-rw-vector-slice.api: Renamed copy_vec -> copy_vector, modify -> map_in_place.
2012-03-31-22.11.49: For clarity and consistency pervasively renamed  collate -> compare_sequences.
2012-03-31-21.51.45: src/lib/std/src/rw-vector.api:  Commenting.
2012-03-31-17.41.37: src/lib/std/src/list.api: Commenting.
2012-03-31-02.36.51: src/lib/std/src/rw-vector.api: Renamed modify -> map_in_place, modifyi -> map_in_place_i.  Because that is what they in fact do.
2012-03-31-01.26.14: src/lib/core/init/core.pkg: Renamed max_length -> maximum_vector_length.
2012-03-31-01.14.21: src/lib/std/src/rw-vector.api:  For clarity changed   max_len  to  maximum_vector_length.
2012-03-31-00.57.18: src/lib/std/src/rw-vector.api:  For clarity changed   copy { from, to, di }   to   copy { from, into, at }   and    copy_vec { from, to, di }   to   copy_vector { from, into, at }.
2012-03-30-22.14.18: src/lib/std/src/rw-vector.pkg: Light cleaning.
2012-03-30-22.04.58: src/lib/std/src/: Renamed bind-int-32.pkg -> int-guts.pkg.
2012-03-30-13.19.33: src/lib/std/src/nj/runtime-signals.api: Establish thread_scheduler_timeslice_signal: Signal. (Currently a dummy placeholder.)
2012-03-30-13.05.04: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: Renamed IN_CRITICAL_SECTION -> IN_INDIVISIBLE_SCOPE, IN_CRITICAL_SECTION_WITH_PENDING_THREADSWITCH -> IN_INDIVISIBLE_SCOPE_WITH_PENDING_THREADSWITCH.
2012-03-30-12.56.10: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Renamed set_condvar__atomic -> set_condvar_in_indivisible_scope.
2012-03-30-12.44.05: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Renamed atomic_cvar_set -> set_condvar__atomic
2012-03-30-12.36.37: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Renamed cvar_get_mailop -> wait_on_condvar__mailop;  src/lib/src/lib/thread-kit/src/core-thread-kit/thread.pkg: Renamed thread_death_mailop -> thread_death__mailop.
2012-03-30-12.20.33: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-12.06.45: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.55.18: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.49.47: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.44.34: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity renamed MAILOP_THREAD -> MAILOP_PENDING.
2012-03-30-03.39.36: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.34.06: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.28.56: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.18.06: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-03.05.01: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-02.54.05: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-02.33.55: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-30-02.22.29: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Yuppers -- light cleaning.
2012-03-30-01.57.47: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Even more light cleaning.
2012-03-29-21.38.44: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: More light cleaning.
2012-03-29-21.07.13: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-29-20.02.44: src/lib/std/src/posix/winix-io.pkg: Light cleaning.
2012-03-29-19.51.48: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.api: As an experiment tried renaming  io_mailop -> make_io_mailop.
2012-03-29-19.24.14: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api:  For clarity renamed MULTI_THREAD -> NORMAL_STATE, MONO_THREAD -> IN_CRITICAL_SECTION, SIGNAL_PENDING -> IN_CRITICAL_SECTION_WITH_PENDING_THREADSWITCH.
2012-03-29-19.12.33: src/lib/src/red-black-numbered-list.pkg: Added some comments and URLs for future reference re ropes and finger trees and concatenation of red-black trees.
2012-03-29-00.46.28: src/lib/src/rw-queue.api: Commenting.
2012-03-29-00.26.09: src/lib/src/queue.api: Final round of rationalization.
2012-03-29-00.14.47: src/lib/src/queue.api: More rationalization.
2012-03-28-23.51.36: src/lib/src/: Deleted old-queue.api, old-queue.pkg.  src/lib/src/queue.api: Dropped silly stuff, renamed other stuff for consistency with rw-queue.pkg.
2012-03-28-23.23.09: src/lib/src/queue.api: Renamed empty -> empty_queue, is_empty -> queue_is_empty.
2012-03-28-23.16.50: src/lib/src/rw-queue.api: Changed mind: renamed output_list/input_list back to front/back.
2012-03-28-23.04.59: src/lib/src/: Renamed  fifo.api -> queue.api,  fifo.pkg -> queue.pkg.
2012-03-28-22.40.20: src/lib/src/rw-queue.api:  Added push, pull, unpush, unpull synonyms for previously existing operations.
2012-03-28-22.28.54: src/lib/src/rw-queue.api: Renamed make_threadkit_queue -> make_rw_queue.
2012-03-28-22.22.00: The standard.lib Queue/queue was an unused toy, whereas the Reppy Threadkit_Queue/threadkit_queue is heavily used and industrial-strength, so: Renamed Queue/queue -> Old_Queue/old_queue, then renamed Threadkit_Queue/threadkit_queue -> Rw_Queue/rw_queue and moved the latter from src/lib/src/lib/thread-kit/src/core-thread-kit/ -> src/lib/src/.
2012-03-28-21.45.19: src/lib/src/: Renamed queue.api -> old-queue.api, queue.pkg -> old-queue.pkg because in fact the codebase does not use them anywhere and Reppys Threadkit_Queue looks like a more industrial-strength replacement.
2012-03-28-17.27.35: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.pkg: To keep my skin from crawling, moved the definition of Threadkit_Queue into threadkit-queue.pkg (from internal-threadkit-types.pkg).
2012-03-28-17.00.48: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Purely for completeness, added pull_item_off_back_of_queue.
2012-03-28-16.48.10: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Added unpull_item_onto_front_of_queue. (Occasionally useful when a thread must run immediately.)
2012-03-28-16.40.48: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Eliminated exception EMPTY_THREADKIT_QUEUE in favor of just using exception FAIL. Nobody should be raising this exception often enough to justify having a separate exception cluttering up the API.
2012-03-28-16.35.29: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed remove -> find_first_matching_item_and_remove_from_queue. This is unused; I do not know why Reppy included it.
2012-03-28-16.22.28: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed reset -> clear_queue_to_empty.
2012-03-28-16.17.54: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed next -> pull_item_off_front_of_queue.
2012-03-28-16.11.56: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed dequeue -> pull_item_off_front_of_queue_or_raise_exception.
2012-03-28-15.59.40: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed is_empty -> queue_is_empty for clarity.
2012-03-28-15.50.32: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.api:  Renamed enqueue -> push_item_onto_back_of_queue for clarity.
2012-03-28-15.36.56: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: THREADKIT_QUEUE: For clarity renamed rear -> input_list, front -> output_list.   src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Renamed run_thunk -> run_thunk_immediately to emphasize that it gets jumped to the front of the runqueue instead of waiting its turn.
2012-03-28-14.57.25: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  Renamed enqueue -> add_thread_to_foreground_run_queue.
2012-03-28-04.35.34: src/lib/src/lib/thread-kit/src/posix/threadkit-driver-for-posix.pkg: Renamed still_background_activity_left -> block_until_some_thread_becomes_runnable.
2012-03-28-04.22.40: src/lib/src/lib/thread-kit/src/posix/threadkit-driver-for-os.api: Renamed  pause -> still_background_activity_left.
2012-03-28-04.04.52: src/lib/src/lib/thread-kit/src/glue/: Renamed threadkit-export-function-g.pkg -> src/lib/src/lib/thread-kit/src/glue/threadkit-base-for-os-g.pkg.
2012-03-28-03.53.44: src/lib/src/lib/thread-kit/src/glue/threadkit-export-function-g.pkg:  For clarity renamed  pause_fate -> no_runnable_threads_left__fate.
2012-03-28-03.39.29: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: For clarity renamed pause_hook -> no_runnable_threads_left__hook.
2012-03-28-03.32.51: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: For clarity renamed scheduler_hook -> switch_to_next_runnable_thread__hook.
2012-03-28-03.26.08: src/lib/src/lib/thread-kit/src/glue/threadkit-export-function-g.pkg: For clarity renamed  poll_fate -> wake_sleeping_threads_and_schedule_fd_io_and_harvest_dead_children__fate.  (Maybe later I will switch to a shorter and more abstract name, but for now I want clarity.)
2012-03-27-14.28.29: src/lib/std/src/nj/fate.api: Renamed run_fate -> switch_to_fate because I think it gives better intuition. In particular (1) "run" sounds too ordinary, and what is going on is quite extraordinary and (2) "run" sounds like nested subcomputation, but what is going on is typically more like switching between co-equal threads of computation.
2012-03-27-13.39.43: src/lib/src/lib/thread-kit/src/posix/threadkit-driver-for-os.api: Renamed poll_os -> wake_sleeping_threads_and_schedule_fd_io_and_harvest_dead_children.
2012-03-27-06.32.03: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.api: Renamed poll_io -> add_any_new_fd_io_opportunities_to_run_queue.
2012-03-27-06.25.39: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.api: Renamed any_waiting -> have_fds_on_io_watch.
2012-03-27-06.18.40: src/lib/src/lib/thread-kit/src/process-deathwatch.api: Rename any_waiting -> have_child_processes_on_deathwatch.
2012-03-27-06.10.14: src/lib/src/lib/thread-kit/src/process-deathwatch.api: Rename add_pid -> start_child_process_deathwatch.
2012-03-27-05.56.12: src/lib/src/lib/thread-kit/src/process-deathwatch.api:  Renamed poll_processes -> harvest_exit_statuses_of_dead_child_processes.
2012-03-27-05.39.22: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: Renamed enqueue_tmp_thread -> run_thunk.
2012-03-27-05.30.59: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: Renamed enqueue_and_switch_current_thread -> run_thread and changed arg order to be consistent with add_to_run_queue.
2012-03-27-05.09.56: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api: For clarity renamed  enqueue_thread -> add_to_run_queue.
2012-03-27-04.44.10: src/lib/std/src/nj/fate.api: For brevity and clarity renamed resume_fate -> run_fate, since a fate can be invoked more than once in this fashion.  For consistency renamed capture_fate -> call_with_current_control_fate, throw_fate -> run_control_fate.
2012-03-26-20.29.30: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.pkg: Light cleaning.
2012-03-26-04.18.22: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed maildeed -> mailop -- there appears to be no such distinction to be made.
2012-03-26-04.07.35: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Much renaming of transaction -> maildeed and mailop -> maildeed as I attempt to establish a nomenclature distinction between mailop (code) and maildeed (queue data).
2012-03-26-03.19.41: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control.api: Cleaning.
2012-03-26-02.55.51: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.pkg: For clarity, renamed  enqueue -> put_io_opportunity_in_run_queue.
2012-03-26-02.47.59: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed TRANSACTION_CANCELLED -> TRANSACTION_DONE, which seems to be more accurate.
2012-03-26-02.37.35: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For greppability renamed Thread -> Thread_State, THREAD -> THREAD_STATE.
2012-03-26-02.20.09: src/app/makelib/concurrency/makelib-thread-queen.pkg: Renamed Thread_State -> Thread_Vim because vim is a wonderful word and I want Thread_State for another use.
2012-03-26-02.03.51: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: TRANSACTION_CANCELLED -> CANCELLED_TRANSACTION.
2012-03-26-01.54.38: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed Transaction_Id -> Transaction_State, TRANSACTION_CHIT -> TRANSACTION_THREAD, CANCELLED_TRANSACTION_CHIT -> CANCELLED_TRANSACTION, transaction_id field -> transaction_state.
2012-03-26-01.15.41: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.pkg:  For clarity and consistency renamed  poll -> wait_for_io_opportunity.
2012-03-25-22.27.49: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Renamed TRANSACTION_ID -> TRANSACTION_CHIT.
2012-03-25-21.39.08: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: More light cleaning.
2012-03-25-21.29.31: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: Light cleaning.
2012-03-25-21.17.52: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.api: Light cleaning.
2012-03-25-21.04.33: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: More light cleaning.
2012-03-25-20.53.46: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Light cleaning.
2012-03-25-20.27.03: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.api: Dropped Io_Descriptor, Wait_Request, Wait_Result because I detest rampant type cloning.
2012-03-25-20.05.32: src/lib/std/src/winix/winix-io.api: Changed  Iod_Kind = KIND(String)  (*gag*)  to  Iod_Kind = FILE | DIRECTORY | CHAR_DEVICE | BLOCK_DEVICE | PIPE | SOCKET | OTHER.
2012-03-25-18.51.29: For brevity, pervasively renamed Io_Descriptor -> Iod.
2012-03-25-18.43.49: src/lib/std/src/winix/winix-io.api: For clarity and greppability, renamed   kind -> iod_to_iodkind.
2012-03-25-17.56.05: Changed threadkit_io_queen abbreviation from io:: to ioq::.
2012-03-25-13.33.25: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-queen.pkg: For clarity and consistency renamed  waiting -> waiting_queue__local.
2012-03-25-13.09.38: src/lib/src/lib/thread-kit/src/core-thread-kit/: For brevity, consistency and acronymability renamed  threadkit-io-manager.pkg -> threadkit-io-queen.pkg.
2012-03-24-21.20.36: src/lib/core/internal/mythryl-compiler-version.pkg: Updated version to 6.2.0
2012-03-24-16.36.19: src/README: Rewrote. This was grossly out of date.
2012-03-24-16.36.19: src/lib/src/lib/thread-kit/src/glue/threadkit-export-function-g.pkg: Cleaning.
2012-03-24-16.18.42: To suppress some harmless makefile-not-found errors on   make clean   added src/lib/tk/src/Makefile.in src/lib/c-glue/Makefile.in src/app/c-glue-maker/Makefile.in src/lib/x-kit/tut/show-graph/Makefile.in.
2012-03-24-14.20.13: Same, except now it compiles. :-)
2012-03-24-14.07.28: src/lib/src/lib/thread-kit/src/posix/threadkit-driver-for-posix.pkg:  Cleaning.
2012-03-24-14.00.44: src/lib/src/lib/thread-kit/src/lib/threadkit-uncaught-exception-reporting.pkg:  Cleaning.
2012-03-24-03.25.10: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-startup-and-shutdown-hooks.pkg:  Cleaning.
2012-03-24-03.10.32: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-unit-test.pkg:  Cleaning.
2012-03-24-02.53.44: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-manager.pkg:  Cleaning.
2012-03-24-02.44.54: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-debug.pkg:  Cleaning.
2012-03-24-02.37.22: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-queue.pkg:  Cleaning.
2012-03-24-02.25.06: src/lib/std/src/posix/threadkit-winix-text-file-io-driver-for-posix.pkg:  Cleaning.
2012-03-24-02.16.12: src/lib/std/src/posix/threadkit-spawn.pkg:  Cleaning.
2012-03-24-02.05.42: src/lib/std/src/posix/threadkit-winix-process.pkg: Cleaning.
2012-03-24-01.41.46: src/lib/std/src/posix/threadkit-winix-data-file-io-driver-for-posix.pkg: Cleaning.
2012-03-24-01.32.59: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg: Cleaning.
2012-03-24-01.17.45: src/lib/std/src/io/threadkit-winix-mailslot-io-g.pkg: Cleaning.
2012-03-24-01.03.42: Switched from tkt to thk as abbreviation for threadkit package.
2012-03-24-00.57.16: src/lib/std/src/io/threadkit-winix-base-text-file-io-driver-for-posix.pkg: Light cleaning.
2012-03-24-00.49.42: src/lib/std/src/io/threadkit-io-cleanup-at-shutdown.pkg: Light cleaning.
2012-03-24-00.39.26: src/lib/std/src/io/threadkit-winix-base-data-file-io-driver-for-posix.pkg: Light cleaning.
2012-03-24-00.30.43: src/lib/std/src/io/io-exceptions.api: For brevity renamed IO field  function -> op.
2012-03-24-00.07.27: src/lib/std/src/io/threadkit-winix-data-file-for-os-g.pkg: Light cleaning.
2012-03-23-23.49.30: src/lib/std/src/io/threadkit-winix-base-file-io-driver-for-posix-g.pkg: For clarity and consistency renamed read_vect_mailop -> read_vector_mailop, read_arr_mailop -> read_rw_vector_mailop, write_vec_mailop -> write_vector_mailop, write_arr_mailop.
2012-03-23-23.27.34: src/lib/std/src/io/threadkit-winix-base-file-io-driver-for-posix-g.pkg: For clarity and consistency renamed  name  fields to  filename.
2012-03-23-23.04.53: src/lib/std/src/io/threadkit-winix-base-file-io-driver-for-posix-g.pkg: Cleaning.
2012-03-23-18.53.04: Similar stuff.
2012-03-23-16.34.57: src/lib/std/src/socket/threadkit-internet-socket.pkg: Light cleaning.
2012-03-23-16.25.25: src/lib/std/src/socket/threadkit-plain-socket.pkg: Light cleaning.
2012-03-23-16.17.34: src/lib/std/src/socket/threadkit-plain-socket.api: Light cleaning.
2012-03-23-02.26.10: Random tidying in threadkit files.
2012-03-22-22.17.49: src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: start_thread_scheduler_timer: Added a call to start_supporting_pthreads(), so from now on whenever thread-scheduler is running, we should also have running a full complement of cycle-server and io-server pthreads plus an io-wait pthread.
2012-03-22-22.06.33: src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Sketched in first-cut version of start_supporting_pthreads(). (Not yet called anywhere.)
2012-03-22-02.30.00: src/lib/std/src/nj/runtime-signals-guts.pkg: Cleaning.
2012-03-22-02.04.50: src/c/config/posix-signals.c: Renamed RUNSIG_GC -> RUNSIG_HEAPCLEANING_DONE.
2012-03-22-01.50.07: src/c/h/runtime-base.h: Renamed cleaning_signal_handler_state -> heapcleaning_done_signal_handler_state.
2012-03-21-23.01.46: src/lib/std/src/nj/runtime-signals-guts.pkg: heapcleaning_signal -> heapcleaning_done_signal.
2012-03-21-22.52.28: src/lib/std/src/nj/runtime-signals-guts.pkg: HEAPCLEANING -> HEAPCLEANING_DONE.
2012-03-21-22.44.06: src/lib/std/src/nj/runtime-signals.api: Renamed terminal_signal -> terminate signal.  src/c/config/posix-signals.c: Changed Mythryl-level name for SIGTERM from TERMINAL to TERMINATE.
2012-03-21-20.16.16: src/c/config/posix-signals.c: Make RunTSignals[] static (private to file).
2012-03-21-20.04.37: src/lib/src/lib/thread-kit/src/posix/threadkit-driver-for-os.api:  Renamed  init -> start_threadkit_driver,  shutdown -> stop__threadkit_driver.
2012-03-21-19.49.26: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: More light cleaning.
2012-03-21-19.41.14: src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg: Light cleaning.
2012-03-21-15.01.08: src/lib/src/lib/thread-kit/src/posix: Renamed unix-threadkit-os-glue.pkg -> threadkit-driver-for-posix.pkg.
2012-03-21-14.43.45: src/lib/src/lib/thread-kit/src/posix: Renamed threadkit-os-glue.api -> threadkit-driver-for-os.api.
2012-03-21-14.23.00: Ditto -- but now it actually compiles.
2012-03-21-14.01.30: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: For clarity and greppability renamed start_timer -> start_thread_scheduler_timer, stop_timer -> stop_thread_scheduler_timer, reset_timer -> reset_thread_scheduler_timer.
2012-03-21-13.56.07: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: For clarity and greppability renamed scheduler_state -> thread_scheduler_state, Scheduler_State -> Thread_Scheduler_State.
2012-03-21-13.45.00: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: alarm_handler: To activate preceding, added   service_inter_pthread_requests (get_new_inter_pthread_requests());   line.
2012-03-21-13.29.54: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Imported inter-pthread communication machinery.
2012-03-21-13.03.11: src/lib/std/src/list.api (&kith): Light cross-referencing.
2012-03-21-02.37.57: Same, except now it actually compiles.
2012-03-20-21.31.59: src/lib/std/src/pthread.api: Added get_cpu_core_count() call.
2012-03-20-03.59.12: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: More tidying.
2012-03-20-03.49.17: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Tidying.
2012-03-20-03.33.30: .
2012-03-20-03.23.02: .
2012-03-20-03.12.05: Ditto.
2012-03-20-02.55.53: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.api (etc): Light cleaning.
2012-03-19-22.37.37: src/lib/std/src/pthread/io-wait-pthread.pkg: Implemented drop_per_loop_fn which I had overlooked previously. *blush*  Package should now be usable, in theory at least.
2012-03-19-22.21.35: src/lib/std/src/pthread/io-wait-pthread.pkg: Tidying.
2012-03-19-21.58.17: src/lib/std/src/pthread/io-wait-pthread.pkg: Switched over from condvar-wait blocking to io-wait blocking.
2012-03-19-19.05.38: src/lib/std/src/pthread/io-wait-pthread.pkg: More tidying.
2012-03-19-18.55.04: src/lib/std/src/pthread/io-wait-pthread.pkg: Tidying.
2012-03-19-18.41.18: src/lib/src/: Eliminated list-fns.api + list-fns.pkg, now that the useful parts have been moved to list.api + list.pkg.
2012-03-19-17.56.35: src/lib/src/list-fns.api: Removed  from_to  because it duplicates the standard.lib .. op.
2012-03-19-16.53.09: src/lib/src/list-fns.api: Removed  zip, unzip  because they are redundant with pair-lists.pkg
2012-03-19-16.41.07: src/lib/src/list-fns.api: Removed  flatten  because it is semantically identical to list::cat. (Better implementation, though...?)
2012-03-19-16.28.17: src/lib/src/list-fns.api: Moved  split  to list.api as  split_n.
2012-03-19-16.07.05: src/lib/src/list-fns.api: Moved  suffix and prefix  to list.api as prefix_to_first and suffix_from_first.
2012-03-19-15.52.11: src/lib/src/list-fns.api: Moved  splitp  to list.api as split_at_first.
2012-03-19-15.38.17: src/lib/src/list-fns.api: Dropped  filter  because it is identical to list::map_partial_fn.
2012-03-19-15.32.15: src/lib/src/list-fns.api: Moved  remove_first  to list.api.
2012-03-19-15.18.02: src/lib/src/list-fns.api: Moved  remove  to list.api.
2012-03-19-14.52.22: src/lib/src/list-fns.api: Dropped  find_first  because it was identical to list::find.
2012-03-19-14.37.07: src/lib/src/list-fns.api: Dropped  find  because it was identical to list::filter.
2012-03-19-14.29.29: src/lib/std/src/list.api: Added  drop  fn.
2012-03-18-16.01.52: src/lib/std/src/pthread/io-wait-pthread.pkg: Tidying.
2012-03-18-15.03.07: src/lib/std/src/pthread/io-wait-pthread.pkg: Tweak do_select() to actually call client-supplied I/O fns.
2012-03-18-14.43.16: src/lib/std/src/pthread/io-wait-pthread.pkg: Add note/drop oodb support parallel to existing note/drop read/write support.
2012-03-18-14.22.02: src/lib/std/src/pthread/io-wait-pthread.pkg: Tweak code to ensure only one wait_requests entry per iod.
2012-03-18-13.06.14: src/lib/std/src/pthread/io-wait-pthread.pkg: Sketched in various bits of functionality.
2012-03-15-22.21.05: src/lib/std/src/vector-of-one-byte-unts.pkg: Tidying.
2012-03-15-20.36.15: For clarity, consistency and symmetry, pervasively renamed  cycleserver-pthread -> cpu-bound-task-pthreads  and  lagserver-pthread -> io-bound-task-pthreads (etc).
2012-03-15-13.56.07: src/c/heapcleaner/import-heap.c: Added a big comment re possible heap generation numbers.
2012-03-15-02.44.25: src/lib/std/src/pthread/: Duplicated cycleserver* to make functionally identical lagserver* files. (Useful because one wants only as many cycleservers as cores, but any number of lagservers are ok, since they just sit I/O bound.)
2012-03-15-02.04.07: src/lib/std/src/pthread/: Cycle servers seem operational.
2012-03-14-20.16.56: src/lib/std/src/pthread/: Established cycleserver-pthread.api, cycleserver-pthread.pkg, cycleserver-pthread-unit-test.pkg
2012-03-14-14.47.40: src/lib/std/src/posix-1003.1b/posix-io.api (etc): For clarity, pervasively renamed  name -> filename  in filereader and filewriter records.
2012-03-14-14.22.04: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity renamed  fd -> file_descriptor  in various argument records.
2012-03-14-13.57.16: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity renamed  read_rw_vector -> read_into_buffer.
2012-03-14-13.47.50: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity renamed  read_vector  ->  read_as_vector.
2012-03-14-13.38.53: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity and consistency, changed read_rw_vector arg from  (File_Descriptor, Byteslice)  to  { file_descriptor: File_Descriptor, buffer: Byteslice }.
2012-03-14-13.26.47: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity, changed read_vector arg from  (File_Descriptor, Int)  to  { file_descriptor: File_Descriptor, max_bytes_to_read: Int }.
2012-03-14-13.01.38: src/lib/std/src/pthread/: For clarity and consistency renamed  select-pthread.pkg -> io-wait-pthread.pkg  (etc).
2012-03-14-03.49.11: src/lib/std/src/pthread/select-pthread.pkg: More sketching in of code, mostly centering on internal pipe and the central wio::wait_for_io_opportunity() call.
2012-03-14-02.32.17: src/lib/std/src/pthread/select-pthread.pkg: Added   wait_requests   and   timeout   state variables.
2012-03-14-01.56.02: src/lib/std/src/pthread/: Added template-pthread-unit-test.pkg and wired it up.
2012-03-14-00.54.34: src/lib/std/src/pthread/select-pthread-unit-test.pkg: Added verify_basic__echo__operation ().
2012-03-13-22.26.31: src/lib/std/src/pthread/select-pthread-unit-test.pkg: Add test of is_running() entrypoint.
2012-03-13-22.10.33: src/lib/std/src/pthread/template-pthread.api: Added stop() start(), echo(), and is_running().
2012-03-13-20.44.30: src/lib/std/src/pthread/select-pthread.pkg: Added do_echo request.
2012-03-13-20.33.40: src/lib/std/src/pthread/: Added   select-pthread-unit-test.pkg  and wired it up.
2012-03-13-20.22.18: src/lib/std/src/pthread/select-pthread.pkg: Add psx::make_pipe() call.
2012-03-13-19.18.54: src/lib/std/src/posix-1003.1b/posix-file.pkg: Cleaning.
2012-03-13-15.37.50: src/lib/std/src/pthread/template-pthread.pkg: Light tidying.
2012-03-13-14.55.27: src/lib/std/src/pthread/: Established template-pthread.api, template-pthread.pkg.
2012-03-13-02.28.37: Established src/lib/std/src/pthread/select-pthread.api and src/lib/std/src/pthread/select-pthread.pkg.
2012-03-13-00.36.49: src/c/mythryl-config.h: Increased MAX_PTHREADS from 8 to 32.
2012-03-12-21.36.22: Added src/lib/std/src/io/winix-file-io-mutex.pkg.
2012-03-12-01.24.38: src/lib/std/src/io/: Renamed README -> README.OVERVIEW, added material.
2012-03-09-22.57.02: src/lib/std/src/io/winix-file-for-os.api: Renamed  lookahead -> peek  for brevity, clarity, and consistency with mainstream practice.
2012-03-08-21.27.02: Still more minor cleanup, mostly win32 file I/O code.
2012-03-08-20.37.05: More minor cleanup, mostly win32 file I/O code.
2012-03-08-19.28.18: Minor cleanup, mostly win32 file I/O code.
2012-03-08-12.51.10: Because text/data is a better symmetry than text/binary, pervasively renamed winix-binary-file-for-os.api -> winix-data-file-for-os.api, winix-base-binary-file-io-driver-for-posix.pkg -> winix-base-data-file-io-driver-for-posix.pkg etc etc.
2012-03-08-03.00.19: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Tess of the Planet of Light Cleaning.
2012-03-08-02.42.34: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Conan of the Planet of Light Cleaning.
2012-03-08-02.26.43: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Escape from Planet of Light Cleaning.
2012-03-08-02.21.02: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Rise of the Planet of Light Cleaning.
2012-03-08-02.03.25: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Return to Beneath the Planet of Light Cleaning.
2012-03-08-01.33.43: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Beneath the Planet of Light Cleaning.
2012-03-08-01.12.37: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Return to Planet of the Light Cleaning.
2012-03-08-00.41.38: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Light cleaning: The Sequel.
2012-03-08-00.34.43: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: And look -- MORE light cleaning.
2012-03-08-00.27.56: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Light cleaning.
2012-03-08-00.20.07: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Surprise: more light cleaning.
2012-03-08-00.05.33: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Yup: more light cleaning.
2012-03-07-23.41.32: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Still more light cleaning.
2012-03-07-23.34.32: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Still more light cleaning.
2012-03-07-23.25.49: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Yet more light cleaning.
2012-03-07-23.10.03: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Yet more light cleaning.
2012-03-07-22.41.16: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: More light cleaning.
2012-03-07-22.12.08: src/lib/std/src/io/threadkit-winix-text-file-for-os-g.pkg and kith: Light cleaning.
2012-03-07-21.06.57: src/lib/std/src/io/winix-text-file-for-os-g.pkg and kith: Minor cleaning.
2012-03-07-11.04.44: src/lib/std/src/posix-1003.1b/posix-io.pkg: Minor cleaning and commenting.
2012-03-07-02.28.27: src/lib/std/src/posix-1003.1b/posix-io.pkg: More cleaning and commenting.
2012-03-07-02.04.57: src/lib/std/src/io/winix-base-file-io-driver-for-os.api: More reverse engineering and commenting.
2012-03-07-01.17.32: src/lib/std/src/io/winix-base-file-io-driver-for-os.api: Renamed chunk_size to best_io_quantum.
2012-03-07-00.47.07: src/lib/std/src/io/winix-base-file-io-driver-for-os.api:  Reverse engineering and commenting.
2012-03-07-00.28.27: src/lib/std/src/io/winix-text-file-for-os-g.pkg: Light cleaning.
2012-03-06-23.50.31: src/lib/std/src/io/winix-file-for-os.api: Fix omitted renaming.
2012-03-06-23.38.12: src/lib/std/src/posix-1003.1b/posix-io.api: More light cleaning.
2012-03-06-23.26.48: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity renamed block_mode to ok_to_block.
2012-03-06-22.58.03: src/lib/std/src/posix-1003.1b/posix-io.pkg: More light cleaning.
2012-03-06-22.46.29: src/lib/std/src/posix-1003.1b/posix-io.pkg: More light cleaning.
2012-03-06-22.27.38: src/lib/std/src/posix-1003.1b/posix-io.pkg: More light cleaning.
2012-03-06-22.15.32: src/lib/std/src/posix-1003.1b/posix-io.pkg: More light cleaning.
2012-03-06-21.53.18: src/lib/std/src/posix-1003.1b/posix-io.pkg: Light cleaning.
2012-03-06-21.45.32: More of the same.
2012-03-06-21.10.19: src/lib/std/src/posix-1003.1b/posix-io.api: For clarity and consistency renamed make_text_reader -> make_text_filereader, make_text_writer -> make_text_filewriter.
2012-03-06-20.54.06: Minor related cleaning.
2012-03-06-20.43.32: Rename binary_io -> binary_file various places.
2012-03-06-20.19.24: More of the same.
2012-03-06-20.06.48: src/lib/std/src/io/: Renamed text-pure-io.api -> winix-pure-text-file-for-os.api,  threadkit-text-pure-io.api -> threadkit-winix-pure-text-file-for-os.api.
2012-03-06-19.44.45: src/lib/std/src/io/: Renamed pure-file-io.api -> winix-pure-file-for-os.api, threadkit-pure-file-io.api -> threadkit-winix-pure-file-for-os.api
2012-03-06-19.20.52: src/lib/std/src/io/: Renamed file-io.api -> winix-file-for-os.api, threadkit-file-io.api -> threadkit-winix-file-for-os.api
2012-03-06-18.53.56: src/lib/std/src/io/: Renamed binary-file-io.api -> winix-binary-file-for-os.api, threadkit-binary-file-io.api -> threadkit-winix-binary-file-for-os.api
2012-03-06-18.33.09: src/lib/std/commandline.api: Renamed get_arguments -> get_commandline_arguments, get_all_arguments -> get_all_commandline_arguments.
2012-03-06-17.34.21: More of the same.
2012-03-06-17.18.59: src/lib/std/src/posix/: Renamed posix-threadkit-file.pkg -> threadkit-winix-text-file-for-posix.pkg, added new threadkit_file as synonym.
2012-03-06-16.55.43: src/lib/std/src/posix/: Renamed file.pkg -> winix-text-file-for-posix.pkg, created new file.pkg as synonym for it.
2012-03-06-16.32.06: src/lib/std/src/win32/: Renamed win32-file.pkg -> winix-text-file-for-win32.pkg.
2012-03-06-16.18.10: src/lib/std/src/io/: Renamed binary-file-io-g.pkg -> winix-binary-file-for-os-g.pkg, threadkit-binary-file-io-g.pkg -> threadkit-winix-binary-file-for-os-g.pkg.
2012-03-06-15.58.58: src/lib/std/src/io/: Renamed file-g.pkg -> winix-text-file-for-os-g.pkg, threadkit-file-g.pkg -> threadkit-winix-text-file-for-os-g.pkg
2012-03-06-15.37.39: src/lib/std/src/io/: Renamed threadkit-file.api -> threadkit-winix-text-file-for-os.api.
2012-03-06-15.24.07: src/lib/std/src/io/: Renamed file.api -> winix-text-file-for-os.api
2012-03-06-15.01.38: More of same.
2012-03-06-14.36.55: src/lib/std/src/io/: Renamed binary-file-io-driver-for-posix.pkg -> winix-base-binary-file-io-driver-for-posix.pkg, text-file-io-driver-for-posix.pkg -> winix-base-text-file-io-driver-for-posix.pkg, threadkit-binary-file-io-driver-for-posix.pkg -> threadkit-winix-base-binary-file-io-driver-for-posix.pkg, threadkit-text-file-io-driver-for-posix.pkg -> threadkit-winix-base-text-file-io-driver-for-posix.pkg
2012-03-06-13.57.14: src/lib/std/src/io/: Renamed file-io-driver-for-posix-g.pkg -> winix-base-file-io-driver-for-posix-g.pkg, threadkit-file-io-driver-for-posix-g.pkg -> threadkit-winix-base-file-io-driver-for-posix-g.pkg
2012-03-06-13.41.12: src/lib/std/src/io/: Renamed mailslot-io-g.pkg -> threadkit-winix-mailslot-io-g.pkg
2012-03-06-13.33.10: src/lib/std/src/io/: Renamed file-io-driver-for-os.api -> winix-base-file-io-driver-for-os.api, threadkit-file-io-driver-for-os.api -> threadkit-winix-base-file-io-driver-for-os.api
2012-03-06-12.50.28: src/lib/std/src/io/: Renamed   winix-file-io-driver-for-os.api -> winix-extended-file-io-driver-for-os.api, threadkit-winix-file-io-driver-for-os.api -> threadkit-winix-extended-file-io-driver-for-os.api
2012-03-06-03.37.23: src/lib/std/src/io/: Renamed binary-io-g.pkg -> binary-file-io-g.pkg,  threadkit-binary-io-g.pkg -> threadkit-binary-file-io-g.pkg, etc.
2012-03-06-03.11.16: src/lib/std/src/io/file-io.api: Changed 'pure_io' subpackage to 'pur' per convention.
2012-03-06-02.37.05: src/lib/std/src/io/: Renamed pure-io.api -> pure-file-io.api, threadkit-pure-io.api -> threadkit-pure-file-io.api.
2012-03-06-02.18.46: src/lib/std/src/io/: Renamed imperative-io.api -> file-io.api, threadkit-imperative-io.api -> threadkit-file-io.api.
2012-03-06-02.04.13: src/lib/std/src/io/binary-io-g.pkg: Light cleaning.
2012-03-06-01.41.06: More minor cleaning.
2012-03-06-01.28.11: src/lib/std/src/io/file-g.pkg: For brevity and consistency renamed arg pkg from winix_filereaders_and_filewriters -> wxd.
2012-03-06-01.10.01: src/lib/std/src/posix/posix: Renamed threadkit-posix-binary-filereaders-and-filewriters.pkg -> threadkit-winix-binary-file-io-driver-for-posix.pkg, threadkit-posix-text-filereaders-and-filewriters.pkg -> threadkit-winix-text-file-io-driver-for-posix.pkg
2012-03-06-00.49.05: src/lib/std/src/posix/:  Renamed posix-binary-filereaders-and-filewriters.pkg -> winix-binary-file-io-driver-for-posix.pkg, posix-text-filereaders-and-filewriters.pkg -> winix-text-file-io-driver-for-posix.pkg
2012-03-06-00.36.07: src/lib/std/src/io/: Renamed threadkit-binary-filereaders-and-filewriters.pkg -> threadkit-binary-file-io-driver-for-posix.pkg, threadkit-text-filereaders-and-filewriters.pkg -> threadkit-text-file-io-driver-for-posix.pkg
2012-03-06-00.23.00: src/lib/std/src/io/:  Renamed text-filereaders-and-filewriters.pkg -> text-file-io-driver-for-posix.pkg,  binary-filereaders-and-filewriters.pkg -> binary-file-io-driver-for-posix.pkg
2012-03-05-23.59.54: src/lib/std/src/io/: Renamed threadkit-filereaders-and-filewriters-g.pkg -> threadkit-file-io-driver-for-posix-g.pkg
2012-03-05-23.46.42: src/lib/std/src/io/: Renamed filereaders-and-filewriters-g.pkg -> src/lib/std/src/io/file-io-driver-for-posix-g.pkg
2012-03-05-23.03.35: src/lib/std/src/io/: Renamed threadkit-filereaders-and-filewriters.api -> threadkit-file-io-driver-for-os.api
2012-03-05-22.46.50: src/lib/std/src/io/: Renamed threadkit-winix-filereaders-and-filewriters.api -> threadkit-winix-file-io-driver-for-os.api
2012-03-05-22.32.48: src/lib/std/src/io/: winix-filereaders-and-filewriters.api -> winix-file-io-driver-for-os.api.
2012-03-05-22.15.00: src/lib/std/src/io/:  Renamed filereaders-and-filewriters.api -> file-io-driver-for-os.api.
2012-03-05-16.10.13: For more brevity and less mystery, pervasively renamed  streamreader -> filereader  and  streamwriter -> filewriter,  since in practice that is what the API is mainly intended and used for.
2012-03-05-13.09.42: Ditto.
2012-03-05-13.04.54: More of the same.
2012-03-05-12.40.55: For greppability pervasively renamed stream_readers_and_writers to streamreaders_and_streamwriters.
2012-03-05-04.36.54: For clarity, pervasively renamed base_io -> stream_readers_and_writers.
2012-03-04-19.16.50: src/lib/std/src/io/base-io-g.pkg (and many other files :-):  For clarity and greppability, renamed Reader -> Stream_Reader, Writer -> Stream_Writer.
2012-03-04-02.28.50: src/lib/std/src/io/file-g.pkg (and analogues): More light cleaning.
2012-03-03-22.05.44: src/lib/std/src/io/file-g.pkg: More light cleaning.
2012-03-03-21.49.38: src/lib/std/src/io/file-g.pkg: More light cleaning.
2012-03-03-21.35.52: src/lib/std/src/io/file-g.pkg: More light cleaning.
2012-03-03-21.24.33: src/lib/std/src/io/file-g.pkg: More light cleaning.
2012-03-03-21.15.20: src/lib/std/src/io/file-g.pkg: Light cleaning.
2012-03-03-19.26.20: src/lib/std/src/io/file-g.pkg: Restored file::mutex export, previously commented out because it was triggering segfaults.
2012-03-03-12.45.07: src/c/pthread/pthread-on-posix-threads.c: pth__barrier_free: Added logic to throw exception if barrier is set.
2012-03-03-12.37.37: src/c/pthread/pthread-on-posix-threads.c: pth__barrier_wait: Added logic to throw exception if barrier is not set.
2012-03-03-12.32.03: src/c/pthread/pthread-on-posix-threads.c: Add logic to track barrier state properly via 'initialized' flag.
2012-03-03-12.23.24: src/c/pthread/pthread-on-posix-threads.c: Switched to keeping Barrier (i.e., pthread_barrier_t) records in wrapper Barrierx records, so that we can add an 'initialized' flag and generate exceptions rather than undefined behavior when user attempts to wait on an uninitialized barrier.
2012-03-03-12.09.05: src/lib/std/src/pthread.api: For clarity and conciseness renamed  set_up_barrier -> set_barrier.
2012-03-03-12.03.26: src/c/pthread: Deleted obsolete-pthread-on-sgi.c and obsolete-pthread-on-solaris.c -- the maintainance cost was exceeding the maintainance benefit (if any) of having them around still.
2012-03-03-11.55.54: src/lib/std/src/pthread.api: Eliminated clear_barrier() call -- better done implicitly at the C level than explicitly in user code.
2012-03-03-11.50.58: src/c/pthread/pthread-on-posix-threads.c: Expanded initial size of mutex_vector__local[], condvar_vector__local[], barrier_vector__local[], from 2 to 4K slots.
2012-03-03-11.13.09: src/c/pthread/pthread-on-posix-threads.c: Removed  Val arg  arguments from all exported fns because they are no longer needed (Int31 ids do not need to be protected from the heapcleaner) and to simplify the code and for better separation of concerns -- src/c/lib/pthread/libmythryl-pthread.c is supposed to handle all the mythryl-heap stuff and pthread-on-posix-threads.c is supposed to be purely C-level code.
2012-03-03-10.54.12: src/c/pthread/pthread-on-posix-threads.c:  Barrier code passes regression test again after previous rewrite.
2012-03-03-01.14.22: src/c/pthread/pthread-on-posix-threads.c:  Rewrote barrier stuff to support dynamic allocation on same pattern as previous mutex and condvar rewrites.
2012-03-02-22.33.09: Revised src/c/pthread/pthread-on-posix-threads.c code passes unit tests again.
2012-03-02-21.31.33: For brevity and symmetry, pervasively renamed  Val_Sized_Unt -> Vunt  and  Val_Sized_Int -> Vint.
2012-03-02-21.21.36: src/c/mythryl-config.h: Eliminated NEED_PTHREAD_SUPPORT because I regard posix-thread support as standard from here on out, and to reduce codebase clutter, shrink the codebase configuration space and reduce the release-test burden.
2012-03-02-20.45.55: src/c/lib/pthread/libmythryl-pthread.c, src/c/pthread/pthread-on-posix-threads.c: Rewrote condvar stuff to support dynamic allocation on same pattern as previous mutex stuff rewrite.
2012-03-02-17.57.45: src/c/lib/pthread/libmythryl-pthread.c: To simplify api, dropped condvar_init(), condvar_destroy().
2012-03-02-17.52.08: src/lib/std/src/pthread.api, src/lib/std/src/pthread.pkg: Drop set_up_condvar(), clear_condvar() to simplify api.
2012-03-02-16.57.23: src/c/pthread/pthread-on-posix-threads.c: Clone-and-mutated dynamic condvar allocation code to produce first-cut dynamic barrier allocation code.
2012-03-02-16.05.00: src/c/pthread/pthread-on-posix-threads.c: Clone-and-mutated dynamic mutex allocation code to produce first-cut dynamic condvar allocation code.
2012-03-02-04.25.52: src/c/lib/pthread/libmythryl-pthread.c: Changed Mythryl mutex proxy values from one_word_unt::Unt to tagged_int::Int (i.e., from boxed-on-heap to immediate-in-pointer values).
2012-03-02-04.06.55: src/c/pthread/pthread-on-posix-threads.c: Switched over to new code for dynamic allocation of mutexes. Main differences are that Mythryl proxy values for mutexes are now small ints rather than C pointers, and that they should survive heap save/load cycles.
2012-03-01-20.22.00: src/c/pthread/pthread-on-posix-threads.c: More fiddling with next-gen mutex-allocation code.
2012-03-01-19.42.08: src/lib/std/src/pthread.api: To simplify application programmer api and also upcoming implementation work, eliminated set_up_mutex() and clear_mutex().  src/c/lib/pthread/libmythryl-pthread.c: Eliminated do_mutex_init(), do_mutex_clear().
2012-03-01-15.56.37: src/c/pthread/pthread-on-posix-threads.c: Sketch in first steps toward next-gen mutex allocation code.
2012-03-01-00.24.37: src/lib/std/src/io/file.api: Export mutex.
2012-03-01-00.12.13: src/lib/std/src/io/file-g.pkg: Add global-scope mutex.
2012-02-29-23.54.40: src/lib/std/src/pthread-unit-test.pkg: Added redblack_tree_torture_test package and call.
2012-02-29-23.40.54: src/lib/std/src/pthread-unit-test.pkg: Strip out many log_if debug calls.
2012-02-29-23.34.08: src/lib/test/all-unit-tests.pkg: Reinstate  pthread_unit_test::run ();
2012-02-29-13.06.33: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Change if (pthread_table__global[i]->mode != PTHREAD_IS_VOID) to if (pthread_table__global[i]->mode == PTHREAD_IS_RUNNING). *BLUSH*
2012-02-29-13.00.53: src/c/h/runtime-base.h: Export pth__validate_running_pthreads_count().
2012-02-29-12.41.52: src/c/pthread/pthread-on-posix-threads.c:  Noticed that pth__pthread_exit() and pth__pthread_join() were both decrementing pth__running_pthreads_count.  Exactly one of them should do this, so commented out the logic in pth__pthread_join().  I strongly suspect this is the reason for the erratic segfault/etc pthread bug I have been encountering for the last couple of months.  src/c/heapcleaner/pthread-heapcleaner-stuff.c: To catch any similar bugs, added validate_running_pthreads_count(), and added calls to it in pth__start_heapcleaning() and pth__start_heapcleaning_with_extra_roots().
2012-02-28-13.33.32: src/c/lib/pthread/libmythryl-pthread.c:  For clarity, maintainability and consistency added usual do_ prefix to CFunTable[] fns.
2012-02-28-12.57.37: src/c/pthread/pthread-on-posix-threads.c: Light cleaning.
2012-02-28-12.39.18: For clarity in asm code renamed jump_to_mythryl to run_mythryl_code.
2012-02-28-12.33.56: For clarity and consistency, in asm code renamed ml_go and jmp_lib7 to jump_to_mythryl.
2012-02-26-21.49.16: src/c/h/runtime-base.h: Dropped AGEGROUP0_OVERRUN_TRIPWIRE_BUFFER_SIZE_IN_WORDS from 64 to 16.
2012-02-25-00.18.12: src/c/o/mythryl.c:  Send EOF to compiler at end of script text, fixing hang reported by Hue White.
2012-02-25-00.02.14: src/c/o/mythryl.c: Pipe_Pair typedef:  For clarity, renamed read/write fields to read_fd/write_fd respectively.
2012-02-24-23.43.33: src/c/o/mythryl.c: Moved file-global variables eof_on_childs_stdout, eof_on_childs_stdout into run_subprocess_to_conclusion() because that is in fact the only fn currently using them. (Presumably they used to be shared between fns.)
2012-02-24-23.21.09: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: Update a comment.
2012-02-24-23.14.36: src/lib/compiler/front/basics/source/sourcecode-info.api: Deduced + commented behavior of is_interactive field.
2012-02-24-12.27.51: src/lib/compiler/front/basics/source/sourcecode-info.api: For clarity and (mostly) greppability, renamed  interactive -> is_interactive.
2012-02-22-00.18.20: src/c/heapcleaner/heap-debug-stuff.c: Re-enabled check_agegroup0_overrun_tripwire_buffer().
2012-02-22-00.07.38: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: MAKE_RECORD: Changed to using   allocate_headerless_ro_pointers_chunk__may_heapclean()   to allocate heapspace, so that records too large for agegroup0 will automatically be allocated in agegroup1.
2012-02-21-23.34.49: src/c/heapcleaner/make-strings-and-vectors-etc.c: Generalized allocate_headerless_ro_pointers_chunk__may_heapclean() by making btag a parameter instead of a constant.
2012-02-21-23.20.31: src/c/heapcleaner/make-strings-and-vectors-etc.c: For brevity renamed allocate_headerless_nonempty_*() -> allocate_headerless_*().
2012-02-21-23.01.31: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: MAKE_VECTOR: Changed to using   allocate_headerless_nonempty_ro_vector__may_heapclean()   to allocate heapspace, so that vectors too large for agegroup0 will automatically be allocated in agegroup1.
2012-02-21-22.37.18: src/c/heapcleaner/make-strings-and-vectors-etc.c: Factored allocate_headerless_nonempty_ro_vector__may_heapclean() out of make_nonempty_ro_vector__may_heapclean() to make it available for re-use.
2012-02-21-22.16.42: src/c/heapcleaner/make-strings-and-vectors-etc.c: Factored allocate_headerless_nonempty_rw_vector__may_heapclean() out of make_nonempty_rw_vector__may_heapclean() to make it available for re-use.
2012-02-21-19.38.46: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: MAKE_ASCII_STRING: Changed to using   allocate_headerless_nonempty_ascii_string__may_heapclean()   to allocate heapspace, so that strings too large for agegroup0 will automatically be allocated in agegroup1.
2012-02-21-19.23.30: src/c/heapcleaner/make-strings-and-vectors-etc.c: Split off allocate_headerless_nonempty_ascii_string__may_heapclean() from allocate_nonempty_ascii_string__may_heapclean() so as to make it available for re-use in src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c.
2012-02-21-18.23.20: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: MAKE_EIGHT_BYTE_VALS_VECTOR: Changed to using   allocate_nonempty_biwordslots_vector__may_heapclean()   to allocate heapspace, so that vectors too large for agegroup0 will automatically be allocated in agegroup1.
2012-02-21-18.01.48: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: MAKE_FOUR_BYTE_VALS_VECTOR: Changed to using   allocate_nonempty_wordslots_vector__may_heapclean()   to allocate heapspace, so that vectors too large for agegroup0 will automatically be allocated in agegroup1.
2012-02-21-17.35.37: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean:  Dropped now-unused macro LIST_CONS_CELL_BYTESIZE, which anyhow did not belong in this file.
2012-02-21-17.30.15: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean:  For clarity renamed MAKE_FOUR_BYTE_VALS -> MAKE_FOUR_BYTE_VALS_VECTOR, MAKE_EIGHT_BYTE_VALS -> MAKE_EIGHT_BYTE_VALS_VECTOR.
2012-02-21-15.20.42: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean:  Now that we are guaranteed the agegroup0 buffer is at most half full (=> >=128KB free), simplified the code by eliminating all the now-irrelevant byte-by-byte micro-space-accounting logic.
2012-02-21-04.00.45: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: Added empty_agegroup0_buffer_if_more_than_half_full() call at top of main loop.
2012-02-21-03.48.21: src/c/main/runtime-state.c: Converted save_c_state(), restore_c_state() from taking varargs list to taking Roots* args.
2012-02-20-14.13.40: src/c/main/load-compiledfiles.c: For clarity and consistency renamed compiled_file_list -> compiled_file_list__local.
2012-02-20-14.02.32: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: Changed type declaration of empty_agegroup0_buffer_if_more_than_half_full() from int (wrong) to void.
2012-02-20-13.54.26: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: Added (currently unused) empty_agegroup0_buffer_if_more_than_half_full fn.
2012-02-20-12.34.34: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: More commenting and cleaning.
2012-02-20-11.53.20: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: For clarity renamed I_STR -> MAKE_ASCII_STRING etc. Updated relevant corresponding comments in src/lib/compiler/back/top/main/make-nextcode-literals-bytecode-vector.pkg.
2012-02-20-01.33.20: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: Cleared out lots of DEBUG_LITERALS clutter.
2012-02-20-01.12.18: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: Cleared out lots of debug-print (log_if) clutter.
2012-02-20-01.03.54: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter__may_heapclean: Changed GC_CHECK macro awfulness into a nice normal C fn, ensure_sufficient_space__may_heapclean.
2012-02-20-00.30.47: Tweaking, more comments in src/A.GARBAGE-COLLECTOR.OVERVIEW.
2012-02-19-12.26.47: src/c/main/run-mythryl-code-and-runtime-eventloop.c:  Renamed run_mythryl_function -> run_mythryl_function__may_heapclean and added Roots* arg.   src/c/h/asm-base.h:  For clarity and consistency renamed LIB7_CODE_HDR -> MYTHRYL_CODE_HEADER.
2012-02-19-03.04.50: Hue White reported that compiling without libdisasm0 + libdisasm-dev packages still was not working correctly.  Fixed 12 (!) places where I had #ifdef HAVE_FOO_H in place of correct #if HAVE_FOO_H, also removed hardwired -ldisasm from src/c/o/Makefile.intel32-linux and added   AC_CHECK_LIB([disasm], [x86_init])   to   src/c/Configure.in   so  -ldisasm   will automatically appear when appropriate in   LD_LIBS2 in   src/c/o/Makefile.
2012-02-19-01.07.48: src/c/main/run-mythryl-code-and-runtime-eventloop.c:  Renamed run_mythryl_task_and_runtime_eventloop ->  run_mythryl_task_and_runtime_eventloop__may_heapclean, added Roots* arg.
2012-02-19-00.39.50: src/c/main/load-compiledfiles.c: Renamed register_compiled_file_exports -> register_compiled_file_exports__may_heapclean, added Roots* arg.
2012-02-19-00.20.21: src/c/main/load-compiledfiles.c: Renamed load_compiled_files -> load_compiled_files__may_heapclean, added Roots* arg.
2012-02-18-23.53.03: src/c/main/load-and-run-heap-image.c: Renamed load_and_run_heap_image -> load_and_run_heap_image__may_heapclean and added Roots* arg.
2012-02-18-23.42.23: src/c/machine-dependent/posix-signal.c: Renamed  get_signal_mask -> get_signal_mask__may_heapclean, added Roots* arg.
2012-02-18-23.31.38: src/c/machine-dependent/posix-signal.c: Renamed  list_signals -> list_signals__may_heapclean, added Roots* arg.
2012-02-18-23.22.49: Pervasively changed 3rd arg of RELEASE_MYTHRYL_HEAP() from &arg to NULL wherever arg was dead (almost everywhere). I had orginally thought it safest to just always protect arg, but this time around I decided I disliked artificially extending args liverange, and implying that it was live when it was not.
2012-02-18-21.50.20: src/c/h/runtime-base.h:  Change   #define RELEASE_MYTHRYL_HEAP( pthread, fn_name, arg )	release_mythryl_heap( pthread,  fn_name, &arg )   ->   #define RELEASE_MYTHRYL_HEAP( pthread, fn_name, arg )	release_mythryl_heap( pthread,  fn_name,  arg )
2012-02-18-21.33.58: src/c/pthread/pthread-on-posix-threads.c:  release_mythryl_heap:  To make use of  arg  optional instead of mandatory, changed   pthread->task->protected_c_arg = arg;   ->   if (arg)   pthread->task->protected_c_arg = arg;
2012-02-18-21.16.16: src/c/lib/:  For clarity and consistency renamed   raise-RUNTIME_EXCEPTION.c -> raise-error.c, win32-raise-syserr.c -> raise-error-win32.c
2012-02-18-21.02.59: nsrc/c/lib/: For clarity and comity Cthulhu Almightly renamed  lib7-g.h -> raise-error.h
2012-02-18-20.52.26: src/c/lib/raise-RUNTIME_EXCEPTION.c:  Renamed raise_sys_error -> raise_sys_error__may_heapclean, added ROots* arg.
2012-02-18-11.59.59: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: Added Roots* arg to  make_package_literals_via_bytecode_interpreter__may_heapclean.
2012-02-15-02.08.34: src/lib/src/kludge.api: Commenting.
2012-02-15-01.47.32: src/c/main/runtime-main.c: Delete MYTHRYL_SCRIPT after caching contents in mythryl_script__global. src/c/lib/kludge/libmythryl-kludge.c: Return mythryl_script__global contents vi get_script_name.  src/lib/src/kludge.pkg: Import get_script_name from C level. src/lib/core/internal/mythryld-app.pkg: Check kludge::get_script_name() instead of getenv(MYTHRYL_SCRIPT).
2012-02-15-00.14.00: Created src/lib/src/kludge.pkg to import src/c/lib/kludge/libmythryl-kludge.c into the Mythryl level.
2012-02-14-23.48.04: Created src/c/lib/kludge/ and populated it with src/c/lib/kludge/libmythryl-kludge.c and a Makefile.in.
2012-02-13-13.55.18: src/app/makelib/main/makelib-g.pkg: Tweaked -i switch to set   myp::print_interactive_prompts := TRUE;  as well as  force_interactive := TRUE;
2012-02-13-13.39.39: src/lib/compiler/front/parser/main/mythryl-parser.pkg: For clarity and greppability renamed boolref  interactive -> print_interactive_prompts  and for consistency corresponding control  do_prompts -> print_interactive_prompts.
2012-02-13-13.18.17: src/lib/compiler/front/parser/main/mythryl-parser.pkg: For clarity and greppability renamed boolref  interactive -> print_interactive_prompts  and for consistency corresponding control  do_prompts -> print_interactive_prompts.
2012-02-13-13.13.41: src/lib/compiler/front/parser/main/mythryl-parser.pkg: For clarity and consistency with previous renamed control   quotations  ->  support_smlnj_antiquotes.
2012-02-13-13.08.37: src/lib/compiler/front/parser/main/mythryl-parser.pkg: For clarity and greppability renamed boolref  quotation  ->  support_smlnj_antiquotes.
2012-02-12-17.51.44: src/c/heapcleaner/import-heap.c: Added Roots* arg to  import_heap_image__may_heapclean.
2012-02-12-13.24.44: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  allocate_biwordslots_vector_sized_in_bytes__may_heapclean, make_biwordslots_vector_sized_in_bytes__may_heapclean.
2012-02-12-12.55.48: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  dump_table_as_system_constants_list__may_heapclean.
2012-02-12-12.46.56: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  make_system_constant__may_heapclean.
2012-02-12-03.04.05: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  make_nonempty_rw_vector__may_heapclean, make_nonempty_ro_vector__may_heapclean.
2012-02-12-01.06.10: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  allocate_nonempty_vector_of_one_byte_unts__may_heapclean.
2012-02-12-00.59.29: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  allocate_nonempty_ascii_string__may_heapclean().
2012-02-12-00.28.00: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  make_ascii_strings_from_vector_of_c_strings__may_heapclean().
2012-02-11-23.57.56: src/c/heapcleaner/make-strings-and-vectors-etc.c:  Added Roots* arg to  make_ascii_string_from_c_string__may_heapclean.
2012-02-11-19.28.58: src/c/heapcleaner/make-strings-and-vectors-etc.c: Added Roots* arg to allocate_biwordslots_vector__may_heapclean().
2012-02-11-19.15.20: src/c/heapcleaner/make-strings-and-vectors-etc.c: Added Roots* arg to allocate_nonempty_wordslots_vector__may_heapclean().
2012-02-11-18.52.16: Tweaked new   call_heapcleaner_with_extra_roots()  calls.
2012-02-11-18.41.08: Removed obsoleted varargs-based   call_heapcleaner_with_extra_roots()   code.
2012-02-11-18.26.32: Switched on new version of call_heapcleaner_with_extra_roots. Fixed ~5 typos. So much for proof-reading twice. :-)
2012-02-11-18.09.16: More proof-reading and tidying of previous.
2012-02-11-16.16.45: Proof-reading and tidying of previous.
2012-02-11-15.59.08: Sketched in revised versions of all calls to  call_heapcleaner_with_extra_roots().
2012-02-11-13.45.40: src/c/main/load-compiledfiles.c: Sketch in new-style calls to call_heapcleaner_with_extra_roots.
2012-02-11-13.23.29: Tweaking of previous.
2012-02-11-12.13.14: Started sketching in code for  call_heapcleaner_with_extra_roots  version based on Roots linklist instead of old flaky-by-design varargs insanity.
2012-02-11-02.58.32: src/c/h/runtime-base.h: Added   typedef  struct roots  {  Val* root;  struct roots* next;  }  Roots;
2012-02-11-02.34.27: src/c/h/make-strings-and-vectors-etc.h: Established convention of ending fn names with  __may_heapclean  if they potentially invoke the heapcleaner, directly or indirectly.
2012-02-11-01.20.06: src/c/h/make-strings-and-vectors-etc.h: In the hope of improved clarity renamed  allocate_nonempty_int1_vector -> allocate_nonempty_wordslots_vector, allocate_int2_vector -> allocate_biwordslots_vector etc.
2012-02-11-01.09.17: src/c/h/make-strings-and-vectors-etc.h: Light commenting.
2012-02-11-00.59.27: src/c/h/make-strings-and-vectors-etc.h: Heavy commenting.
2012-02-11-00.27.35: src/c/h/make-strings-and-vectors-etc.h: For completeness converted macro  REF_ALLOC  to inline fn  make_refcell,  although it is currently nowhere used.
2012-02-11-00.14.26: src/c/h/make-strings-and-vectors-etc.h: For sanity and typesafety converted two more macros to inline fns and renamed them: LIB7_AllocWrite -> set_slot_in_nascent_heapchunk, LIB7_Alloc -> commit_nascent_heapchunk.
2012-02-10-03.46.42: src/c/heapcleaner/heapclean-n-agegroups.c:  More of the same.
2012-02-10-03.26.49: src/c/h/heap.h: More of the same.
2012-02-10-03.18.15: src/c/h/heap.h: For improved textural symmetry, renamed OLD_HUGECHUNK* -> SENIOR_HUGECHUNK*, YOUNG_HUGECHUNK* -> JUNIOR_HUGECHUNK*.
2012-02-10-03.09.40: src/c/heapcleaner/heapclean-n-agegroups.c: For clarity and brevity renamed  mark_hugechunk_to_be_forwarded_or_promoted -> mark_hugechunk_as_live.
2012-02-10-03.01.59: src/c/h/heap.h: For clarity renamed  OLD_PROMOTED_HUGECHUNK -> OLD_HUGECHUNK_WAITING_TO_BE_PROMOTED,  YOUNG_FORWARDED_HUGECHUNK -> YOUNG_HUGECHUNK_WAITING_TO_BE_FORWARDED.
2012-02-10-02.35.02: More of the same.
2012-02-10-02.06.04: More of the same.
2012-02-10-02.00.25: More of the same.
2012-02-10-01.43.51: More of the same.
2012-02-10-01.32.20: More of the same.
2012-02-10-01.27.05: More of the same.
2012-02-10-01.03.42: More of the same.
2012-02-10-00.53.40: src/c/h/heap.h: Renamed Hugechunk_Region -> Hugechunk_Quire.
2012-02-10-00.17.19: src/c/h/heap.h: For brevity, clarity and consistency renamed MINIMUM_HUGECHUNK_RAM_REGION_BYTESIZE -> MINIMUM_HUGECHUNK_QUIRE_BYTESIZE.
2012-02-09-23.40.23: src/c/h/heap.h: For clarity, consistency and brevity renamed  weak_pointers_forwarded_during_heapcleaning -> weakrefs_forwarded_during_heapcleaning.
2012-02-09-13.31.43: src/c/heapcleaner/heapclean-n-agegroups.c: More desultory commenting and renaming for clarity.
2012-02-08-19.40.47: src/c/h/runtime-configuration.h: For clarity renamed DEFAULT_OLDEST_AGEGROUP_KEEPING_IDLE_FROMSPACE_BUFFERS -> DEFAULT_OLDEST_AGEGROUP_RETAINING_FROMSPACE_SIBS_BETWEEN_HEAPCLEANINGS and added a long comment block.
2012-02-08-17.58.52: src/c/main/timers.c: For clarity and consistency renamed start_cleaning_timer -> start_heapcleaning_timer, stop_cleaning_timer -> stop_heapcleaning_timer.
2012-02-08-17.46.29: src/c/heapcleaner/heapclean-n-agegroups.c: More commenting.
2012-02-08-05.14.38: src/c/heapcleaner/heapclean-n-agegroups.c: More commenting -- set_up_empty_tospace_buffers() appears to fully decrypted at this point.
2012-02-08-04.24.06: src/c/h/runtime-base.h: Eliminated SUCCESS and FAILURE, which were just nonstandard synonyms for TRUE and FALSE.
2012-02-08-04.08.42: src/c/heapcleaner/heapcleaner-stuff.c: For clarity renamed ap -> sib.
2012-02-08-04.01.29: src/c/heapcleaner/heapcleaner-stuff.c: For clarity renamed  allocate_and_partition_an_agegroup -> set_up_tospace_sib_buffers_for_agegroup.
2012-02-08-01.01.29: src/c/h/heap.h: For clarity renamed requested_sib_buffer_bytesize -> requested_extra_free_bytes.
2012-02-08-00.37.59: src/c/heapcleaner/heapclean-n-agegroups.c: More renaming for clarity.
2012-02-08-00.21.58: src/c/h/heap.h: Cleaning, commenting and griping.
2012-02-08-00.11.28: src/c/h/heap.h: For clarity and cleanliness, moved the tospace_* fields into a tospace substruct and the fromspace_* fields into a fromspace substruct.
2012-02-07-23.55.48: src/c/h/heap.h: For clarity and consistency renamed  tospace -> tospace_start,  fromspace -> fromspace_start.
2012-02-07-23.32.13: src/c/heapcleaner/heapclean-n-agegroups.c: More of the same.
2012-02-07-23.22.43: Fix previous check-in, which was bad. (Patience is a virtue!)
2012-02-07-23.20.23: src/c/heapcleaner/heapclean-n-agegroups.c: For clarity renamed  cleanings -> younger_agegroup_heapcleanings_since_last_checked.
2012-02-07-23.18.12: src/c/heapcleaner/heapclean-n-agegroups.c: For clarity renamed  old_heapcleanings_count -> younger_agegroup_heapcleanings_count.
2012-02-07-23.10.55: src/c/heapcleaner/heapclean-n-agegroups.c: Killed a goto. Why is it that functional-programming profs write the dirtiest, least-functional C?
2012-02-07-22.56.11: src/c/h/heap.h: For brevity and consistency renamed  next_tospace_word_to_allocate -> tospace_used_end,  next_word_to_sweep_in_tospace -> tospace_swept_end,  end_of_fromspace_oldstuff     -> fromspace_oldstuff_end.
2012-02-07-22.12.56: src/c/h/heap.h:  For brevity and consistency renamed  tospace_ram_region -> tospace_quire,  fromspace_ram_region -> fromspace_quire,  saved_fromspace_ram_region -> retained_fromspace_quire.
2012-02-07-20.30.27: src/c/heapcleaner/heapclean-n-agegroups.c: For clarity, consistency and St George, renamed this_min_bytesize -> bytes_of_youngstuff.
2012-02-07-14.04.28: src/c/h/heap.h: For clarity and consistency renamed last_cleaning_count_of_younger_agegroup -> last_heapcleanings_count_of_younger_agegroup.
2012-02-07-13.57.23: Previous check-in was broken; this fixes it.
2012-02-07-13.52.01: src/c/h/heap.h: For clarity and consistency renamed agegroup0_cleanings_done -> agegroup0_heapcleanings_count.
2012-02-07-13.47.15: src/A.GARBAGE-COLLECTOR.OVERVIEW: Typetypetype.
2012-02-07-13.24.02: src/c/h/heap.h: For clarity renamed agegroup.ratio -> agegroup.target_heapcleaning_frequency_ratio.
2012-02-07-13.11.24: src/c/h/heap.h: For clarity renamed agegroup.cleanings -> agegroup.heapcleanings_count.
2012-02-07-13.01.41: src/A.GARBAGE-COLLECTOR.OVERVIEW, src/A.HEAP.OVERVIEW: Added and reworked much text. (These two may need to be combined -- it is hard to separate the discussions.)
2012-02-07-02.06.58: src/c/h/heap.h: Commented sib.next_word_to_sweep_in_tospace too, for good measure.
2012-02-07-01.57.23: src/c/h/heap.h: Commented end_of_fromspace_oldstuff after reverse engineering its purpose.
2012-02-07-01.27.28: src/c/heapcleaner/heapclean-n-agegroups.c: forward_chunk:  For clarity renamed  len -> size_in_words.
2012-02-07-01.20.19: src/c/heapcleaner/heapclean-n-agegroups.c: forward_chunk: For clarity renamed  sib -> to_sib.
2012-02-07-01.09.48: src/c/h/heap.h: For clarity renamed FOLLOW_FWDCHUNK -> FOLLOW_FORWARDING_POINTER.
2012-02-07-00.55.46: src/c/h/sibid.h: For clarity renamed  RO_POINTER_SIB -> RO_POINTERS_SIB  etc.
2012-02-05-12.18.48: src/c/o/mythryl.c: Added a comment or two.
2012-02-05-03.01.33: src/c/o/mythryl.c: kernel_thinks_child_is_dead: Fixed two backwards-boolean-logic blunders caught during proof-reading.
2012-02-05-02.36.20: src/c/o/mythryl.c: Added a new fn kernel_thinks_child_is_dead(), changed sigterm_handler() to not attempt killing child if kernel_thinks_child_is_dead(). This might(?) resolve an issue Hue White reported, namely occasionally getting  Unable to kill child in response to SIGTERM  complaints from compiler.
2012-02-05-01.23.06: src/app/makelib/main/makelib-g.pkg: Merge in Hue White's patch supporting -i commandline flag to force interactive mode.
2012-02-03-23.29.35: src/c/heapcleaner/heapclean-n-agegroups.c: Minor tidying and commenting.
2012-02-03-13.32.49: src/c/lib/pthread/libmythryl-pthread.c: Add three (Val_Sized_Unt) casts to suppress compiler warnings.
2012-02-03-13.23.43: src/c/heapcleaner/heapclean-n-agegroups.c: Minor tidying and commenting.
2012-02-02-14.47.00: src/c/h/make-strings-and-vectors-etc.h: Replaced bloodybedamned devilinspired lunatic REC_ALLOC2 macro by nice clean sane readable make_two_slot_record inline fn.
2012-02-01-14.29.37: src/lib/src/lib/thread-kit/src/core-thread-kit/timeout-mailop.pkg:  Bugfix: Changed now = s::get_approximate_time (); -> now = time::get_current_time_utc (); because test_sleep_for() in threadkit-unit-test.pkg was returning a millisecond early (99ms on a 100ms sleep). (Using approximate_time is conservative for waking up threads but not for putting them to sleep.)
2012-02-01-04.28.44: src/c/heapcleaner/heapclean-n-agegroups.c: trim_heap: Replaced heap->agegroup0_master_buffer_bytesize by task->heap_allocation_buffer_bytesize.
2012-02-01-04.03.36: src/c/heapcleaner/make-strings-and-vectors-etc.c: Replaced task->heap->agegroup0_master_buffer_bytesize by task->heap_allocation_buffer_bytesize in three places.
2012-02-01-03.52.07: src/c/h/heap.h: Allocate overrun tripwire buffer in HEAP_ALLOCATION_LIMIT_SIZE macro, rewrite HEAP_ALLOCATION_LIMIT macro in terms of new  task->heap_allocation_buffer,task->heap_allocation_buffer_bytesize fields.
2012-02-01-02.42.17: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: More of the same.
2012-02-01-02.17.34: src/c/heapcleaner/heapclean-agegroup0.c: Switched to using agegroup0_usedspace_in_words(task).
2012-02-01-02.10.45: src/c/heapcleaner/heap-debug-stuff.c: Replace task->heap->agegroup0_master_buffer with task->heap_allocation_buffer.
2012-02-01-02.05.24: src/c/heapcleaner/heap-debug-stuff.c: Replace task->heap->agegroup0_master_buffer with task->heap_allocation_buffer.
2012-02-01-01.57.11: src/c/heapcleaner/export-heap.c: Replace heap->agegroup0_master_buffer_bytesize / MAX_PTHREADS; with agegroup0_buffer_size_in_bytes(task).
2012-02-01-01.37.59: src/c/heapcleaner/datastructure-unpickler.c:  Replace task->heap->agegroup0_master_buffer_bytesize with agegroup0_buffer_size_in_bytes(task).
2012-02-01-01.31.45: src/c/heapcleaner/datastructure-pickler.c: Replace heap->agegroup0_master_buffer_bytesize with agegroup0_buffer_size_in_bytes(task).
2012-02-01-01.23.19: src/c/heapcleaner/call-heapcleaner.c: Replaced heap->agegroup0_master_buffer with task->heap_allocation_buffer.
2012-02-01-01.16.11: src/c/heapcleaner/datastructure-pickler-cleaner.c: More of the same.
2012-02-01-00.52.03: src/c/heapcleaner/call-heapcleaner.c: reset_heap_allocation_limit_for_software_generated_periodic_events: Replace heap->agegroup0_master_buffer by task->heap_allocation_buffer.
2012-02-01-00.44.25: src/c/heapcleaner/call-heapcleaner.c: Switch to using   agegroup0_buffer_size_in_bytes( task )   in place of   agegroup0_master_buffer_bytesize.
2012-02-01-00.32.08: src/c/h/heap.h: Added inline fns agegroup0_usedspace_in_bytes, agegroup0_usedspace_in_words, agegroup0_buffer_size_in_bytes, agegroup0_buffer_size_in_words, based on new task->heap_allocation_buffer field.
2012-02-01-00.17.45: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Initialize new task->heap_allocation_buffer field.
2012-01-31-23.49.32: src/c/h/runtime-base.h: struct task: Added   Val* heap_allocation_buffer;  field. (Currently uninitialized and unused.)
2012-01-31-23.38.02: For brevity, finally bit the bullet and pervasively renamed  multipage_ram_region -> quire.
2012-01-31-23.25.20: src/c/h/heap.h:  As a first step toward sanity, renamed agegroup0_buffer -> agegroup0_master_buffer, agegroup0_buffer_bytesize -> agegroup0_master_buffer_bytesize, since the actual per-pthread buffers are now allocated from this buffer, rather than it being used directly.
2012-01-31-22.03.38: src/c/h/heap.h:  Added inline fns  agegroup0_freespace_in_bytes(),  agegroup0_freespace_in_words().
2012-01-31-13.11.58: Minor commenting.
2012-01-31-03.33.35: src/c/heapcleaner/heapclean-agegroup0.c: Minor tidying.
2012-01-31-03.14.00: src/c/heapcleaner/heapclean-agegroup0.c: Minor tidying.
2012-01-31-02.53.58: src/c/heapcleaner/heapclean-agegroup0.c: Minor tidying.
2012-01-31-02.39.57: src/c/heapcleaner/heapclean-agegroup0.c: Minor tidying and commenting.
2012-01-31-02.08.06: src/c/h/sibid.h: For clarity and consistency renamed  NEWSPACE_SIBID -> AGEGROUP0_SIBID.
2012-01-31-01.59.02: Minor tidying.
2012-01-31-01.06.22: src/c/heapcleaner/heapclean-agegroup0.c: Changed comment char from # -> //  (*blush*!), for clarity and consistency renamed weak_pointers_forwarded_during_cleaning -> weak_pointers_forwarded_during_heapcleaning.
2012-01-30-23.56.17: src/c/h/sibid.h: For clarity and consistency renamed  *_ILK -> *_SIB.
2012-01-30-23.32.02: src/c/heapcleaner/heapclean-agegroup0.c: For consistency and brevity, pervasively renamed  agegroup_1 -> agegroup1.
2012-01-22-14.14.18: doc/tex/chapter-best-practices.tex, src/lib/std/src/nj/heap-debug.api: Fix nits uncovered by 'make book'.
2012-01-22-02.41.27: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: Commenting and cleaning.
2012-01-22-01.46.20: src/lib/src/scripting-unit-test.pkg: After the previous change, two scripts now return different strings. Bug? You decide. For the moment I have fixed this by defining the new result to be the correct result for the test.
2012-01-22-01.22.33: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: Post-victory cleanup.
2012-01-22-01.06.44: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.pkg: extract_toplevel_declarations: Added to pattern a raw::SOURCE_CODE_REGION_FOR_DECLARATION which I overlooked first time around. *blush*  But now it works.  By Grabthar's Hammer, the bloody thing works! :-)
2012-01-22-00.31.28: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: prompt_read_evaluate_and_print_one_toplevel_mythryl_expression: Replaced  [ raw_declaration ]   with   (rsj::extract_toplevel_declarations  raw_declaration)   -- the point of the preceding code transforms.
2012-01-22-00.17.09: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg:  Added package rsj = raw_syntax_junk.
2012-01-22-00.07.18: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: Moved guts of prompt_read_evaluate_and_print_one_toplevel_mythryl_expression() into new fn evaluate_and_print_toplevel_mythryl_declaration(), interposed a new fn evaluate_and_print_toplevel_mythryl_declarations() to interate over the (currently always length-one) list of toplevel raw-syntax declarations.
2012-01-21-23.49.06: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: Some commenting etc.
2012-01-21-23.36.28: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.pkg: extract_toplevel_declarations: Coded up first-cut implementation.
2012-01-21-22.52.51: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.pkg: Squish more bloodybedamned 'include' statements -- syntactic cockroaches.
2012-01-21-22.24.38: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.pkg:  Tidying.
2012-01-21-22.14.48: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.pkg:  extract_toplevel_declarations():  Commenting.
2012-01-21-21.52.52: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.api:  Add  extract_toplevel_declarations().
2012-01-21-21.20.37: src/lib/compiler/front/parser/raw-syntax/raw-syntax-junk.api: Renamed exn_id -> exception_id for the greater glory of God, Country, Saint George and Maranatha Peanut Butter.
2012-01-21-21.00.59: Minor tidying.
2012-01-21-02.21.48: src/c/lib/date/strftime.c: Changed size+1 -> size, fixing a bug I introduced 2011-11-19.
2012-01-21-02.02.50: Tidying.
2012-01-21-01.55.49: src/lib/core/internal/mythryld-app.pkg: main: Added   file::set_logger_to  (file::LOG_TO_FILE "unknown.log");  call because attempts to log during script runs were drawing attempt-to-write-to-closed-stream errors.
2012-01-21-01.13.22: Fix compile errors overlooked in previous check-ins. *blush*
2012-01-20-15.28.54: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: read_eval_print_loop: For clarity changed arg from tuple to record { sourcecode_info, keep_looping }.
2012-01-20-15.19.39: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: with_error_handling: For clarity, changed first curried arg from Bool to { treat_as_user: Bool }.
2012-01-20-15.04.46: Minor tidying.
2012-01-20-14.50.41: src/lib/core/internal/mythryld-app.pkg: For clarity, renamed  script -> script_name.
2012-01-20-14.14.21: src/lib/std/src/nj/runtime-profiling-control.pkg: For clarity renamed  foo__profile_index -> foo__cpu_user_index for all relevant foo.
2012-01-20-13.37.44: src/lib/std/src/nj/runtime-profiling-control.pkg: For clarity renamed  foo_profile_index -> foo__profile_index for all relevant foo.
2012-01-20-13.22.01: src/lib/std/src/nj/runtime-profiling-control.pkg: For clarity renamed  runtime_index -> in_runtime_profile_index (etc).
2012-01-03-05.19.58: src/c/heapcleaner/heap-debug-stuff.c: check_agegroup0_overrun_tripwire_buffer: Disabled this check until I have time to get back to it.
2012-01-02-03.15.18: src/c/heapcleaner/make-package-literals-via-bytecode-interpreter.c: make_package_literals_via_bytecode_interpreter:  Rename stk -> stack throughout. (Where do these people come from?)
2012-01-02-03.08.47: src/c/heapcleaner/heap-debug-stuff.c:  dump_ramlog__guts:  Fix the *other* place where I had AGEGROUP0_OVERRUN_TRIPWIRE_BUFFER_SIZE_IN_WORDS instead of RAMLOG_ENTRIES.
2012-01-01-14.12.33: src/c/heapcleaner/heap-debug-stuff.c:  dump_ramlog__guts:  Bugfix: Had AGEGROUP0_OVERRUN_TRIPWIRE_BUFFER_SIZE_IN_WORDS where RAMLOG_ENTRIES was needed.
2012-01-01-14.02.10: Makefile: summary:  To reduce console clutter changed   @ls ... to  @find . -type f -maxdepth 1 -name 'dump*log' -ls
2012-01-01-13.53.56: Makefile: summary:  Added   @ls -l dump*log   to reduce chance of missing tripwire dumps.
2012-01-01-13.49.05: make_package_literals_via_bytecode_interpreter: Added check_agegroup0_overrun_tripwire_buffer() calls at top and bottom because a pair of Heisenbug dumplogs seemed to finger it as a tripwirebuffer-clobbering culprint. (The Heisenbug promptly vanished, of course...)
2012-01-01-13.31.53: src/c/heapcleaner/heap-debug-stuff.c: dump_ramlog__guts: Switched to display in reverse chronological order, which is handier in practice because one usually cares about only the last couple of calls, and arrives at that dumplog section by searching for the header.
2012-01-01-13.24.28: src/c/heapcleaner/heap-debug-stuff.c: dump_gen0_tripwire_buffers__guts: Suppressed minor type complaints due to previous.'
2011-12-31-13.52.22: src/c/heapcleaner/heap-debug-stuff.c: dump_gen0_tripwire_buffers__guts: Switched to display dripwire buffer using *both* hexdump_to_file() and list-of-hex-ints formats. Life is short -- live large! :-)
2011-12-31-12.48.54: src/c/heapcleaner/heap-debug-stuff.c: dump_gen0_tripwire_buffers__guts: Switched to using hexdump_to_file() to display tripwire buffer contents.
2011-12-31-12.30.32: src/c/heapcleaner/heap-debug-stuff.c: check_agegroup0_overrun_tripwire_buffer: Corrected off-by-one-error in reporting number of tripwire buffer words overwritten.
2011-12-31-12.20.00: src/c/heapcleaner/heap-debug-stuff.c: open_heapdump_logfile: Dropped a redundant 'dump' from prefix.
2011-12-30-16.53.11: src/c/machine-dependent/posix-arithmetic-trap-handlers.c: Minor polishing.
2011-12-30-16.11.40: src/c/mythryl-config.h: Dropped HAVE_LIBDISASM in favor of:  src/c/Configure.in:  Added   AC_CHECK_HEADERS([libdis.h])   src/c/heapcleaner/heap-debug-stuff.c:  Made use of libdisasm conditional on HAVE_LIBDIS_H from src/c/config.h in place of HAVE_LIBDISASM. Virtue triumphs over laziness! :-)
2011-12-30-15.28.49: src/c/heapcleaner/heap-debug-stuff.c: Made libdisasm stuff conditional on HAVE_LIBDISASM.
2011-12-30-14.15.24: src/c/machine-dependent/posix-arithmetic-trap-handlers.c: Modified arithmetic_fault_handler() to call dump_all() before die()ing.
2011-12-30-14.00.48: src/c/heapcleaner/heap-debug-stuff.c:  check_agegroup0_overrun_tripwire_buffer:  Changed to call to   dump_all_but_hugechunks_contents()   before die()ing.
2011-12-30-13.51.46: src/lib/std/src/nj/heap-debug.api: Added dump_gen0_tripwire_buffers.
2011-12-30-13.43.21: src/c/heapcleaner/heap-debug-stuff.c:  Added dump_gen0_tripwire_buffers().
2011-12-30-13.12.15: src/c/heapcleaner/heap-debug-stuff.c:  Tidying.
2011-12-30-13.01.09: src/lib/std/src/nj/heap-debug.api: Split dump_huge() into dump_hugechunks_contents() + dump_hugechunks_summary();  Changed dump_all_but_huge() to dump_all_but_hugechunks_contents().
2011-12-30-05.15.01: src/lib/std/src/nj/heap-debug.api:  Added dump_all(), dump_all_but_huge().
2011-12-30-04.48.08: src/lib/std/src/nj/heap-debug.api: Added dump_gen0s().
2011-12-30-02.54.22: src/lib/std/src/nj/heap-debug.api:  Added dump_ramlog().
2011-12-30-02.48.44: src/c/h/runtime-base.h:  #define ENTER_MYTHRYL_CALLABLE_C_FN(fn_name)    do { note_fncall_in_ramlog(task, fn_name); } while(0)
2011-12-30-02.38.40: src/c/heapcleaner/heap-debug-stuff.c: Added dump_ramlog().
2011-12-29-20.17.32: src/c/h/runtime-base.h: Sketched in first-cut version of ramlog.
2011-12-29-19.53.23: Indented ENTER_MYTHRYL_CALLABLE_C_FN calls to reduce visual clutter.
2011-12-29-19.34.18: Pervasively added ENTER_MYTHRYL_CALLABLE_C_FN() calls where appropriate, to the tune of about 267 places.
2011-12-29-13.52.48: src/c/h/runtime-base.h:  Added   ENTER_MYTHRYL_CALLABLE_C_FN   macro, with null definition. (Decided a matching ENTER_MYTHRYL_CALLABLE_C_FN macro would be just clutter for now, and resisted the temptation.)
2011-12-28-20.25.02: src/A.GDB-ON-MYTHRYL-SCRIPTS.OVERVIEW:  Updated again.
2011-12-28-19.53.55: src/A.GDB-ON-MYTHRYL-SCRIPTS.OVERVIEW:  Updated.
2011-12-28-19.19.02: src/A.GDB-ON-MYTHRYL-SCRIPTS.OVERVIEW: Created, to document the process, filled with first-cut description.  src/c/lib/heap/libmythryl-heap.c: Removed the 'static' qualifiers from breakpoint_0 ... breakpoint_9 fns so they would be visible to gdb.  *blush*
2011-12-28-02.39.51: src/lib/compiler/toplevel/interact/read-eval-print-loop-g.pkg: read_eval_print_from_script: Actually use supplied file_name arg. :-)
2011-12-28-00.33.15: src/lib/core/internal/mythryld-app.pkg, src/lib/compiler/toplevel/interact/read-eval-print-loops-g.pkg, src/lib/compiler/toplevel/interact/read-eval-print-loops.api:  Change read_eval_print_from_script arg from Void to String ("<stdin>" else filename for script).
2011-12-28-00.03.40: src/c/o/mythryl.c: Dropped support for the MYTHRYL_MODE=SCRIPT environment var replaced by MYTHRYL_SCRIPT=<stdin>.
2011-12-27-23.47.28: Deleted src/c/o/mythryl.c.bad-idea to reduce clutter.  src/c/o/mythryl.c: Changed from MYTHRYL_MODE=TRUE -> MYTHRYL_SCRIPT=<stdin> for increased (potential) flexibility.
2011-12-27-23.33.20: src/lib/core/internal/mythryld-app.pkg: Added support for MYTHRYL_SCRIPT=<stdin> as a functional replacement for MYTHRYL_MODE=SCRIPT.
2011-12-27-22.59.48: src/c/o/Makefile.intel32-linux: Added -g to CFLAGS to support use with gdb -- runtime penality is reputed to be minimal.
2011-12-27-22.01.53: src/c/main/runtime-main.c: Dropped support for 'mythryl-runtime-ia32', obsolete name for 'mythryl-runtime-intel32'.
2011-12-27-21.45.59: src/c/main/runtime-main.c: Dropped support for 'runtime7', obsolete name for 'mythryl-runtime-intel32'.
2011-12-27-20.20.49: src/app/makelib/main/makelib-g.pkg, src/app/makelib/tools/main/private-makelib-tools.pkg: Dropped support for obsoleted .make6 file extension (replaced by .lib and .sublib).
2011-12-27-13.43.03: src/lib/std/src/nj/heap-debug.api: Added dump_whatever(), breakpoint_0() ... breakpoint_1().
2011-12-27-13.01.08: src/c/lib/heap/libmythryl-heap.c: Added do_dump_whatever(), do_breakpoint_0(), ... , do_breakpoint_9().
2011-12-27-02.13.45: Debian packages libdisasm0 + libdisasm-dev are now required to build and link Mythryl.  Moved hexdump-if.h to src/c/h/hexdump-if.h. Move hexdump-if.c to src/c/heapcleaner/hexdump-if.c.  In src/c/heapcleaner/heap-debug-stuff.c changed dump_hugechunk_stuff() to disassemble dumped code via libdisasm0.
2011-12-26-01.17.21: src/c/heapcleaner/heap-debug-stuff.c: dump_hugechunk: Change to show absolute (rather than relative) memory addresses in hexdumps.
2011-12-25-23.55.46: src/c/heapcleaner/heap-debug-stuff.c: Hexdump contents of hugechunks (==code).
2011-12-25-23.40.20: src/c/lib/socket/hexdump-if.c: Added hexdump_to_file() call.
2011-12-25-23.19.17: src/c/lib/socket/hexdump-if.c: hexdump_if() was hardwired to write to the int fd log_if_fd.  Split off the core logic into a more use-agnostic fn hexdump(), and changed hexdump_if() to be a simple wrapper for hexdump().
2011-12-25-10.41.28: src/c/heapcleaner/heap-debug-stuff.c: dump_hugechunk_stuff: Added hugechunk_region listing.
2011-12-24-15.48.10: src/lib/std/src/nj/heap-debug.api:  Added dump_hugechunk_stuff().
2011-12-24-02.41.47: src/c/heapcleaner/heap-debug-stuff.c: More output tweaking for improved readability.
2011-12-24-02.05.06: Renamed change-log -> change-history because I absentmindedly nuked change-log by doing a   rm *log.
2011-12-24-01.55.44: src/c/heapcleaner/heap-debug-stuff.c: dump_pair_sib: Added newline between each pair for improved readability.
2011-12-24-01.42.36: src/c/heapcleaner/: Did   tr '\r' '\n'   on src/c/heapcleaner/heapclean-agegroup0.c, which also seemed to have suffered Mac trauma.
2011-12-24-01.27.41: src/c/heapcleaner/heap-debug-stuff.c, src/lib/std/src/nj/heap-debug.api: Renamed dump_gen1 -> dump_gens, tweaked it to dump generations 1-N (last active) instead of just gen1.
2011-12-24-00.32.09: src/c/heapcleaner/heap-debug-stuff.c: First-cut implementions of dump_record_sib(), dump_pair_sib(), dump_string_sib(), dump_vector_sib().
2011-12-23-23.47.14: src/c/heapcleaner/heap-debug-stuff.c: First-cut code to dump gen1 header stuff.
2011-12-23-22.42.20: src/lib/std/src/nj/heap-debug.api, src/c/heapcleaner/heap-debug-stuff.c: Added framework for dump_gen1() parallel to dump_gen0().
2011-12-23-19.13.33: src/c/heapcleaner/heap-debug-stuff.c: Tweaking.
2011-12-23-18.18.29: src/c/heapcleaner/heap-debug-stuff.c: Tweaking.
2011-12-23-14.29.49: src/lib/std/src/nj/weak-reference.api: Renaming for clarity.  src/c/heapcleaner/heap-debug-stuff.c:  log_gen0: Added blank lines between records for readability.
2011-12-23-13.48.54: src/c/heapcleaner/heap-debug-stuff.c: Rewrote to write dumps to separate files, to improve readability of main logfile and facilitating before-and-after grepping of dumps.
2011-12-23-11.26.57: Did   tr '\r' '\n'   on   src/c/lib/heap/libmythryl-heap.c.  (Someone must have been editing it on a Mac at some point.)
2011-12-23-01.31.14: src/lib/std/src/nj/heap-debug.api:  Added disable_debug_logging(), enable_debug_logging().
2011-12-23-01.09.54: src/lib/std/src/nj/heap-debug.api:  Added log_gen0().
2011-12-23-00.53.35: src/lib/std/src/nj/heap-debug.api: Added log_task().
2011-12-23-00.35.43: src/c/lib/heap/libmythryl-heap.c: Added log_task().
2011-12-23-00.16.32: src/c/lib/heap/libmythryl-heap.c: More minor cleanup.
2011-12-22-21.09.39: Created src/lib/std/src/nj/heap-debug.api, populated it by moving check_agegroup0_overrun_tripwire_buffer over from src/lib/std/src/nj/heapcleaner-control.api, where it did not really belong.
2011-12-22-20.51.03: Renamed src/c/heapcleaner/heapcleaner-debug-stuff.c -> src/c/heapcleaner/heap-debug-stuff.c because it is more about the heap than the heapcleaner.
2011-12-22-18.15.57: c/lib/heap/libmythryl-heap.c: More of the same.
2011-12-22-17.35.38: c/lib/heap/libmythryl-heap.c: Folded all the fun-per-file stuff into this file for ease of reading and to reduce global namespace clutter.
2011-12-22-12.40.06: Trivial fix to previous checkin.
2011-12-22-12.35.31: Established src/c/heapcleaner/heapcleaner-debug-stuff.c as a forward firebase for the Heisenbug Wars, seeding it with log_task(), zero_agegroup0_overrun_tripwire_buffer() and check_agegroup0_overrun_tripwire_buffer() from src/c/heapcleaner/heapcleaner-stuff.c.
2011-12-21-12.54.30: src/c/lib/pthread/libmythryl-pthread.c: mutex_trylock: Fixed trivial bug introduced during previous change.
2011-12-21-11.41.11: src/c/lib/pthread/libmythryl-pthread.c: Added more log_if()ing for debug support.
2011-12-20-20.51.22: Replaced Heisenbug-hunt calls to heapcleaner_control::clean_heap with calls to heapcleaner_control::check_agegroup0_overrun_tripwire_buffer because I was calling the former only to trigger the latter, which is a much less disruptive way of tracking heap corruption problems.
2011-12-20-20.15.33: src/lib/std/src/nj/heapcleaner-control.pkg: Added check_agegroup0_overrun_tripwire_buffer(), completing Mythryl-level access to src/c/lib/heap/check-agegroup0-overrun-tripwire-buffer.c.
2011-12-20-19.37.32: src/c/lib/heap/check-agegroup0-overrun-tripwire-buffer.c: Created, to provide Mythryl-level access to new check_agegroup0_overrun_tripwire_buffer() call in src/c/heapcleaner/heapcleaner-stuff.c.
2011-12-19-23.56.41: Minor Heisenbug-trap tuning and commenting.
2011-12-19-17.48.38: src/c/heapcleaner/heapcleaner-stuff.c: Move log_task() here from src/c/heapcleaner/heapclean-agegroup0.c, export it for general use.
2011-12-19-17.40.51: src/c/heapcleaner/heapcleaner-stuff.c: zero_out_agegroup0_overrun_tripwire_buffer(): Call log_if after zeroing out buffer.
2011-12-19-17.33.00: src/c/heapcleaner/heapcleaner-stuff.c: Moved zero_out_agegroup0_overrun_tripwire_buffer() and validate_agegroup0_overrun_tripwire_buffer() over from src/c/heapcleaner/pthread-heapcleaner-stuff.c.
2011-12-19-17.17.21: src/c/heapcleaner/pthread-heapcleaner-stuff.c: To watch for possible heap_allocation_limit overrun, added zero_out_agegroup0_overrun_tripwire_buffer() and validate_agegroup0_overrun_tripwire_buffer().
2011-12-19-12.56.37: src/c/heapcleaner/heapclean-agegroup0.c: Added log_task() to aid in Heisenbug hunting.
2011-12-13-17.48.24: src/lib/std/src/pthread-unit-test.pkg:  Added verify_that_basic_condition_variable_stuff_works () fn + call.
2011-12-13-04.17.24: src/c/lib/pthread/libmythryl-pthread.c: Was failing to update condvar->state appropriately in condition-variable fns.  Fixed.
2011-12-13-02.28.10: src/lib/std/src/pthread-unit-test.pkg: Added script and C code documenting current condition-variable problem.
2011-12-12-00.45.39: src/c/main/runtime-main.c: Added  Bool running_script  variable.
2011-12-12-00.05.21: src/c/main/runtime-main.c: Added  Bool saw_shebang_line  variable.
2011-12-11-23.44.14: src/c/heapcleaner/heapcleaner-initialization.c: For clarity and consistency renamed handle_cleaner_commandline_arguments -> handle_heapcleaner_commandline_arguments.
2011-12-11-23.33.30: For consistency and clarity, pervasively renamed mythryl-runtime-ia32 -> mythryl-runtime-intel32.
2011-12-11-18.47.58: src/c/main/runtime-main.c: Added logic to recognize /mythryl-runtime-intel32 as equivalent to mythryl-runtime-ia32 (the former is more consistent with the codebase generally).
2011-12-11-15.28.59: src/c/pthread/pthread-on-posix-threads.c:  release_mythryl_heap: Was calling pthread_cond_signal() where pthread_cond_broadcast() was intended.  Fixed.
2011-12-11-12.55.44: README: Updated per Michele Bini's listpost.
2011-12-06-02.03.18: src/lib/std/src/pthread-unit-test.pkg:  Added verify_barrier_wait_return_value () fn + call.
2011-12-06-01.50.50: src/lib/std/src/pthread-unit-test.pkg:  Added verify_that_basic_barrier_wait_works () fn + call.
2011-12-06-01.23.52: src/c/lib/pthread/libmythryl-pthread.c: Was failing to update barrier->state appropriately in barrier fns.  Fixed.
2011-12-06-00.14.39: src/lib/std/src/pthread.pkg: try_mutex:  Had the boolean condition backwards.  Fixed.
2011-12-05-23.45.23: src/c/pthread/pthread-on-posix-threads.c: pth__pthread_join was incorrectly failing if thread-to-join had pthread->mode == PTHREAD_IS_VOID. Fixed.
2011-12-05-13.49.07: src/c/lib/pthread/libmythryl-pthread.c: Mutex fns were failing to update mutex->state appropriately on success. Fixed.
2011-12-05-04.25.49: src/A.PTHREAD-SUPPORT.OVERVIEW: Added idea of having threadkit scheduler publish runnable-threads count and next-wakeup-time for sleeping threads, so that fd_input_pthread can stop generating 100Hz timeslicing events when not needed.
2011-12-05-01.45.54: src/lib/std/src/pthread-unit-test.pkg: Added verify_that_basic_spawn_and_join_are_working().
2011-12-04-17.11.40: src/A.PTHREAD-SUPPORT.OVERVIEW: Add idea of using a timeout in the fd_input_pthread to drive threadkit timeslicing. This can give us accurate 100Hz timeslicing (and an approximate time-of-day value) without messing with SIGALRM or subprocesses.
2011-11-30-17.52.35: src/lib/core/internal/mythryl-compiler-version.pkg: Bumped version to 6.1.0 in honor of pthread support coding completion.
2011-11-29-20.24.26: src/c/pthread/pthread-on-posix-threads.c: pth__barrier*(): Added RELEASE/RECOVER wrappers around the syscalls.
2011-11-29-19.55.50: src/c/pthread/pthread-on-posix-threads.c: pth__condvar*(): Added RELEASE/RECOVER wrappers around the syscalls.
2011-11-29-19.31.33: src/c/pthread/pthread-on-posix-threads.c: pth__mutex*(): Added RELEASE/RECOVER wrappers around the syscalls.
2011-11-29-03.26.17: src/c/pthread/pthread-on-posix-threads.c:  Because these two are all I intend to use at the C level, renamed  pth__pthread_mode_mutex -> pth__mutex  and  pth__pthread_mode_condvar -> pth__condvar.
2011-11-29-03.05.57: src/c/pthread/pthread-on-posix-threads.c: pth__pthread_exit(), pth__pthread_join(): Update task->pthread->mode and pth__running_pthreads_count and broadcast the statechange.
2011-11-29-02.52.17: src/c/heapcleaner/make-strings-and-vectors-etc.c: Replaced all uses of pth__make_strings_and_vectors_mutex by pth__pthread_mode_mutex. src/c/pthread/pthread-on-posix-threads.c:  Eliminated pth__make_strings_and_vectors_mutex, simplifying analysis by eliminating another potential source of deadlock.
2011-11-29-02.37.24: src/c/pthread/pthread-on-posix-threads.c: Replaced all actual uses of UNUSED_INT_REFCELL__GLOBAL with pth__running_pthreads_count -- I much prefer keeping this stuff strictly at the C level.
2011-11-29-02.06.11: Globally renamed active_pthreads_count_refcell__global -> unused_int_refcell__global.
2011-11-29-01.56.42: Globally renamed ACTIVE_PTHREADS_COUNT_REFCELL__GLOBAL -> UNUSED_INT_REFCELL__GLOBAL.
2011-11-29-01.44.14: src/lib/core/init/runtime.api, src/lib/core/init/runtime.pkg: Renamed active_pthreads_count_refcell__global -> unused_int_refcell__global because this stuff should not be exported to the Mythryl level at all, and if exported, it should be exported via a function interface (which can do locking and logging as appropriate), not by exporting a refcell.
2011-11-29-01.04.52: src/c/pthread/pthread-on-posix-threads.c:  Eliminated pth__get_active_pthread_count(), an awful hack which is no longer needed -- good riddance!
2011-11-29-00.55.31: src/c/heapcleaner/call-heapcleaner.c: Fixed 'unused variable Val* p' compiler nit.
2011-11-29-00.46.26: src/c/pthread/pthread-on-posix-threads.c:  Eliminated pth__done_pthread_create flag to simplify the code, since it wound up being permanently TRUE anyhow.
2011-11-27-20.22.18: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Basically totally rewrote this file per new design doc. Dropped the now-obsoleted mutexes and barrier used by the old code. Oddly, the system still works...
2011-11-27-18.02.42: Cleaned crud out of sourcetree root directory.
2011-11-27-17.52.04: src/c/heapcleaner/pthread-heapcleaner-stuff.c: For clarity and consistency renamed pth__call_heapcleaner_with_extra_roots -> pth__start_heapcleaning_with_extra_roots.
2011-11-27-13.48.34: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Commenting.
2011-11-27-13.44.36: src/c/heapcleaner/call-heapcleaner.c: Tidying.
2011-11-27-13.02.14: src/c/pthread/pthread-on-posix-threads.c: Final(?) tweaks on design doc.
2011-11-27-12.47.14: src/c/pthread/pthread-on-posix-threads.c: More work on design doc.
2011-11-27-11.37.06: src/c/h/runtime-base.h: For clarityd PTHREAD_IS_HEAPCLEANING mode into two submodes PTHREAD_IS_PRIMARY_HEAPCLEANER +  PTHREAD_IS_SECONDARY_HEAPCLEANER. The pthread->mode state is never checked anyhow, it is only for documentation, display and debugging, so it might as well be more informative, and the distinction between primary and secondary heapcleaning pthreads is critically important.
2011-11-26-16.44.46: src/c/pthread/pthread-on-posix-threads.c:  Updated release_mythryl_heap() and recover_mythryl_heap() per last night's 7AM design-doc revision.
2011-11-26-05.06.53: src/c/pthread/pthread-on-posix-threads.c:   Rewrite design-doc code in more idiomatically correct style using just pth__pthread_mode_condvar & pth__pthread_mode_mutex.
2011-11-26-04.27.48: src/c/pthread/pthread-on-posix-threads.c:   Eliminated pth__blocked_to_running_mutex.
2011-11-26-04.19.34: src/c/pthread/pthread-on-posix-threads.c:   Renamed pth__no_running_pthreads_condvar -> pth__pthread_mode_condvar.
2011-11-26-04.11.59: src/c/pthread/pthread-on-posix-threads.c:  Changed type of pth__heapcleaner_state from bool (int) -> Heapcleaner_State.
2011-11-26-03.54.55: src/c/h/runtime-base.h: Established type Heapcleaner_Mode = enum { HEAPCLEANER_IS_OFF/HEAPCLEANER_IS_STARTING/HEAPCLEANER_IS_RUNNING }.
2011-11-26-03.42.53: src/c/h/runtime-base.h:  For clarity, renamed Pthread_Mode enum values from IS_RUNNING/IS_BLOCKED/IS_HEAPCLEANING/IS_VOID -> PTHREAD_IS_RUNNING/PTHREAD_IS_BLOCKED/PTHREAD_IS_HEAPCLEANING/PTHREAD_IS_VOID.
2011-11-26-03.30.52: src/c/pthread/pthread-on-posix-threads.c:   Renamed pth__it_is_heapcleaning_time -> pth__heapcleaner_state.
2011-11-25-21.36.47: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Tidying.
2011-11-25-21.19.37: src/c/h/runtime-base.h: Switched from dummy to production defs of RELEASE_MYTHRYL_HEAP/RECOVER_MYTHRYL_HEAP. Oddly, still seems to work fine...
2011-11-25-19.00.36: src/c/h/runtime-base.h: Merged in pthread-state.h, partly because I hate the latter name, mostly in pursuit of that one-stop shopping experience, if necessary at the cost of a bloated runtime-base.h
2011-11-25-16.23.43: src/c/o/Makefile.in: Added system-signals.h dependencies to force system-signals.h to be synthesized before runtime-base.h is used.
2011-11-25-12.36.47: src/c/h/runtime-base.h: Merged in task.h: Was getting 'incompletely defined struc' compiler complaint and wanted to make it more of a one-stop-shopping experience.
2011-11-25-12.10.15: src/c/h/runtime-base.h: Moved body of new RELEASE_MYTHRYL_HEAP/RECOVER_MYTHRYL_HEAP defs into new functions release_mythryl_heap/recover_mythryl_heap in src/c/pthread/pthread-on-posix-threads.c.
2011-11-25-11.51.19: src/c/h/runtime-base.h:  Installed design doc defs for RELEASE_MYTHRYL_HEAP and RECOVER_MYTHRYL_HEAP, currently #ifdef-ed out.
2011-11-25-03.03.20: src/c/pthread/pthread-on-posix-threads.c:  More design doc polishing.
2011-11-25-02.51.06: src/c/pthread/pthread-on-posix-threads.c: For brevity dropped __global suffixes because the pth__ prefixes make them redundant.
2011-11-25-02.36.14: src/c/pthread/pthread-on-posix-threads.c: For consistency and namespace cleanliness renamed it_is_heapcleaning_time__global -> pth__it_is_heapcleaning_time__global and running_pthreads_count__global -> pth__running_pthreads_count__global.
2011-11-25-02.25.06: src/c/pthread/pthread-on-posix-threads.c:  Moved it_is_heapcleaning_time__global and running_pthreads_count__global into this file to (with luck) share a cache-line with their governing mutex.  More work on design doc.
2011-11-25-01.41.44: src/c/heapcleaner/pthread-heapcleaner-stuff.c:  For clarity renamed heapcleaning_time__global -> it_is_heapcleaning_time__global.
2011-11-25-01.16.52: src/c/h/runtime-base.h: For clarity and consistency renamed thread-id type from Pid -> Tid.  src/c/h/pthread-state.h: For clarity and consistency renamed thread id field from pid -> tid.
2011-11-25-01.00.08: src/c/heapcleaner/pthread-heapcleaner-stuff.c: For consistency and brevity renamed running_pthreads_count -> running_pthreads_count__global and all_running_pthreads_must_enter_heapcleaning_mode -> heapcleaning_time__global.   src/c/pthread/pthread-on-posix-threads.c: Completed first-draft design doc.
2011-11-24-23.53.49: src/c/pthread/pthread-on-posix-threads.c:  Added pth__no_running_pthreads_condvar__global.
2011-11-24-23.28.12: src/c/pthread/pthread-on-posix-threads.c:  Added pth__blocked_to_running_mutex__global.
2011-11-24-23.14.28: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Added running_pthreads_count global.
2011-11-24-22.10.47: src/lib/x-kit/xclient/pkg/window/draw-imp.pkg: Merge in encode_poly_point x_limit contributed by Hue White -- thanks!
2011-11-24-21.35.27: src/c/heapcleaner/call-heapcleaner.c:  Tweaked need_to_call_heapcleaner() to return TRUE if all_running_pthreads_must_enter_heapcleaning_mode is set TRUE.
2011-11-24-21.27.28: src/c/pthread/pthread-on-posix-threads.c:  Introduced pth__pthread_mode_mutex__global.
2011-11-24-20.27.33: src/c/h/runtime-base.h: For brevity and euphony renamed Pthread_Status -> Pthread_Mode.  src/c/h/pthread-state.h:  Renamed field 'status' (now of type Pthread_Mode) to 'mode'.
2011-11-24-20.12.35: src/c/h/runtime-base.h:  Added IS_HEAPCLEANING mode to the existing IS_RUNNING/IS_BLOCKED/IS_VOID modes.
2011-11-24-20.06.01: src/c/h/runtime-base.h: For clarity and brevity renamed PTHREAD_IS_RUNNING/PTHREAD_IS_SUSPENDED/NO_PTHREAD_ALLOCATED -> IS_RUNNING/IS_BLOCKED/IS_VOID.  src/c/pthread/pthread-on-posix-threads.c: Extensive overview comments at bottom.
2011-11-23-23.10.00: src/c/lib/time/gettime.c:  Added RELEASE/RECOVER calls.  src/c/lib/time/timeofday.c:  Added RELEASE/RECOVER calls.
2011-11-23-14.04.01: src/c/lib/socket/shutdown.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/socket.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/socketpair.c:  Added RELEASE/RECOVER calls.
2011-11-23-13.41.24: src/c/lib/socket/sendbufto.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-13.25.02: src/c/lib/socket/sendbuf.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-12.16.27: src/c/lib/socket/recvfrom.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-11.56.43: src/c/lib/socket/recvbuffrom.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-11.38.33: src/c/lib/socket/recvbuf.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-11.02.44: src/c/lib/socket/listen.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/recv.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-23-10.24.33: src/c/lib/socket/getERROR.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/getNREAD.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/getTYPE.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/getpeername.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/getrpcbyname.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/getrpcbynum.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/getsockname.c:  Added RELEASE/RECOVER calls.
2011-11-22-22.37.44: src/c/lib/socket/connect.c:  Noticed belatedly that I had broken this back in mythryl7.110.58-2011-11-22-11 (*gaak*) breaking the X regression tests. Fixed.
2011-11-22-21.01.39: src/c/lib/socket/get-network-by-address.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-network-by-name.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/get-or-set-boolean-socket-option.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-or-set-socket-linger-option.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-or-set-socket-nodelay-option.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-or-set-socket-rcvbuf-option.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-or-set-socket-sndbuf-option.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-protocol-by-name.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/get-protocol-by-number.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-service-by-name.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/get-service-by-port.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/getATMARK.c:  Added RELEASE/RECOVER calls.
2011-11-22-16.32.54: src/c/lib/socket/get-host-by-address.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/get-host-by-name.c:   Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/socket/get-host-name.c:   Added RELEASE/RECOVER calls.
2011-11-22-11.03.31: src/c/lib/socket/accept.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/bind.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/close.c:  Added RELEASE/RECOVER calls.  src/c/lib/socket/connect.c:  Added RELEASE/RECOVER calls.
2011-11-21-12.13.12: src/c/lib/signal/getsigstate.c:  Added RELEASE/RECOVER calls.  src/c/lib/signal/pause.c:  Added RELEASE/RECOVER calls.  src/c/lib/signal/setsigstate.c:  Added RELEASE/RECOVER calls.
2011-11-21-11.40.22: src/c/lib/posix-tty/tcflow.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-tty/tcdrain.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-tty/tcgetpgrp.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-tty/tcsendbreak.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-tty/tcsetattr.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-tty/tcsetpgrp.c:  Added RELEASE/RECOVER calls.
2011-11-21-11.06.26: src/c/lib/posix-process/alarm.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-process/kill.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-process/sleep.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-process/waitpid.c:  Added RELEASE/RECOVER calls.
2011-11-21-04.49.28: src/c/lib/posix-process-environment/getegid.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getenv.c:  Added buffer/unbuffer RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/geteuid.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getgid.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getgroups.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getlogin.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getpgrp.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getpid.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getppid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/getuid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/isatty.c;    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/setgid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/setpgid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/setsid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/setuid.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/sysconf.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/times.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/ttyname.c:    Added RELEASE/RECOVER calls.   src/c/lib/posix-process-environment/uname.c:    Added RELEASE/RECOVER calls.
2011-11-21-04.07.24: src/c/lib/posix-os/tmpname.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-passwd/getgrgid.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-passwd/getgrnam.c:  Added buffer/unbuffer RELEASE/RECOVER calls.   src/c/lib/posix-passwd/getpwuid.c:  Added RELEASE/RECOVER calls.
2011-11-21-03.37.28: src/c/lib/posix-os/poll.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-21-03.11.16: src/c/lib/posix-io/writebuf.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-21-02.08.32: src/c/lib/posix-io/write.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-21-01.55.27: src/c/lib/posix-io/readbuf.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-21-01.17.18: src/c/lib/posix-io/read.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-20-22.58.40: src/c/lib/posix-io/dup.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-io/dup2.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_d.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_gfd.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_gfl.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_l.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_l_64.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_sfd.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fcntl_sfl.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/fsync.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/lseek.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/lseek_64.c:   Added RELEASE/RECOVER calls.   src/c/lib/posix-io/pipe.c:   Added RELEASE/RECOVER calls.
2011-11-20-22.32.51: src/c/lib/posix-file-system/symlink.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/posix-file-system/umask.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-file-system/unlink.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/posix-file-system/utime.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/posix-io/close.c:  Added RELEASE/RECOVER calls.
2011-11-20-21.45.09: src/c/lib/posix-file-system/rewinddir.c:  Added RELEASE/RECOVER calls.  src/c/lib/posix-file-system/rmdir.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/posix-file-system/stat.c:  Added buffer/unbuffer RELEASE/RECOVER calls.  src/c/lib/posix-file-system/stat_64.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-20-15.06.10: src/c/lib/posix-file-system/mkstemp.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-file-system/pathconf.c:  Added buffer/unbuffer RELEASE/RECOVER calls.   src/c/lib/posix-file-system/readdir.c:  Added RELEASE/RECOVER calls.   src/c/lib/posix-file-system/readlink.c:  Added buffer/unbuffer RELEASE/RECOVER calls.   src/c/lib/posix-file-system/rename.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-20-14.19.26: src/c/lib/posix-file-system/mkfifo.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-20-14.09.08: src/c/lib/posix-file-system/mkdir.c:  Added buffer/unbuffer RELEASE/RECOVER calls.
2011-11-20-12.31.58: src/c/lib/posix-file-system/link.c: Did the buffer/unbuffer RELEASE/RECOVER dance again.
2011-11-20-11.27.25: src/c/h/runtime-base.h:  To improve clarity, brevity and symmetry, renamed   CEASE_USING_MYTHRYL_HEAP/BEGIN_USING_MYTHRYL_HEAP -> RELEASE_MYTHRYL_HEAP/RECOVER_MYTHRYL_HEAP.
2011-11-20-10.58.06: src/c/lib/posix-file-system/openf.c (etc):  More un/buffer_mythryl_heap_value() calls.  src/c/h/runtime-base.h: More commenting.
2011-11-19-19.22.23: src/c/lib/posix-file-system/chmod.c: buffer_mythryl_heap_value + unbuffer_mythryl_heap_value calls.
2011-11-19-19.02.22: Added a few more buffer_mythryl_heap_value() + unbuffer_mythryl_heap_value() calls.
2011-11-19-14.47.14: src/c/lib/dynamic-loading/dlopen.c: Added a buffer_mythryl_heap_value.
2011-11-19-14.19.23: Added a first call to un/buffer_mythryl_heap_value, added some #include <stdio.h> lines to suppress warnings.
2011-11-19-13.55.28: For clarity globally renamed Buffered_Mythryl_Heap_Value -> Mythryl_Heap_Value_Buffer.
2011-11-19-13.44.26: src/c/main/runtime-state.c: Wrote buffer_mythryl_heap_value(), unbuffer_mythryl_heap_value() as support for fns using CEASE_USING_MYTHRYL_HEAP/BEGIN_USING_MYTHRYL_HEAP.
2011-11-19-01.18.25: src/c/h/runtime-base.h: Added third arg to CEASE_USING_MYTHRYL_HEAP, to allow protecting the fns Val arg from the garbage collector.
2011-11-18-21.31.29: Merged src/c/h/runtime-pthread.h into src/c/h/runtime-base.h because pthread support is becoming part of base functionality and flipping between the two files is becoming a nuisance.
2011-11-18-14.54.45: src/c/h/runtime-pthread.h:  Renamed  PTHREAD_IS_RUNNING -> PTHREAD_IS_RUNNING_MYTHRYL for clarity, then added new   PTHREAD_IS_RUNNING_C  mode to be set by CEASE_USING_MYTHRYL_HEAP and cleared by BEGIN_USING_MYTHRYL_HEAP.
2011-11-18-13.50.54: src/c/h/runtime-base.h: For clarity and accuracy renamed   ENTER_C_LEVEL -> CEASE_USING_MYTHRYL_HEAP  and  LEAVE_C_LEVEL -> BEGIN_USING_MYTHRYL_HEAP.
2011-11-18-13.32.33: src/c/h/runtime-base.h: Established ENTER_C_LEVEL(fn_name) and LEAVE_C_LEVEL(fn_name) macros. We will need these to keep <pthread.h> support working correctly in the presence of pthreads blocked at the C level in select() or sleep() statements or whatever -- otherwise garbage collection could block all other pthreads until the offending pthread returns.
2011-11-18-13.23.56: src/c/pthread/: Tidying, commenting, for clarity renamed   pthread-on-sgi.c -> obsolete-pthread-on-sgi.c  +   pthread-on-solaris.c -> obsolete-pthread-on-solaris.c,  deleted   pthread-on-posix-threads.c.oldstuff.
2011-11-18-11.04.18: src/lib/std/src/pthread.api: Moved  fate::make_isolated_fate  call inside the implementation so as to present a simpler API to clients (spawn_pthread arg is now Void->Void instead of fate::Fate(Void)).
2011-11-17-12.51.29: Output from first spawn_pthread() call! :-) :-) :-)   Parent:  thread id d=884225840   process id d=14036 // Child:   thread_id d=881982320   process id d=14036.
2011-11-17-11.58.28: rc/lib/std/src/pthread.api: Changed spawn_pthread from   (Void -> Void) -> Pthread   back to   fat::Fate(Void) -> Pthread   -- I have a feeling that (Void -> Void) was a really bad idea.  (I do not yet understand the underlying fate semantics.)
2011-11-17-10.51.13: For clarity and consistency, pervasively renamed  cthrow -> escape_fate.
2011-11-17-10.35.14: For clarity and consistency, pervasively renamed  cthrow -> escape_fate.
2011-11-17-10.35.14: For clarity, greppability and the greater glory of Cthulho, pervasively renamed   capture -> capture_fate  and  escape -> escape_fate.
2011-11-17-10.18.43: For clarity and greppability, pervasively renamed   isolate -> make_isolated_fate.
2011-11-16-12.03.09: src/A.PTHREAD-SUPPORT.OVERVIEW: Update.
2011-11-16-11.34.17: src/c/pthread/pthread-on-posix-threads.c:  With preceding changes, now runs successfully with pth__done_pthread_create__global = TRUE.  (Twenty full compile cycles.)  Inexplicably, it compiles faster with it set TRUE than FALSE -- 189.005 vs 202.191 user CPU seconds. So I am leaving it set TRUE. :-)
2011-11-15-21.01.18: src/c/heapcleaner/call-heapcleaner.c:  need_to_call_heapcleaner: Changed   TAGGED_INT_TO_C_INT( SOFTWARE_GENERATED_PERIODIC_EVENTS_SWITCH_REFCELL__GLOBAL) != 0   ->   DEREF( SOFTWARE_GENERATED_PERIODIC_EVENTS_SWITCH_REFCELL__GLOBAL) == HEAP_TRUE   because the former looks like an outright bug to me.
2011-11-15-20.38.46: src/c/pthread/pthread-on-posix-threads.c:  Comment.
2011-11-15-20.25.20: src/c/heapcleaner/call-heapcleaner.c: Same fix, different fn.  (call_heapcleaner_with_extra_roots vs call_heapcleaner. Is not rampant code reduplication wonderful?)
2011-11-15-19.48.35: src/c/heapcleaner/call-heapcleaner.c: Inserted a   *roots_ptr++ =  &task->link_register;  which appeared absent for no sane reason -- presumably 15 years of bitrot at work.
2011-11-15-19.41.33: src/c/heapcleaner/call-heapcleaner.c: Light cleaning and commenting.
2011-11-15-18.55.01: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Typo fix: i_am_the_ond -> i_am_the_one.
2011-11-15-18.52.29: src/c/heapcleaner/call-heapcleaner.c:  Light tidying.
2011-11-15-18.31.39: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Cleaning and commenting.
2011-11-15-18.23.58: src/c/heapcleaner/pthread-heapcleaner-stuff.c: For clarity, renamed cleaning_pthread_pid__local -> heapcleaner_pthread_pid__local.
2011-11-15-17.58.45: src/c/h/runtime-base.h: Wrapped MIN def in #ifndef MIN ... #endif to avoid compiler warnings, added matching #define of MAX.  src/c/heapcleaner/pthread-heapcleaner-stuff.c: Renamed cleaning_pthread__local -> cleaning_pthread_pid__local and changed its type from int -> Pid for accuracy, also made it volatile for good measure.
2011-11-15-17.28.22: src/c/main/timers.c: Tidying.
2011-11-15-17.13.48: src/c/h/runtime-base.h: Added MIN macro to improve code reability.
2011-11-15-16.55.38: src/c/heapcleaner/pthread-heapcleaner-stuff.c:  Tidying.
2011-11-15-16.30.11: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Renamed poll_freq -> poll_interval because that is what it in fact is.
2011-11-15-12.58.22: src/c/heapcleaner/call-heapcleaner.c:  need_to_call_heapcleaner:  Changed  task->heap_allocation_limit -> HEAP_ALLOCATION_LIMIT( task->heap )  in two spots -- looks like bitrot shielded from detection by (those damned) #ifdefs.
2011-11-15-11.15.02: For consistency and greppability renamed  src/lib/core/internal/mythryld.api -> src/lib/core/internal/mythryld-app.api  and    src/lib/core/internal/mythryld.pkg -> src/lib/core/internal/mythryld-app.pkg.
2011-11-14-20.04.39: src/c/mythryl-config.h: Flipped NEED_PTHREAD_DEBUG_SUPPORT to TRUE in hope of helping track down PTHREAD issue.
2011-11-14-18.10.27: src/c/mythryl-config.h:  Defined PTHREAD_LOG_IF to eliminate lots of ugly #if NEED_PTHREAD_DEBUG_SUPPORT ... #endif linepairs.  Fixed various minor bits of bitrot thus exposed.
2011-11-14-17.35.25: Changed  #ifdef NEED_PTHREAD_DEBUG_SUPPORT -> #if NEED_PTHREAD_DEBUG_SUPPORT everywhere because dependong in #ifdef for configuration is like wearing a sign reading KICK ME.
2011-11-14-17.13.22: Globally renamed  NEED_PTHREAD_SUPPORT_DEBUG -> NEED_PTHREAD_DEBUG_SUPPORT  mostly to reduce false positives when grepping for NEED_PTHREAD_SUPPORT.
2011-11-14-17.02.42: For clarity and greppability, renamed  src/c/main/error.c -> src/c/main/error-reporting.c.
2011-11-14-16.42.33: For sanity, simplicity and orderliness, merged  src/c/lib/socket/log-if.h -> src/c/h/runtime-base.h   and   src/c/lib/socket/log-if.c -> src/c/main/error.c.
2011-11-14-15.10.58: src/c/heapcleaner/heapclean-agegroup0.c: heapclean_agegroup0: Changed   pth__done_pthread_create__global  ->  1 || pth__done_pthread_create__global.
2011-11-13-18.20.11: src/c/heapcleaner/make-strings-and-vectors-etc.c: similarly jimmied   pth__done_pthread_create__global   ->   (1 || pth__done_pthread_create__global)   in make_nonempty_ro_vector().
2011-11-13-18.11.25: src/c/heapcleaner/make-strings-and-vectors-etc.c: similarly jimmied   pth__done_pthread_create__global   ->   (1 || pth__done_pthread_create__global)   in make_nonempty_rw_vector().
2011-11-13-17.50.35: src/c/machine-dependent/posix-signal.c: SELF_PTHREAD: Similarly jimmied SELF_PTHREAD to key on   (1 || pth__done_pthread_create__global)  instead of just  pth__done_pthread_create__global.
2011-11-13-16.44.17: src/c/h/runtime-pthread.h: To zero in on source of heap corruption when pth__done_pthread_create__global, changed   pth__done_pthread_create__global  ->  1 || pth__done_pthread_create__global   in PTH__MUTEX_LOCK and PTH__MUTEX_UNLOCK.  Everything seems to work fine still.
2011-11-13-16.29.18: src/c/pthread/pthread-on-posix-threads.c: Added a couple of comments.
2011-11-13-13.21.54: src/c/pthread/pthread-on-posix-threads.c: pth__mutex_lock, pth__mutex_unlock: Dropped the pth__done_pthread_create__global checks because they are now done at point-of-call by the PTH__MUTEX_LOCK and PTH__MUTEX_UNLOCK macros.
2011-11-13-13.21.54: src/c/h/runtime-pthread.h: Added PTH__MUTEX_LOCK and PTH__MUTEX_UNLOCK, deployed to eliminate mutex ops so long as pth__done_pthread_create__global is FALSE.
2011-11-12-17.24.46: Uncommented (almost?) all   #if NEED_PTHREAD_SUPPORT   lines.
2011-11-12-10.08.06: src/c/heapcleaner/call-heapcleaner.c: Uncommented some of the #if NEED_HEAPCLEANER_SUPPORT lines.
2011-11-12-09.44.10: src/c/mythryl-config.h:  Set NEED_PTHREAD_SUPPORT to 1 (TRUE).  (Essentially all references to it are commented out at the moment, of course.) src/c/lib/pthread/libmythryl-pthread.c: Fixed one final consequent compiler warning, in pthread_exit_fn. (Added a dummy final return HEAP_VOID.)
2011-11-12-02.00.47: Selected additional NEED_PTHREAD_SUPPORT code snippets for compilation; fixed various resulting compile errors and warnings.
2011-11-11-10.43.09: src/c/heapcleaner/call-heapcleaner.c: Let top-of-file #if NEED_PTHREAD_SUPPORT... logic compile.
2011-11-10-23.18.57: src/c/pthread/pthread-on-posix-threads.c:  Improved error diagnostics, fixed another compiler warning.
2011-11-10-22.49.42: src/c/pthread/pthread-on-posix-threads.c: Fix various compiler warnings.  pth__pthread_create:  Improved error reporting.
2011-11-10-21.41.37: src/c/pthread/pthread-on-posix-threads.c:  For clarity renamed  pthread_mutex__local -> pthread_table_mutex__local. Tidying.
2011-11-10-21.25.19: src/c/pthread/pthread-on-posix-threads.c: First-cut implementation of pth__pthread_join.
2011-11-10-20.04.17: src/c/pthread/pthread-on-posix-threads.c: Wrote first-cut implementation of pth__pthread_exit().  src/c/h/runtime-pthread.h:  Eliminated PTHREAD_IS_SUSPENDED from Pthread_Status enum -- I do not think the added complexity is justified, and the SML/NJ implementation "suspends" a thread by spinning in a loop, which may be ok for a 1992 lab prototype but unwelcome in a 2011 production implementation. (The idea would have been to improve benchmark performance by eliminating pthread startup/shutdown overhead, but I do not envision doing enough of that for the overhead to be an issue.)
2011-11-10-19.22.45: src/c/h/runtime-base.h: Redefine Pid as pthread_t from <pthread.h>, making it safe to:  src/c/pthread/pthread-on-posix-threads.c: Pass &task->pthread->pid to pthread_create call, ensuring it is set in both parent and child pthreads, thus eliminating the need to spin waiting for it to be set in child (as both sgi-mp.c and solaris-mp.c did in original SML/NJ code).
2011-11-10-13.19.28: src/lib/std/src/pthread.api, src/lib/std/src/pthread.pkg: Added entry for join_pthread.
2011-11-10-13.13.32: src/c/pthread/pthread-on-posix-threads.c, src/c/lib/pthread/libmythryl-pthread.c: Placeholder implementation of join_pthread.
2011-11-10-12.44.25: src/lib/std/src/pthread.api: Added a Pthread type parallel to existing Barrier, Condvar and Mutex types;  changed spawn_pthread to return a Pthread value; cleared out remaining initial_datum stuff, ancient leftovers I no longer want.
2011-11-10-12.30.39: src/c/pthread/pthread-on-posix-threads.c:  Zeroth-cut implementation of pth__pthread_create.
2011-11-08-21.26.46: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote barrier_wait to handle errors via exceptions.
2011-11-08-21.19.14: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote barrier_destroy to handle errors via exceptions.
2011-11-08-21.09.06: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote barrier_init to handle errors via exceptions.
2011-11-08-20.25.25: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote condvar_broadcast to handle errors via exceptions.
2011-11-08-17.57.51: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote condvar_signal to handle errors via exceptions.
2011-11-08-17.38.36: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote condvar_wait to handle errors via exceptions.
2011-11-08-17.29.44: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote condvar_destroy to handle errors via exceptions.
2011-11-08-17.12.46: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote condvar_init to handle errors via exceptions.
2011-11-08-17.03.53: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote mutex_unlock to handle errors via exceptions.
2011-11-08-16.56.41: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote mutex_trylock to handle errors via exceptions.
2011-11-08-16.44.15: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote mutex_lock to handle errors via exceptions.
2011-11-08-16.29.17: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote mutex_destroy to handle errors via exceptions.
2011-11-08-15.41.33: src/c/lib/pthread/libmythryl-pthread.c:  Rewrote mutex_init to handle errors by throwing an exception rather than die()-ing. (Primarily to facilitate unit testing.)
2011-11-08-10.51.55: src/c/lib/pthread/libmythryl-pthread.c: Renamed status fields to state for slight increase in clarity.
2011-11-07-22.54.47: src/lib/std/src/pthread.api: set_mutex, set_condvar:  Added NULL args as futureproofing.
2011-11-07-22.44.27: src/lib/std/src/pthread.pkg: Proper type for wait_on_condvar.
2011-11-07-22.35.40: src/c/lib/pthread/libmythryl-pthread.c:  First-cut implementation of condvar_wait.
2011-11-07-21.47.39: src/c/lib/pthread/libmythryl-pthread.c:  First-cut implementations of condvar_init and mutex_init.
2011-11-07-16.58.31: src/c/lib/pthread/libmythryl-pthread.c: First-cut implementation of barrier_init().  src/lib/std/src/pthread.pkg: Proper implementation and typing for set_barrier (which calls the c-level barrier_init).
2011-11-07-16.42.18: src/c/lib/pthread/libmythryl-pthread.c: First-cut implementation of barrier_wait.  src/lib/std/src/pthread.api: Set right type for wait_on_barrier.
2011-11-07-16.31.05: src/lib/std/src/pthread.api:  Update signal_condvar and broadcast_condvar types.
2011-11-07-16.24.14: src/c/lib/pthread/libmythryl-pthread.c: Added first-cut implementations of condvar_signal and condvar_broadcast.
2011-11-07-16.16.00: src/lib/std/src/pthread.pkg:  For clarity, added type Try_Mutex_Result =  ACQUIRED_MUTEX | MUTEX_WAS_UNAVAILABLE; and tweaked try_mutex to return it.
2011-11-07-16.04.17: src/c/lib/pthread/libmythryl-pthread.c:  Hacked in first-cut implementation of mutex_trylock.
2011-11-07-15.55.49: src/c/lib/pthread/libmythryl-pthread.c: Hacked up first-cut implementations of mutex_lock and mutex_unlock.
2011-11-07-15.44.06: src/lib/std/src/pthread.pkg: Much renaming of externally visible stuff for clarity, in particular foo_destroy -> clear_foo.  Updated types of clear_barrier, clear_condvar and clear_mutex to Barrier -> Void, Condvar -> Void, Mutex -> Void.
2011-11-07-15.28.19: c/lib/pthread/libmythryl-pthread.c: Did clone-and-mutate on mutex_destroy to produce first-cut implementations of barrier_destroy and condvar_destroy.
2011-11-07-15.20.51: src/c/lib/pthread/libmythryl-pthread.c:  Wrote first-cut implementation of mutex_destroy.
2011-11-07-15.02.19: src/lib/std/src/pthread.pkg, src/lib/std/src/pthread.api: Updated types for barrier_free, condvar_free, mutex_free to Barrier -> Void, Condvar -> Void, Mutex -> Void.
2011-11-07-14.55.54: src/c/lib/pthread/libmythryl-pthread.c:  Did clone-and-mutate on barrier_free to produce first-cut implementations for condvar_free and mutex_free.
2011-11-07-14.49.14: src/c/lib/pthread/libmythryl-pthread.c: Threw together a first-cut implementation of barrier_free.
2011-11-07-13.16.22: src/lib/std/src/pthread.pkg: Added  Barrier = one_word_unt::Unt; Condvar = one_word_unt::Unt; Mutex   = one_word_unt::Unt; to match what the make_barrier/make_condvar/make_mutex implementations now actually return;  changed the types of the latter to Void -> Barrier, Void -> Condvar, Void -> Mutex respectively.  src/lib/std/src/pthread.api: Exported Barrier, Condvar and Mutex as opaque types, updated the make_* fn types appropriately.
2011-11-07-13.02.10: src/c/lib/pthread/libmythryl-pthread.c: Did clone-and-mutate on mutex_make to produce first-cut implementations of barrier_make and condvar-make.
2011-11-07-12.50.55: src/c/lib/pthread/libmythryl-pthread.c: Hacked in first-cut implementation of mutex_make.
2011-11-07-12.31.13: src/c/lib/pthread/libmythryl-pthread.c: Changed padvectors from char to int in mutex_struct, condvar_struct and barrier_struct.
2011-11-07-12.14.39: src/c/lib/pthread/libmythryl-pthread.c: Added definitions of mutex_struct, condvar_struct and barrier_struct.
2011-11-07-11.39.04: src/c/lib/pthread/libmythryl-pthread.c, src/lib/std/src/pthread.pkg:  Added (dummy) entries for mutex_make, mutex_free, barrier_make, barrier_free, condvar_make, condvar_free.
2011-11-07-11.26.14: src/c/lib/pthread/libmythryl-pthread.c, src/lib/std/src/pthread.pkg:  Added (dummy) entries for condvar_init, condvar_destroy, condvar_wait, condvar_signal, condvar_broadcast.
2011-11-07-11.11.16: src/c/lib/pthread/libmythryl-pthread.c, src/lib/std/src/pthread.pkg:  Added (dummy) entries for barrier_init, barrier_destroy, barrier_wait.
2011-11-07-10.59.40: src/c/lib/pthread/libmythryl-pthread.c, src/lib/std/src/pthread.pkg:  Added (dummy) entries for mutex_init, mutex_destroy, mutex_lock, mutex_unlock, mutex_trylock.
2011-11-07-00.47.06: src/c/h/runtime-pthread.h, src/c/pthread/pthread-on-posix-threads.c: Added new calls pth__condvar_init, pth__condvar_destroy, pth__condvar_wait, pth__condvar_signal, pth__condvar_broadcast.
2011-11-06-23.59.54: src/c/h/runtime-base.h:  Added   typedef pthread_cond_t Condvar;  parallel to previous Barrier and Mutex typedefs.  src/c/pthread/pthread-on-posix-threads.c:  Added (as yet unused)   Condvar  pth__unused_condvar__global = PTHREAD_COND_INITIALIZER;
2011-11-06-20.15.04: src/lib/std/src/pthread.api: For clarity and consistency, renamed release_pthread -> pthread_exit.
2011-11-06-19.48.51: src/lib/std/src/pthread.api:  Dropped the spinlock stuff because spinlocks sound dubious and to clear the decks; also dropped max_pthreads because it does not belong in the Mythryl api.
2011-11-06-19.23.39: src/c/lib/pthread/libmythryl-pthread.c:  For clarity and consistency renamed  acquire_pthread -> spawn_pthread.
2011-11-06-18.16.38: Moved unpacking of (thread,closure) tupled from    pth__pthread_create in src/c/pthread/pthread-on-posix-threads.c   to   where it belongs:   acquire_pthread in src/c/lib/pthread/libmythryl-pthread.c, the Mythryl/C interface module for pthreads.
2011-11-06-01.07.39: src/c/h/task.h: For clarity, sanity and greppability, renamed field  closure -> current_closure.
2011-11-05-23.39.27: src/c/h/task.h:  Renamed field thread -> current_thread for sanity, consistency and greppability.
2011-11-05-22.45.57: src/c/pthread/pthread-on-posix-threads.c:  For consistency and sanity, renamed   pth__done_acquire_pthread__global -> pth__done_pthread_create__global.
2011-11-05-18.57.44: src/c/pthread/pthread-on-posix-threads.c:  Renamed  pth__acquire_pthread -> pth__pthread_create  and  pth__release_pthread -> pth__pthread_exit  for consistency with standard posix-thread API nomenclature.
2011-11-05-18.57.44: src/c/pthread/pthread-on-posix-threads.c: Converted old pth__get_active_pthread_count() implementation to posix-threads API to yield a valid implementation.
2011-11-05-18.41.49: src/c/pthread/pthread-on-posix-threads.c: Redefined pth__barrier_wait() to be Bool-valued instead of void-valued, to conform with standard posix-threads API. (One thread gets a TRUE return, the rest get a FALSE return; this provides an easy way for those threads to "elect a leader" if desired.
2011-11-05-18.07.04: src/c/pthread/pthread-on-posix-threads.c:   Eliminated pth__max_pthreads, which merely returned the value of MAX_PTHREADS.
2011-11-05-17.57.40: src/c/pthread/pthread-on-posix-threads.c:  Renamed   pth_maybe_acquire_mutex -> pth__mutex_trylock  to match standard posix-threads api naming and re-engineered it to conform to standard semantics.
2011-11-05-17.29.06: src/c/pthread/pthread-on-posix-threads.c: Replaced pth__free_mutex by pth__mutex_destroy  and  pth__make_mutex by pth__mutex_init  to conform to the standard posix-threads API.
2011-11-05-16.58.21: src/c/main/runtime-main.c:  Swept the end-of-world stuff out of main() and into  a new fn   do_end_of_world_stuff_and_exit,  to improve clarity and balance in main().
2011-11-05-16.33.07: src/c/pthread/pthread-on-posix-threads.c:  Deleted   pth__clear_barrier()   because it is unused and does not correspond well to anything in the posix-threads API standard.
2011-11-05-02.52.56: src/c/pthread/pthread-on-posix-threads.c: For clarity and consistency with underlying posix-threads library, renamed pth__acquire_mutex -> pth__mutex_lock  and  pth_release_mutex -> pth__mutex_unlock.
2011-11-05-02.43.04: src/c/heapcleaner/pthread-heapcleaner-stuff.c: Recode to ensure that barrier is initialized with pthreadcount before any pthread can reach barrier.
2011-11-05-02.10.51: src/c/pthread/pthread-on-posix-threads.c:  Converted to posix-thread system of supplying threadcount in pth__barrier_init(), vs original codebase system of supplying threadcount in  pth__barrier_wait().
2011-11-04-22.14.50: src/c/h/runtime-pthread.h:  Removed  #define ACQUIRE_MUTEX(mutex) pth__acquire_mutex(mutex);   and   #define RELEASE_MUTEX(mutex) pth__release_mutex(mutex);   which were pure and simple obfustication.
2011-11-04-21.57.22: src/c/h/runtime-pthread.h:  Eliminated   #define BEGIN_CRITICAL_SECTION( mutex )	{ pth__acquire_mutex(mutex); {   and   #define END_CRITICAL_SECTION( mutex )	} pth__release_mutex(mutex); }   which IMHO mainly obfusticate.
2011-11-04-21.43.59: src/c/pthread/pthread-on-posix-threads.c: Changed argtypes of pth__acquire_mutex and pth__release_mutex from Mutex to Mutex* to better match underlying posix-threads library.
2011-11-04-14.25.42: src/c/mythryl-config.h: Added URL+quote for Intel documentation on cacheline size.
2011-11-04-14.06.51: src/c/mythryl-config.h:  Added   #define CACHE_LINE_BYTESIZE 64.   pth__heapcleaner_mutex__global:  Initialized pth__heapcleaner_mutex__global, pth__heapcleaner_gen_mutex__global, pth__timer_mutex__global to PTHREAD_MUTEX_INITIALIZER, added CACHE_LINE_BYTESIZE bytes of padding between them.
2011-11-04-13.35.41: src/c/main/runtime-main.c:  Moved start-of-world stuff into new   do_start_of_world_stuff()   fn to reduce clutter and improve balance in  main().
2011-11-04-12.31.12: src/c/heapcleaner/Makefile.in (and src/c/heapcleaner/makefile.win32):  Added pthread-heapcleaner-stuff.o to HEAPCLEANER_OBJS to make it compile and be available in LIB, and eliminated the parallel PTHREAD_LIB stuff, since it adds clutter and anyhow I want to make pthread support standard instead of optional.  src/c/heapcleaner/pthread-heapcleaner-stuff.c: Fixed two of my typos exposed by the resulting compile.
2011-11-04-11.49.16: src/c/heapcleaner/Makefile.in (etc):  More name rationalization and bitrot cleaning.
2011-11-04-11.37.25: src/c/heapcleaner/Makefile.in:  More name rationalization, e.g. standardizing on PTHREAD instead of MULTICORE in names.
2011-11-04-11.27.29: src/c/heapcleaner/Makefile.in:  Bitrot fixing:  'pthread-heapcleaner-stuff' (etc) had variously wound up as 'pthread-heapcleaning-stuff', 'pthread-cleaner-stuff' etc.
2011-11-04-11.15.49: src/c/heapcleaner/heapcleaner-initialization.c: More globals renaming for clarity.
2011-11-04-11.08.35: src/c/heapcleaner/heapcleaner-initialization.c: Add __global suffix to names of four globals.
2011-11-04-10.55.58: src/c/pthread/pthread-on-posix-threads.c:  Renamed   pth__initialize -> pth__start_up   for better symmetry with   pth__shut down.
2011-11-04-10.50.04: src/c/pthread/pthread-on-posix-threads.c: Established placeholder versions of all exported functions just to allow dependent files (in particular   src/c/heapcleaner/pthread-heapcleaner-stuff.c) to compile.
2011-11-04-01.54.25: src/c/pthread/pthread-on-posix-threads.c:  Added new  pth__done_acquire_pthread__global  flag, with the idea that so long as it remains FALSE we can continue to use mutex-free monothread code for heapcleaning etc.
2011-11-04-01.25.59: Globally renamed  foo_local -> foo__local  to clearly distinguish the identifier proper from the scope nametag.
2011-11-04-00.56.11: Globally renamed  FOO_GLOBAL -> FOO__GLOBAL  to clearly distinguish the identifier proper from the scope nametag.
2011-11-03-21.31.55: Globally renamed  foo_global -> foo__global  to clearly distinguish the identifier proper from the scope nametag.
2011-11-03-15.03.50: Pervasively changed pth_foo -> pth__foo to draw clearer distiction between namespace and identifier proper.
2011-11-03-14.56.43: src/c/h/runtime-pthread.h:  Added   extern Pthread* pth_get_pthread (void);   to give signal handlers a way to find the current Pthread.
2011-11-03-14.12.27: src/c/h/runtime-pthread.h:  Added   #include runtime-base.h   so as to make   Pthread   type available in this file.
2011-11-03-12.23.24: src/c/h/runtime-base.h:  Eliminated   pthread_count_global   because it turned out to just be an alias for   MAX_PTHREADS.   Eschew obfustication!  Eschew obfustication!  Eschew obfustication! :-)
2011-11-03-01.56.37: src/c/heapcleaner/call-heapcleaner.c:  Commenting.
2011-11-03-01.39.28: src/c/h/heap.h:  Renamed   clean_agegroup0 -> heapclean_agegroup0  and  clean_n_agegroups -> heapclean_n_agegroups   for consistency and to increase codebase cross-section relative to searches on 'heapclean' tieword.
2011-11-02-21.54.42: src/c/heapcleaner/call-heapcleaner.c: call_heapcleaner_with_extra_roots: Fixed latent bug inherited from SML/NJ:  They had   if (nProcs == 0) ASSIGN(ProfCurrent, PROF_RUNTIME); return;   where they needed   if (nProcs == 0) { ASSIGN(ProfCurrent, PROF_RUNTIME); return; }.
2011-11-02-21.29.53: src/c/heapcleaner/pthread-heapcleaner-stuff.c (etc):  To fix bitrot pervasively changed   task->lib7_mpSelf to task->pid.  (This is another example of #ifdefs serving as bitrot bug breeding grounds.)
2011-11-02-21.01.27: src/c/heapcleaner/call-heapcleaner.c:  Renamed  clean_heap -> call_heapcleaner  for consistency and to increase the codebase cross-section wrt searches on the tieword 'heapclean'.
2011-11-02-20.36.25: src/c/heapcleaner/call-heapcleaner.c: Renamed clean_heap_with_extra_roots -> call_heapcleaner_with_extra_roots to increase cross-section to 'heapclean'' tieword.
2011-11-02-19.42.40: src/c/machine-dependent/prim*asm:  Renamed call_heapcleaner -> call_heapcleaner_asm (etc) for clarity and to free up the call_heapcleaner identifier for use in src/c/heapcleaner/call-heapcleaner.c.
2011-11-02-00.54.22: src/c/heapcleaner/pthread-heapcleaner-stuff.c:  For consistency renamed  mc_clean_heap_with_extra_roots -> pth_clean_heap_with_extra_roots.
2011-11-01-22.52.23: src/c/heapcleaner/call-heapcleaner.c:  Changed   #if (NEED_PTHREAD_SUPPORT && defined(COMMENT_MULTICORE_SUPPORT_FOR_SOFTWARE_GENERATED_PERIODIC_EVENTS)) -> #if (NEED_PTHREAD_SUPPORT && NEED_PTHREAD_SUPPORT_FOR_SOFTWARE_GENERATED_PERIODIC_EVENTS).  (Looks like a typo I introduced at some point.)
2011-11-01-22.38.48: src/c/heapcleaner/call-heapcleaner.c: For clarity, consistency and accuracy renamed  need_to_clean_heap -> need_to_call_heapcleaner.  (It does not always return TRUE because the heap needs cleaning; sometimes it returns TRUE to trigger software-generated event processing.)
2011-11-01-22.01.03: src/c/mythryl-config.h:  Added   #define NEED_PTHREAD_SUPPORT_FOR_SOFTWARE_GENERATED_PERIODIC_EVENTS 0   and pervasively changed   #ifdef PTHREAD_SUPPORT_FOR_SOFTWARE_GENERATED_PERIODIC_EVENTS   to   #if NEED_PTHREAD_SUPPORT_FOR_SOFTWARE_GENERATED_PERIODIC_EVENTS.
2011-11-01-21.32.27: src/c/mythryl-config.h:  Commenting and cleaning.
2011-11-01-21.20.54: src/c/mythryl-config.h:  Added   #define NEED_HUGECHUNK_REFERENCE_STATISTICS 0   and pervasively changed   #ifdef KEEP_HUGECHUNK_REFERENCE_STATISTICS   to  #if NEED_HUGECHUNK_REFERENCE_STATISTICS   in   src/c/heapcleaner/heapclean-n-agegroups.c.
2011-11-01-21.09.26: src/c/heapcleaner/: For clarity and consistency, renamed   clean-agegroup0.c -> heapclean-agegroup0.c   and   clean-n-agegroups.c -> heapclean-n-agegroups.c.
2011-11-01-20.57.53: src/c/mythryl-config.h: Added   #define NEED_HEAPCLEANER_PAUSE_STATISTICS 0   and pervasively changed   #ifdef KEEP_HEAPCLEANER_PAUSE_STATISTICS   to   #if NEED_HEAPCLEANER_PAUSE_STATISTICS.
2011-11-01-20.11.17: Random renaming/commenting/cleaning of pthread-related stuff.
2011-11-01-19.44.45: src/c/heapcleaner/: For clarity renamed pthread-cleaning-stuff.c -> pthread-heapcleaner-stuff.c
2011-11-01-19.21.49: sh/make-c-stuff: This had a paragraph setting up GC_GEN0_BUFSIZE based on mips vs intel32 vs alpha32 architectures, but GC_GEN0_BUFSIZE was never again referenced, and in any event CPU chip proliferation has made nonsense of the idea -- deleted the paragraph.
2011-11-01-18.05.27: src/c/mythryl-config.h:  Flipped NEED_SOFTWARE_GENERATED_PERIODIC_EVENTS from 0 to 1 (i.e., FALSE to TRUE) because the pthread support requires it, recompiled, fixed the bitrot thus revealed, e.g. allocBase had become agegroup0_buffer but that substitution had not been made everywhere.  This is the sucky side of using #ifdefs -- it provides little nests for bitrot bugs to breed in.
2011-11-01-15.21.14: src/c/mythryl-config.h:  For clarity and accuracy, pervasively changed WANT_FOO to NEED_FOO.
2011-11-01-15.14.54: src/c/mythryl-config.h:  Added   #define WANT_SOFTWARE_GENERATED_PERIODIC_EVENTS 0   and pervasively changed   #ifdef SOFTWARE_GENERATED_PERIODIC_EVENTS   to   #if WANT_SOFTWARE_GENERATED_PERIODIC_EVENTS
2011-11-01-14.17.11: src/c/h/runtime-pthread.h:  For clarity and consistency, changed 'lock' to 'mutex' throughout.
2011-11-01-13.42.29: src/c/machine-dependent/posix-signal.c (etc): To forestall possible silent memory corruption, added if (sig >= MAX_POSIX_SIGNALS)    die ('posix-signal.c: c_signal_handler: sig d=%d >= MAX_POSIX_SIGNAL %d', sig, MAX_POSIX_SIGNALS );
2011-10-31-01.13.21: Established  src/lib/std/src/pthread-unit-test.pkg  and hooked it up.
2011-10-31-00.46.22: After some file to fit / bash to shape / paint to cover on src/c/heapcleaner/Makefile.in, src/c/o/Makefile.in etc, eval: pthread::get_pthread_id(); now runs correctly, which basically verifies that src/c/pthread/pthread-on-posix-threads.c and src/c/lib/pthread/libmythryl-pthread.c are being successfully compiled and linked into the makefile maze.
2011-10-29-20.50.43: Moved MAX_PTHREAD from  c/h/runtime-configuration.h  to  src/c/mythryl-config.h  because it is a critical configuration parameter and I want to collect those in the latter.
2011-10-29-20.32.19: Pervasively changed  #ifdef MULTICORE_SUPPORT  to  #if WANT_PTHREAD_SUPPORT.
2011-10-29-16.19.28: src/c/pthread/pthread-on-posix-threads.c: Add   #include <pthread.h>   to file.
2011-10-28-19.36.40: src/c/o/Makefile.in: Changed  LIBMULTICORE_OBJS = 'OBJS=$$(SGI_OBJS)'  ->  LIBMULTICORE_OBJS = 'OBJS=$$(POSIX_THREADS_OBJS)'.  SGI_OBJS is pthread-sgi.o, old code depending on SGI hardware from the early 1990s;  POSIX_THREADS_OBJS is pthread-on-posix-threads.o, which will be an implementation based on the modern posix-threads API (which was first defined in 1996).
2011-10-28-19.25.08: Created src/c/mythryl-config.h -- the idea is that src/c/config.h is synthesized by gnu autoconf and records resource availability via HAVE_FOO #defines, whereas src/c/mythryl-config.h is manually mantained and records policy decisions via WANT_FOO #defines.  All .c files now #include src/c/mythryl-config.h, which then in turn #includes src/c/config.h.
2011-10-28-19.03.56: src/c/lib/pthread/:  Combined the pre-existing files libmythryl-pthread.c, cfun-list.h, cfun-proto-list.h, max-pthreads.c, release-pthread.c and spin-lock.c into a single file libmythryl-pthread.c.  This is less mickeymouse, more maintaianble, and declutters the global namespace by making all the functions static (local) instead of global.
2011-10-28-18.11.07: src/c/h/runtime-pthread.h: For sanity and consistency, changed mc_ (multicore) prefixes to pth_ (pthread).
2011-10-28-17.44.52: src/c/h/pthread-state.h: Changed 'struct pthread' -> 'struct pthread_state_struct' to reduce potential for conflict with <pthread.h> header stuff.
2011-10-28-17.20.47: Renamed  src/c/h/pthread.h -> src/c/h/pthread-state.h  to reduce potential for confusion with <pthread.h> header file.
2011-10-28-17.10.27: Did a clone-and-rename on  src/c/pthread/pthread-on-sgi.c  to produce zeroth-order   src/c/pthread/pthread-on-posix-threads.c  file.
2011-10-28-16.08.23: For clarity and consistency renamed  src/c/pthread/sgi-multicore.c -> src/c/pthread/pthread-on-sgi.c.
2011-10-28-15.58.40: For clarity and consistency renamed  src/c/pthread/solaris-multicore.c -> src/c/pthread/pthread-on-solaris.c.
2011-10-28-15.44.33: For clarity and consistency renamed  src/c/h/runtime-multicore.h -> src/c/h/runtime-pthread.h.
2011-10-28-15.36.46: For consistency (if not perhaps clarity) renamed  src/lib/std/src/posix-thread.api -> src/lib/std/src/pthread.api  and    src/lib/std/src/posix-thread.pkg -> src/lib/std/src/pthread.pkg.   src/c/lib/pthread/cfun-list.h:  Changed CLIB_NAME string from multicore to pthread.
2011-10-28-13.40.13: For clarity and consistency renamed  src/c/heapcleaner/multicore-cleaning-stuff.c -> src/c/heapcleaner/pthread-cleaning-stuff.c  and  src/c/lib/pthread/libmythryl-multicore.c -> src/c/lib/pthread/libmythryl-pthread.c.
2011-10-28-13.08.22: For clarity and consistency renamed  src/c/h/cleaner.h -> src/c/h/heapcleaner.h.
2011-10-28-12.57.45: For clarity and consistency renamed  src/c/heapcleaner/cleaner-statistics.h -> src/c/heapcleaner/heapcleaner-statistics.h  and  src/c/h/cleaner-statistics-2.h -> src/c/h/heapcleaner-statistics-2.h.
2011-10-28-12.41.06: For clarity and consistency renamed  src/c/heapcleaner/cleaner-initialization.c -> src/c/heapcleaner/heapcleaner-initialization.c.
2011-10-28-12.27.02: For clarity and consistency renamed  src/c/heapcleaner/cleaner-stuff.c -> src/c/heapcleaner/heapcleaner-stuff.c.
2011-10-28-12.13.24: For clarity and consistency renamed  src/c/heapcleaner/call-cleaner.c -> src/c/heapcleaner/call-heapcleaner.c.
2011-10-28-12.05.48: For clarity and consistency renamed  src/c/lib/heap/cleaner-control.c -> src/c/lib/heap/heapcleaner-control.c.
2011-10-28-11.55.47: For clarity and consistency renamed  src/c/cleaner/ -> src/c/heapcleaner/.
2011-10-28-11.33.35: For consistency and clarity renamed  src/c/lib/multicore -> src/c/lib/pthread  and  src/c/multicore to src/c/pthread.
2011-10-27-22.32.42: Renamed src/lib/std/src/multicore.api -> src/lib/std/src/posix-thread.api and  src/lib/std/src/multicore.pkg -> src/lib/std/src/posix-thread.pkg because in practice it will wind up being the Mythryl-level interface to posix thread functionality.
2011-10-27-22.03.49: src/lib/std/src/multicore.api: Expanded skeletal api per original Portable Multiprocessor Interface for SML/NJ paper.
2011-10-27-18.32.00: src/lib/std/standard.lib: Added api Multicore and pkg multicore to exports.  src/lib/std/src/multicore.pkg: Now looks up actual fns from src/c/lib/multicore/libmythryl-multicore.c. (Types are still bogus.)
2011-10-27-17.32.58: src/lib/std/standard.lib: Added api Multicore and pkg multicore to exports.  src/lib/std/src/multicore.pkg: Now looks up actual fns from src/c/lib/multicore/libmythryl-multicore.c. (Types are still bogus.)
2011-10-27-17.32.58: src/lib/std/src/: Did clone-and-edit to create placeholder multicore.api + multicore.pkg from existing ncurses.api + ncurses.pkg.
2011-10-27-12.51.30: src/c/lib/mythryl-callable-c-libraries-list.h: Commented out the #ifdef MULTICORE_SUPPORT around Libmythryl_Multicore to make it permanently a part of the system.
2011-10-27-12.29.42: src/c/o/Makefile.in: Added /multicore/libmythryl-multicore.a interface code to CLIBS so it would start getting compiled again (after 15 years! :-)
2011-10-27-12.11.34: src/c/o/Makefile.in: Commenting.
2011-10-26-22.12.08: Random commenting re multicore library stuff.
2011-10-26-22.12.08: src/c/o/Makefile.intel32-linux: commenting.  Tried pervasively changing mythryl-runtime-ia32 -> mythryl-runtime-intel32 but got no in-core heap image found from src/c/cleaner/import-heap.c which baffled me, so backed that out.  Another day.
2011-10-26-14.07.06: src/c/h/runtime-multicore.h:  Extensive analysis and commenting of the API for platform-specific multicore support.
2011-10-23-13.36.43: Test check-in.
2011-10-23-13.27.16: src/lib/src/gtk-unit-test.pkg, src/lib/src/gtk-via-pipe-unit-test.pkg: Dropped  tests suffix from name string because it is a nuisance.
2011-10-23-12.15.52: src/lib/src/gtk.api: Made Widget abstract again instead of exporting its Int implementation.  (Did the latter for debugging, forgot to clean up when done.)
2011-10-23-12.08.22: Tidying centering on src/lib/compiler/front/typer-stuff/types/types.api, in particular moving the YES/NO/... equality-type stuff into a new eq_type subpackage to improve namespace cleanliness.  src/lib/core/internal/mythryl-compiler-version.pkg: Bumped version from 6.0.0 -> 6.0.1 just to be distinct from the 6.0.0 release.  Fixed two doc typos pointed out by spiralofhope -- thanks!
2011-10-22-10.44.24: src/lib/std/src/list.api: Minor cleaning.
2011-10-15-02.45.49: src/lib/src/make-gtk-glue:  Fixed several places where the generated code was still expecting an Int arg, when the new arrangement is to pass it a (Session, Int) tuple.  Also, write_gtk_driver_c_set_callback_fun was using 'widget' where 'w0' was required.  src/lib/core/internal/mythryl-compiler-version.pkg: Advanced version from 5.3.0 -> 6.0.0 in celebration of the fact the codebase now builds and checks entirely without warnings. Yippee! :-)
2011-10-14-12.05.32: Additional commenting and cross-referencing in src/lib/src/gtk*pkg.
2011-10-13-03.11.04: Fixed: For some months 'make rest' had been failing to build src/lib/compiler/back/low/tools/arch/make-sourcecode-for-backend-packages.lib.frozen. Immediate cause was that the .lib file was incorrectly using SUBLIBRARY_EXPORTS / SUBLIBRARY_COMPONENTS instead of LIBRARY_EXPORTS / LIBRARY_COMPONENTS. Aggravating factor was that src/app/makelib/parse/libfile-parser-g.pkg was issuing no error message in this case, instead merely silently ignoring the freeze command.  Fixing this exposed some other files incorrectly using SUB* instead of LIB*, in particular sh/_build-an-executable-mythryl-heap-image and etc/mythryl-compiler-root.lib. All fixed.
2011-10-11-23.41.30: src/app/makelib/mythryl-compiler-compiler/mythryl-compiler-compiler-g.pkg, src/app/makelib/parse/libfile-parser-g.pkg: Added logging support.
2011-10-11-23.08.01: src/lib/std/src/io/file-g.pkg: Using previous, added logic to suppress multiple logfile headers.
2011-10-11-21.55.57: src/lib/std/src/io/file.api: Added exists: String -> Bool which returns TRUE iff given filepath can be 'stat'-ed successfully.
2011-10-11-12.42.11: src/lib/std/src/io/file.api: For consistency and brevity, renamed pure_io subpackage to pio.
2011-10-11-11.50.56: src/lib/std/src/io/file-g.pkg:  To keep multiple processes from stepping on each other's log output, changed logprint to use  open_for_append  rather than  open_for_write.
2011-10-11-11.24.03: src/app/makelib/freezefile/freezefile-g.pkg: Added logging support.
2011-10-11-10.29.37: src/lib/std/src/io/file-g.pkg: Tweaked the logfile blurb yet again.  src/app/makelib/main/makelib-g.pkg: Added logging support.
2011-10-11-00.39.39: src/lib/std/src/io/file-g.pkg:  make_logstring:  Changed  drop_leading_blanks -> drop_leading_whitespace.
2011-10-11-00.05.24: src/lib/std/src/io/file-g.pkg: Update top-of-logfile blurb.
2011-10-10-14.11.36: src/lib/compiler/back/low/treecode/operand-table-g.pkg:  For sanity renamed opn -> operand throughout.  src/lib/compiler/back/low/code/machcode-universals.api (etc):  To make preceding work, renamed opn -> operand throughout.
2011-10-10-13.28.39: src/lib/compiler/back/low/treecode/operand-table-g.pkg:  For consistency and clarity renamed word -> unt as appropriate.
2011-10-10-13.12.40: src/lib/compiler/back/low/treecode/operand-table-g.pkg:  For consistency and clarity renamed int1 -> one_word_int throughout.  For sanity and the greater glory of Samuel Johnson renamed mk -> make throughout.
2011-10-10-13.04.31: src/lib/compiler/back/low/treecode/operand-table-g.pkg:  For clarity and consistency renamed word32 -> one_word_unt throughout.
2011-10-10-12.58.09: src/lib/compiler/back/low/treecode/operand-table-g.pkg: For clarity and consistency renamed *int_inf* -> *multiword_int* throughout.
2011-10-10-12.50.57: src/lib/compiler/back/low/treecode/operand-table-g.pkg:  Fixed some accumulated bitrot.
2011-10-10-12.36.32: src/lib/src/hashtable.api: Renamed lookup => look_up because 'lookup' is a noun and 'look up' is the corresponding verb.  Dammit.
2011-10-10-12.18.04: src/lib/src/hashtable.api: make_hashtable: For clarity and consistency changed second arg from   (Int, Exception)   to   { size_hint: Int, not_found_exception: Exception }.   src/lib/compiler/back/low/treecode/rtl-props.api:  Fixed some accumulated bitrot.
2011-10-10-11.16.13: src/lib/std/src/nj/export.api (etc):  To make code more self-documenting added   Fork_Result = AM_PARENT | AM_CHILD;  and changed   fork_to_disk   from   String -> Bool   to   String -> Fork_Result.
2011-10-10-10.55.49: src/lib/core/internal/make-mythryld-executable.pkg:  Corrected alignment of compiletime console-narration output.
2011-10-10-10.43.27: src/c/main/load-compiledfiles.c: Corrected alignment of compiletime console-narration output.
2011-10-10-10.32.33: Minor commenting in make-sourcecode-for-backend-* and src/lib/compiler/back/low/*/*.architecture-description.
2011-10-09-21.41.15: src/lib/src/make-gtk-glue:  write_gtk_driver_c_set_callback_fun:  Changed   "GtkWidget* w0 ="   ->   "GtkWidget* w0 __attribute__((unused)) ="   to suppress some unused-variable warnings.   Makefile:  Added cheg: target to exercise gtk-glue, in the hope of avoiding future bitrot accumulation in that subsystem.  After five years, the C layer *finally* compiles warning-free at -Wall! :-) :-) :-)
2011-10-09-14.23.20: src/lib/src/make-gtk-glue: Fix two bitrots, in particular CFUNC was supplying 3 instead of 4 args. (fn name duplicated to ease changes).
2011-10-09-13.46.09: Fixed bitrot due to my not doing 'make gtk-glue' regularly:  src/lib/src/gtk-g.pkg: Changed imp::set -> int_map::set.  src/lib/src/make-gtk-glue: Changed list_mergesort::sort -> list_mergesort::sort_list and eight_bye_float -> eight_byte_float.
2011-10-08-22.28.02: src/c/lib/posix-os/tmpname.c: Rewrote to not use tmpnam(), which might be a bit better and suppresses a warning.  Created src/c/lib/posix-file-system/mkstemp.c, recommended as a more secure alternative, accessible via src/lib/std/src/posix-1003.1b/posix-file.pkg: UNTESTED.
2011-10-08-20.26.48: src/c/cleaner/mem-writer.c: Suppressed three compile warnings.
2011-10-08-20.13.12: src/c/cleaner/import-heap-stuff.c:  Suppressed two warnings by addingd missing 'return SUCCESS' in heapio__seek and casting strlen arg from Unt8* to> char*.
2011-10-08-20.02.44: src/c/lib/socket/hexdump-if.c:  Fixed a "implicit declaration of function isprint" warning by including <ctype.h>.
2011-10-08-19.33.57: src/c/cleaner/datastructure-pickler-cleaner.c:  Suppressed "chunk_bytesize may be used uninitialized in this function" warning.
2011-10-08-19.28.26: src/c/lib/socket/get-or-set-boolean-socket-option.c:  Fixed "pointer targets in passing argument 5 of getsockopt differ in signedness" warning.
2011-10-08-19.15.16: src/c/cleaner/make-package-literals-via-bytecode-interpreter.c:  Suppressed "unused variable max_depth" warning.
2011-10-08-19.01.36: src/c/lib/socket/util-mkhostent.c: Suppressed four compiler warnings.
2011-10-08-18.39.14: src/c/cleaner/clean-n-agegroups.c:  Suppressed a "scan_memory_for_bogus_pointers declared static but never defined" compiler warning.
2011-10-08-18.28.36: src/c/cleaner/cleaner-initialization.c: Added proper #include files for write() and gettimeofday(); rewrote to pass arg of correct type to gettimeofday().
2011-10-08-17.55.17: For sanity, consistency, and the greater glory of Cthulhu:  Tweaked src/c/h/system-dependent-unix-stuff.h to no longer trigger "OS_NAME redefined" warnings;  tweaked src/c/h/architecture-and-os-names-system-dependent.h to generate OS_NAME values which are valid lower-case identifiers;  tweaked src/lib/std/src/nj/platform-properties.pkg to be consistent with the latter values.
2011-10-08-16.52.56: src/c/machine-dependent/posix-profiling-support.c: Changed  SET_SIGNAL_HANDLER( SIGVTALRM, SIG_DFL );  ->  SET_SIGNAL_HANDLER( SIGVTALRM, (void*)SIG_DFL )  to suppress a spurious "assignment from incompatible pointer type" warning.
2011-10-08-16.13.10: src/c/main/runtime-main.c: Conditionally included <unistd.h> to suppress implicit-declaration compiler warnings on functions 'close' and 'write'.
2011-10-08-02.01.57: src/lib/x-kit/widget/menu/popup-menu.pkg:  Suppressed nonexhaustive-match compiler warning.  That was the last one. :-)
2011-10-07-23.45.07: src/lib/compiler/back/low/tools/match-compiler/match-gen-g.pkg: Fixed nonexhaustive-match compiler warning (a real bug this time).
2011-10-07-22.45.30: src/lib/x-kit/xclient/pkg/window/keymap-imp.pkg:  Suppressed a nonexhaustive-match compiler warning.
2011-10-07-22.23.53: src/lib/x-kit/xclient/pkg/wire/xsocket.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-07-15.45.44: src/lib/x-kit/xclient/pkg/window/keysym-to-ascii.pkg:  Suppressed some nonexhaustive-match compiler warnings.
2011-10-07-15.18.17: src/lib/x-kit/style/widget-style-g.pkg:  Suppressed some nonexhaustive-match compiler warnings.
2011-10-07-14.32.09: src/lib/x-kit/draw/spline.pkg: Suppressed nonexhaustive-match compiler warning.
2011-10-07-13.23.02: src/lib/compiler/back/low/tools/arch/adl-gen-ssaprops.pkg: Suppressed nonexhaustive-match compiler warning.
2011-10-07-13.01.15: src/lib/compiler/back/low/tools/arch/make-sourcecode-for-translate-machcode-to-asmcode-xxx-g-package.pkg: Suppressed nonexhaustive-match compiler warnings.
2011-10-07-12.25.45: src/lib/compiler/back/low/tools/arch/adl-typing.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-07-11.59.58: Try II: src/lib/compiler/back/low/tools/arch/architecture-description.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-07-11.47.32: src/lib/compiler/back/low/tools/arch/architecture-description.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-07-11.47.32: src/lib/compiler/back/low/tools/adl-syntax/adl-raw-syntax-translation.pkg:  Suppressed a nonexhaustive-match compile warning.
2011-10-07-11.34.25: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Suppressed a nonexhaustive-match compiler warning. 'make compiler' now compiles warning-free at the Mythryl level.
2011-10-07-11.17.52: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg:  Suppressed a nonexhaustive-match compiler warning.
2011-10-07-10.59.39: src/lib/compiler/back/low/pwrpc32/pwrpc32.architecture-description: Suppressed four nonexhaustive-match compiler warnings that manifested in src/lib/compiler/back/low/pwrpc32/emit/translate-machcode-to-execode-pwrpc32-g.codemade.pkg.
2011-10-07-10.05.39: src/lib/compiler/back/top/main/backend-tophalf-g.pkg:  Suppressed a nonexhaustive-match compile warning.
2011-10-06-23.21.19: src/lib/regex/backend/dfa.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-06-22.59.25: src/lib/regex/backend/nfa.pkg:  Suppressed a nonexhaustive-match compiler warning.
2011-10-06-22.45.46: src/lib/src/lib/thread-kit/src/core-thread-kit/mailslot.pkg: Suppressed some nonexhaustive-match compiler warnings.
2011-10-06-22.20.44: src/lib/compiler/back/low/tools/arch/adl-type-junk.pkg: Suppressed some nonexhaustive-match compiler warnings.
2011-10-06-21.15.48: src/lib/compiler/back/low/tools/parser/architecture-description-language.grammar: Suppressed a couple of nonexhaustive-match compiler warnings.
2011-10-06-21.04.16: src/lib/src/lib/thread-kit/src/core-thread-kit/oneshot-maildrop.pkg: Tidying, suppressed a nonexhaustive-match compiler warning.
2011-10-06-15.56.25: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-io-manager.pkg: Suppressed nonexhaustive-match compiler warning.
2011-10-06-15.56.25: src/lib/src/lib/thread-kit/src/core-thread-kit/maildrop.pkg: Suppressed a nonexhaustive-match compiler warning.
2011-10-06-15.40.42: src/lib/compiler/back/low/tools/adl-syntax/adl-raw-syntax-unparser.pkg: Suppressed two more nonexhaustive-match compiler warnings.
2011-10-06-14.48.12: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.pkg: Suppressed another nonexhaustive-match compiler warning.
2011-10-06-14.34.38: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.pkg: Tidying.
2011-10-06-13.20.35: src/lib/src/lib/thread-kit/src/core-thread-kit/mailqueue.pkg: Suppressed a nonexhaustive-match warning.
2011-10-06-13.09.53: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Tidying.
2011-10-06-12.54.51: Try II: src/lib/std/src/: For clarity and consistency, renamed exceptions.api -> exceptions-guts.api, and internally renamed api Pre_Exceptions -> Exceptions_Guts.
2011-10-06-12.45.44: src/lib/std/src/: For clarity and consistency, renamed exceptions.api -> exceptions-guts.api, and internally renamed api Pre_Exceptions -> Exceptions_Guts.
2011-10-06-12.45.44: Established src/lib/std/exceptions.api, extracting its contents from the bottom of src/lib/std/src/exceptions.api.
2011-10-06-12.35.59: Renamed src/lib/std/src/exceptions.pkg -> src/lib/std/src/exceptions-guts.pkg for consistency and to distinguish it clearly from src/lib/std/exceptions.pkg.
2011-10-02-20.28.46: src/lib/: renamed controls/ -> global-controls/ and within it control* -> global-control*, as a first step toward eventually getting rid of them completely.  Every one of these is a global variable, and every global variable is a roadblock on the way to concurrent programming in Mythryl.
2011-10-02-14.11.38: src/lib/compiler/toplevel/main/: Renamed controls.api -> global-controls.api, controls.pkg -> global-controls.pkg, partly for clarity, partly to free up those names for an eventual local-controls (i.e., pure-functional red-black-tree-based) package.
2011-10-01-06.24.47: Minor tidying.
2011-10-01-06.01.04: src/lib/core/internal/mythryl-compiler-version.pkg: Advanced version to 5.3.0 because Parallel Compiles (Take Two) seems to be working.
2011-10-01-03.25.04: src/lib/std/src/posix/spawn.api: Added support for (REDIRECT_STDERR_TO_STDOUT_IN_CHILD  Bool) option to spawn_process{} and fork_process{}.
2011-10-01-02.56.21: src/lib/std/src/posix/spawn.api: Thoroughly reworked this API along the lines suggested by Joe Wells.
2011-09-30-13.40.36: For clarity:  src/lib/std/src/posix-1003.1b/posix-file.api: Renamed make_pipe -> make_named_pipe. src/lib/std/src/posix-1003.1b/posix-io.api: Renamed pipe -> make_pipe.
2011-09-30-03.38.47: Dropped the old remote-compile stuff because 1) It never worked; 2) I cannot forsee much if any practical use for it. 3) It complicates the code. 4) The new fork()-ing based parallel compilation mechanism is simpler and much more useful in practice.  This involved removing:  src/app/makelib/concurrency/dummy-makelib-client.pkg, src/app/makelib/concurrency/makelib-client-queen.api, src/app/makelib/concurrency/makelib-client-queen.pkg, src/app/makelib/main/makelib-server.pkg and all refernces to them.  Yay!!
2011-09-29-22.33.05: src/lib/std/src/posix/spawn.api: From common decency renamed txt_instream_of -> get_text_input_stream_from etc.  Every time you mutilate a word, God kills a kitten.  Think of the kittens.
2011-09-29-19.41.12: src/app/makelib/compile/compile-in-dependency-order-g.pkg: Parallel compiles working. src/lib/core/internal/mythryl-compiler-version.pkg: Advanced to 5.2.0 in honor of previous.
2011-09-29-04.01.40: src/lib/std/src/posix/spawn.api: To simplify the api and close a race-condition window, changed process_id_of type from  Process(X,Y) -> Null_Or(Int)  to   Process(X,Y) -> Int.   src/lib/std/src/posix/spawn.pkg: To implement previous, changed Process_Status to remember the process_id of DEAD processes.
2011-09-29-03.26.31: src/lib/std/src/posix/spawn.api: For clarity, renamed pid_of -> process_id_of. Clarify globally, abbreviate locally.
2011-09-28-03.41.11: src/c/lib/posix-os/poll.c: This was segfaulting due to basically doing  if (ptr==NULL) foo=*ptr. Fixed. This was my fault; the ancestral SML/NJ 110.58 was correct.
2011-09-27-21.46.01: src/c/lib/socket/: Added to-log.c to give Mythryl-level access to log-if.c
2011-09-27-12.55.22: Add a paragraph to src/A.LOGGER.OVERVIEW.
2011-09-27-00.42.12: Bumped version number to 5.1.0 in honor of previous check-in.
2011-09-26-23.11.45: src/lib/src/lib/thread-kit/src/lib/logger.pkg: Rationalized and coordinated C-level, monothread-mythryl and multithread-mythryl logging by moving much of the guts of logger.pkg into src/lib/std/src/io/file-g.pkg, making the calls at all three levels more alike and adding logging of pid to the line format.
2011-09-26-03.37.27: src/lib/src/lib/thread-kit/src/lib/logger.pkg: Tidying.
2011-09-26-01.10.22: src/lib/src/lib/thread-kit/src/lib/: For clarity renamed tracing.api -> logger.api, tracing.pkg -> logger.pkg.  src/lib/x-kit/xclient/pkg/stuff/: For clarity and consistency renamed xtracing.pkg -> xlogger.pkg
2011-09-25-02.03.37: src/lib/std/src/posix/spawn.api: Added pid_of call.
2011-09-24-16.59.03: src/app/makelib/compile/compile-in-dependency-order-g.pkg: Located and marked proper spot to fork() off compile subprocesses.
2011-09-24-13.03.57: src/app/makelib/concurrency/makelib-thread-queen.pkg: Added cores_in_use and core_wait_queue to Makelib_Thread_Queen state record, as a first step toward supporting multicore compiles via fork().
2011-09-24-12.24.19: src/lib/src/lib/thread-kit/src/winix/threadkit-winix-io.api: For clarity and consistency, renamed 'poll' -> 'wait_for_io_opportunity' and 'poll_mailop' -> 'wait_for_io_opportunity_mailop'. Pervasively: Added 'select' as a deprecated synonym for 'wait_for_io_opportunity', so that unix folks looking for 'select' in the function index will get led to the right spots.
2011-09-24-12.00.21: Lots of stuff. src/lib/std/src/winix/winix-io.api: Renamed poll_io_descriptors -> wait_for_io_opportunity (etc) because the whole point is that it does not poll, it blocks. src/app/makelib/concurrency/makelib-thread.pkg: Eliminated global variables by introducing a Makelib_Thread_Queen state record; renamed package to makelib-thread-queen.pkg.  Similarly eliminated global variables from makelib-client.pkg and renamed to makelib-client-queen.pkg.
2011-09-23-22.54.43: src/app/makelib/concurrency/: Renamed makelib-thread.pkg -> makelib-thread-boss.pkg as first step to elimating the package's global variables.
2011-09-23-14.40.43: src/lib/std/src/posix/spawn.pkg: Factored fork_process' out of spawn_process_in_environment, then added a new fork_process call (which I need for compile-in-dependency-order-g.pkg work.)
2011-09-23-02.59.17: src/lib/std/src/unix/spawn.api: Reversing edit of 2010-09-11-11.29.22, renamed process -> spawn_process and process_in_environment -> spawn_process_in_environment because I've standardized on not considering the package name part of a function name (package might get renamed at point of use -- by current programming protocol, will always be renamed at point of use).
2011-09-22-19.17.26: src/app/makelib/compile/compile-in-dependency-order-g.pkg: Tidying.
2011-09-21-14.36.41: src/app/makelib/concurrency/makelib-thread.pkg: Replaced make_unix_pipe_input_wait_queue with new read_line_from_unix_pipe fn -- this is a more natural unit of functionality which streamlines the client-end code.
2011-09-21-14.07.30: src/app/makelib/concurrency/makelib-thread.pkg: For clarity, renamed spawn_stream_proxy_thread -> make_unix_pipe_input_wait_queue.
2011-09-21-13.52.37: src/app/makelib/main/: For clarity and accuracy, renamed compile-server.pkg -> makelib-server.pkg.  src/app/makelib/concurrency/: Similarly renamed compile-client.api -> makelib-client.api, renamed compile-client.pkg -> makelib-client.pkg, dummy-compile-client.pkg -> dummy-makelib-client.pkg.
2011-09-21-11.35.33: app/makelib/simple-concurrency/: Renamed simple-concurrency.sublib -> makelib-concurrency.sublib for consistency with previous.
2011-09-21-11.25.51: app/makelib/simple-concurrency/: Renamed simple-thread.pkg -> makelib-thread.pkg because it is a dedicated package neither intended nor suitable for use outside of makelib.
2011-09-21-05.13.02: src/app/makelib/simple-concurrency/compile-client.pkg: Random cleaning.
2011-09-21-04.51.00: src/lib/std/src/winix/winix-io.api: For clarity, renamed poll(poll_requests,timeout) -> poll_io_descriptors { poll_requests, timeout }.
2011-09-20-22.32.24: src/app/makelib/compile/compile-in-dependency-order-g.pkg: Tidying.
2011-09-18-23.44.06: For clarity pervasively renamed filesys -> file-system.
2011-09-18-23.17.06: For clarity, renamed src/c/lib/posix-procenv -> src/c/lib/posix-process-environment.
2011-09-18-23.05.47: src/app/makelib/compile/compile-in-dependency-order-g.pkg: Cleaning, commenting and clarifying.
2011-09-18-15.37.15: Renamed graphwalk to dagwalk everywhere for accuracy and brevity, and because it is more euphonious.
2011-09-18-14.37.32: src/lib/core/internal/mythryl-compiler-version.pkg: Belatedly bumped version to 5.0.1 in honor of answer_42's bugfix.
2011-09-18-12.50.31: sh/_guess-host-architecture-and-os: Backpatched answer_42's (via Michele Bini) "3.0.*) ;;" fix for x86 Linux kernel 3.0.x support.
2011-09-18-01.19.50: src/lib/std/src/list.api:  Added new map' and apply' (reverse arg order from map and apply) from src/lib/core/init/pervasive.pkg.
2011-09-18-01.10.22: src/lib/std/src/list.api: For clarity renamed map' -> map_partial_fn.  src/lib/core/init/pervasive.pkg: Added map' x f = map f x, apply' x f = apply f x.
2011-09-17-13.41.33: 5.0.0 release.
2011-09-17-04.08.10: src/app/benchmarks/:  Added tagged-int-shellsort-no-bounds-checking.pkg -- more than twice as fast as tagged-int-shellsort.pkg.
2011-09-17-03.56.22: src/app/benchmarks/tagged-int-shellsort.pkg: Implemented.
2011-09-17-03.29.01: src/app/benchmarks/: Established dummy tagged-int-shellsort.pkg benchmark.
2011-09-17-03.11.42: src/lib/compiler/back/top/translate/translate-deep-syntax-to-lambdacode.pkg: Implemented compiler::check_vector_index_bounds control.
2011-09-17-02.35.06: src/lib/compiler/toplevel/main/compiler-controls.pkg:  Added compiler::check_vector_index_bounds control. (Does nothing yet.)
2011-09-17-00.08.37: src/lib/compiler/toplevel/main/: Renamed backend-controls.pkg -> compiler-controls.pkg and thus backend::trap_int_overflow -> compiler::trap_int_overflow (etc), to be less confusing the the application programmer.
2011-09-16-02.36.52: src/lib/compiler/toplevel/main/backend-controls.pkg: trap_int_overflow now defaults to FALSE.
2011-09-16-00.36.25: src/lib/compiler/back/low/main/main/translate-nextcode-to-treecode-g.pkg: Tweaked to generate overflow-trapping ops (*_OR_TRAP) only if  *bec::trap_int_overflow  is  TRUE.
2011-09-15-23.56.25: src/lib/compiler/back/low/treecode/treecode-form.api:  For clarity, renamed NEGT -> NEG_OR_TRAP, ADDT -> ADD_OR_TRAP, SUBT -> SUB_OR_TRAP, MULT -> MULS_OR_TRAP, DIVT -> DIVS_OR_TRAP. (These are the arithmetic-overflow-trapping versions of NEG/ADD/SUB/MULS/DIVS respectively.  There is no REM_OR_TRAP because the remainder op never overflows.)
2011-09-15-23.43.41: src/lib/compiler/toplevel/main/backend-controls.pkg: Did a clone-and-hack with insufficient hack and backend::trap_int_overflow wound up named "verbose_compile_log", oops. Fixed.
2011-09-15-21.58.24: In all files using OVERFLOW, added the line   #DO set_control "backend::trap_int_overflow" "TRUE";
2011-09-15-15.05.34: src/lib/compiler/toplevel/main/backend-controls.pkg: Added   backend::trap_int_overflow   control. (Does nothing as yet.)
2011-09-15-13.21.21: src/lib/compiler/toplevel/main/backend-controls.pkg: Added backend::verbose_compile_log control; now to get verbose compile logs you can just put '#DO set_control "backend::verbose_compile_log" "TRUE";' at the top of the file, instead of having to edit fun do_verbose_logging_for in src/app/makelib/compile/compile-in-dependency-order-g.pkg and recompile the compiler.
2011-09-15-13.01.35: #DO code evaluation no longer echoed to stdout -- was cluttering the compiler console narration.
2011-09-15-02.09.35: Benchmark code tweaking.
2011-09-14-19.34.12: src/app/benchmarks/:  Did a clone-and-mutate on   tagged-int-loop.pkg  to produce a second benchmark,  src/app/benchmarks/one-word-int-loop.pkg.
2011-09-14-19.16.02: src/lib/std/src/cpu-timer.api:  For clarity, changed gc -> heapcleaner and nongc -> program throughout.
2011-09-14-18.34.12: src/lib/std/src/cpu-timer.api: Renamed everything for clarity, changed value types from time::Time to Float for convenience.
2011-09-14-15.29.31: src/lib/std/src/time.api: For clarity and to proactively reduce the probability of obscure bugs, renamed  to_float -> to_float_seconds  and  from_float -> from_float_seconds.
2011-09-14-14.40.44: Added src/app/benchmarks/tagged-int-loop.pkg benchmark, got it to compile and run.
2011-09-14-14.12.39: src/lib/std/src/cpu-timer.api: Added Cpu_Times type as a convenience for client packages.
2011-09-14-12.41.07: Zeroth-order   "make benchmarks"   framework compiles and runs.
2011-09-14-12.32.51: Renamed  src/app/benchmark/ -> src/app/benchmarks/  because I keep typing it in that way anyhow.
2011-09-14-12.15.36: Cloned  "make check"  to produce a zeroth-order  "make benchmarks".
2011-09-14-00.36.21: Downloaded a 1996 Xavier Leroy smlnj benchmark set and saved it in new directory src/app/benchmark/ for eventual translation into Mythryl.
2011-09-14-00.15.52: Try 2: src/lib/controls/control-forms.pkg: Renamed  Priority -> Menu_Rank (etc) because that is what it in fact is.  src/lib/src/list-mergesort.pkg: For clarity renamed sort -> sort_list, sorted -> list_is_sorted, unique_sort -> sort_list_and_drop_duplicates.
2011-09-14-00.07.24: src/lib/controls/control-forms.pkg: Renamed  Priority -> Menu_Rank (etc) because that is what it in fact is.  src/lib/src/list-mergesort.pkg: For clarity renamed sort -> sort_list, sorted -> list_is_sorted, unique_sort -> sort_list_and_drop_duplicates.
2011-09-14-00.07.24: src/lib/controls/control-forms.pkg: Renamed  Priority -> Menu_Rank (etc) because that is what it in fact is.  src/lib/src/list-mergesort.pkg: For clarity renamed sort -> sort_list, sorted -> list_is_sorted, unique_sort -> sort_list_and_drop_duplicates.
2011-09-13-21.23.33: src/lib/controls/: Renamed  control-reps.pkg -> control-forms.pkg because every time we mutilate a word, God kills a kitten.  Think of the kittens.
2011-09-13-20.48.49: src/lib/compiler/toplevel/main/: Renamed  backend-lowhalf-controls.pkg -> backend-controls.pkg  because they are used throughout the backend.
2011-09-13-12.09.40: sh/make-install: patch -p1 in DESTDIR support. Thanks to Michele Bini for contributing this, not to mention Debianizing the whole Mythryl distribution!
2011-09-13-01.24.43: #DO now working to a first approximation.
2011-09-11-17.35.33: Random tidying, mostly changing instances of Sourcecode_Info to be named sourcecode_info.
2011-09-11-14.04.38: src/lib/compiler/front/parser/raw-syntax/raw-syntax.pkg:  Added PRE_COMPILE_CODE(String) to Declaration.
2011-09-11-13.05.06: Zeroth-order src/lib/compiler/front/parser/lex/mythryl.lex pre_compile_code support:  #DO foo bar<eol>  functions as a comment.
2011-09-11-02.19.13: Much cleaning centering on src/lib/compiler/front/basics/stats/compile-statistics.pkg; Added new tokens PRE_COMPILE_CODE and POSTCOMPILE_CODE in src/lib/compiler/front/parser/yacc/mythryl.grammar.
2011-09-10-03.00.11: Moved memoize.pkg from src/app/makelib/stuff/ to src/lib/std/ because it is generally useful, not compiler-specific.
2011-09-10-02.03.50: src/lib/compiler/front/basics/print/: Renamed printcontrol.pkg -> control-print.pkg because in fact it contained package control_print and api Control_Print.
2011-09-08-05.34.53: src/lib/compiler/front/basics/source/: Renamed source-code-source -> sourcecode-info.pkg for clarity, much random cleaning.
2011-09-08-05.34.53: Document Michele Binis .deb archive (! :-) for Mythryl.
2011-09-08-05.34.53: Development moved from Debian 5 (lenny) to Debian 6 (squeeze).
2011-09-08-05.20.41: Test III
2011-09-08-05.10.10: Test II
2011-09-08-03.09.46: test
2011-09-06-04.12.17: test
2011-09-06-04.12.17: 4.2.0 release: More renaming of number and vector packages.
2011-09-03-07.04.37: Random tidying centering on src/lib/core/init/built-in.pkg.
2011-09-03-05.11.18: Pervasively renamed intinf -> integer for clarity and because it has indefinite precision, never infinite precision.
2011-09-03-04.49.03: Pervasively renamed int64 -> int2 (2-word int) so as to be agnostic between 32-bit and 64-bit architectures. (Int2 will be 64 bits on 32-bit architectures, 128 bits on 64-bit architectures.)
2011-09-03-04.28.53: Pervasively renamed unt64 -> unt2 (2-word unt) so as to be agnostic between 32-bit and 64-bit architectures. (Unt2 will be 64 bits on 32-bit architectures, 128 bits on 64-bit architectures.)
2011-09-03-03.55.52: Pervasively renamed unt32 -> unt1 (1-word unt) so as to be agnostic between 32-bit and 64-bit architectures. (Unt1 will be 32 bits on 32-bit architectures, 64 bits on 64-bit architectures.)
2011-09-03-02.48.57: Pervasively renamed int32 -> int1 (1-word int) so as to be agnostic between 32-bit and 64-bit architectures. (Int1 will be 32 bits on 32-bit architectures, 64 bits on 64-bit architectures.)
2011-09-03-01.46.18: Pervasively renamed int31 -> tagged_int so as to be agnostic between 32-bit and 64-bit architectures. (Tagged ints will be 63 bits long on 64-bit architectures.)
2011-09-01-13.02.00: Switching on pass-runtime reporting via show_compile_phase_runtimes_for make-nextcode-closures-g.pkg in src/app/makelib/compile/compile-dependency-graph-walk-g.pkg appeared to trigger a heap-corruption Heisenbug...? Gone for the moment.
2011-08-29-22.26.43: Standardized on 'err' (vs 'em') as abbreviation for package error_message.
2011-08-29-16.58.23: Cleaning and commenting centered on  src/lib/compiler/toplevel/interact/compiler-state.pkg
2011-08-29-13.58.42: More cleaning and commenting centering on src/app/makelib/compile/compile-dependency-graph-walk-g.pkg
2011-08-29-12.45.39: Cleaning and commenting centering on src/app/makelib/compile/compile-dependency-graph-walk-g.pkg
2011-08-28-14.01.57: For clarity, renamed compile-treewalk-g.pkg -> compile-dependency-graph-walk-g.pkg, linking-treewalk-g.pkg -> linking-dependency-graph-walk-g.pkg.
2011-08-28-13.28.28: Cosmetics like changing  Foo( X )  ->  Foo(X)  for better readability.
2011-08-25-03.47.36: Much commenting, renaming and clarifying centering on src/lib/compiler/back/top/nextcode/nextcode-form.api, which is now largely decoded.
2011-08-22-01.32.36: src/lib/compiler/back/top/nextcode/nextcode-form.api: For clarity, renamed 'codetemp' fields to 'to_temp'.
2011-08-21-15.06.41: src/lib/compiler/back/top/closures/make-nextcode-closures-g.pkg: Changed CLOSURE_REP from tuple to record.
2011-08-21-13.15.45: Random commenting centering on src/lib/compiler/back/low/main/main/translate-nextcode-to-treecode-g.pkg
2011-08-19-04.57.16: src/lib/compiler/back/top/nextcode/nextcode-form.api: For clarity, pervasively renamed name -> codetemp.
2011-08-18-17.24.10: More fatecode -> nextcode renaming stuff.
2011-08-18-13.47.23: Try 2: Pervasively renamed fatecode -> nextcode because foo.next is clearer than foo.fate.
2011-08-10-05.12.18: Pervasively renamed fatecode -> nextcode because foo.next is clearer than foo.fate.
2011-08-14-02.09.01: Random commenting and cleaning centering on   src/lib/compiler/back/low/main/main/translate-fatecode-to-treecode-g.pkg. Pervasively renamed codestream -> codebuffer.
2011-08-13-00.33.43: src/lib/compiler/back/low/main/fatecode/emit-treecode-heapcleaner-calls-g.pkg: Decoding and commenting basically complete.
2011-08-10-05.11.51: src/lib/compiler/back/low/main/fatecode/: For clarity renamed insert-treecode-heapcleaner-calls.api -> emit-treecode-heapcleaner-calls.api, insert-treecode-heapcleaner-calls-g.pkg -> emit-treecode-heapcleaner-calls-g.pkg; Much commenting in latter.
2011-08-10-05.12.18: src/lib/compiler/back/low/main/fatecode/: For clarity renamed insert-treecode-heapcleaner-calls.api -> emit-treecode-heapcleaner-calls.api, insert-treecode-heapcleaner-calls-g.pkg -> emit-treecode-heapcleaner-calls-g.pkg; Much commenting in latter.
2011-08-08-13.39.22: Pervasively renamed all_callers_known -> private.  Appels known/escape/cont fn trichotomy terminology is terrible; private/public/fate seems the best replacement.
2011-08-07-23.46.40: src/lib/compiler/back/low/main/fatecode/insert-treecode-heapcleaner-calls-g.pkg: Improved typesafety by splitting Heapcleaner_Call into Heapcleaner_Call + Longjump_To_Heapcleaner_Call.
2011-08-07-16.11.08: src/lib/compiler/back/low/main/fatecode/insert-treecode-heapcleaner-calls-g.pkg: Random cleaning and commenting.
2011-08-06-01.37.11: src/lib/std/src/list.api: For clarity, renamed take -> take_n, drop -> drop_n.
2011-08-06-00.33.24: Random cleaning and commenting.  src/lib/std/src/io/file.api: Change attribution from Jeffrey Lau to Michele Bini per post from former.
2011-08-04-02.02.50: 4.0.0 release, try 3.
2011-08-04-02.02.50: 4.0.0 release, try 2.
2011-08-04-00.23.13: 4.0.0 release.
2011-07-23-02.40.36: First clean build of release-4 docs. :-)
2011-07-19-20.25.02: Renamed generic_socket -> plain_socket etc to avoid confusion with technical meaning of generic -- and because briefer is better when clarity holds constant! :-)
2011-07-12-02.16.51: Got time-profiling working again! :-)  Documented in src/A.TRACE-DEBUG-PROFILE.OVERVIEW. Biggest glitch was that I had renamed subscript -> get in core.pkg but not add-per-fun-call-counters-to-deep-syntax.pkg.
2011-07-04-14.18.38: For clarity, renamed abscode (abstract machine code) -> machcode (abstract machine code :-)
2011-07-03-03.45.41: src/lib/src/typelocked-hashtable.api: For clarity, changed from  make_hashtable (32, FOO)  ->  make_hashtable { size_hint => 32, not_found_exception => FOO }.  (Ye godz there are a lot of hashtables in the codebase!)
2011-06-28-00.40.16: For clarity and consistency (and England and St George!) renamed src/lib/src/union-find.pkg -> src/lib/src/disjoint-sets-with-constant-time-union.pkg
2011-06-21-00.48.03: Renamed bitmatrix{api,pkg} -> graph-by-edge-hashtable{api,pkg}, because that is what it turned out to be, on closer inspection.
2011-06-20-21.39.00: For clarity and consistency, renamed make_table -> make_hashtable in all hashtable implementations.
2011-06-20-21.22.29: For consistency, conciseness and clarity, globally renamed hash_table -> hashtable, hash-table -> hashtable etc.
2011-06-20-20.35.01: Renamed src/lib/compiler/back/low/regor/regor-bitmatrix.{api,pkg} -> src/lib/std/src/bitmatrix.{api,pkg} because there is nothing remotely compiler-specific about it -- it is just a bitmatrix implementation.
2011-06-20-15.12.45: priority-queue.api: For consistency and clarity, renamed create -> make_priority_queue and create_n to make_priority_queue'.
2011-06-13-18.14.55: For conciseness and consistency, renamed src/lib/graph/oop-directed-graph.api -> src/lib/graph/oop-digraph.api.
2011-06-13-18.14.55: For clarity, conciseness, consistency and futureproofing, renamed src/lib/graph/directed-graph.pkg -> src/lib/graph/digraph-by-adjacency-list.pkg,  src/lib/graph/directed-graph-g.pkg -> src/lib/graph/digraph-by-adjacency-list-g.pkg.
2011-06-12-00.34.29: Renamed src/lib/graph/isograph.pkg -> mapped-digraph-view.pkg
2011-06-12-00.17.54: Moved src/lib/compiler/back/low/library/bitset.pkg src/lib/graph/bit-set.pkg, src/lib/compiler/back/low/library/bitset.api src/lib/graph/bit-set.api because they are used by other src/lib/graph/* packages.
2011-06-12-00.17.54: For clarity, renamed src/lib/graph/graph.api -> src/lib/graph/oop-directed-graph.api, src/lib/graph/graph.pkg -> src/lib/graph/oop-directed-graph.pkg
2011-06-09-02.03.20: Similarly pervasively replaced "polymorphic" with "typeagnostic".
2011-06-09-00.06.47: Finally lost it and globally renamed "monomorphic" to "typelocked". "Monomorphic" is a hideous polysyllabic academic obscurantism whose relevant meaning remains a mystery even when translated from Greek into Latin ("uniform") or English ("one-shaped").
2010-11-20-00.06.42: src/runtime/c-libs/lib7-gtk/gtk-driver.c: _lib7_Gtk_gtk_init: Fixed: argc was being used uninitialized, which was segfaulting us. *BLUSH*!!
2010-11-16-13.53.28: Finished codepass converting /* ... */ -> // ... in (most) of the C code.
2010-11-16-02.49.10: More hours of changing /* ... */ -> // ... in the C code...
2010-11-15-23.09.58: src/runtime/heapcleaner/: import-heap.c export-heap.c:  More gcc -Wall driven tweaks.
2010-11-15-22.28.15: src/runtime/c-libs/lib7-socket/: recvbuffrom.c, recvfrom.c:  Two more gcc -Wall inspired fixes.
2010-11-15-21.44.57: src/runtime/heapcleaner/clean-full-heap.c:  clean_n_heap_generations: gcc -Wall warns promote_state may be used uninitialized.  Initialized it arbitrarily. There may be an actual bug here.
2010-11-15-20.47.20: src/runtime/heapcleaner/: clean-subheap.c, clean-full-heap.c:  Suppressed more harmless gcc -Wall warnings.
2010-11-15-20.33.11: src/runtime/c-libs/posix-io/lseek_64.c:  Suppressed another harmless gcc -Wall warning.
2010-11-15-20.10.46: src/runtime/c-libs/posix-io/fcntl_l_64.c: Suppressed three more harmless gcc -Wall warnings.
2010-11-15-19.05.47: src/runtime/c-libs/posix-filesys/stat_64.c: Fixed a (harmless) gcc -Wall warning.
2010-11-15-15.54.09: src/runtime/c-libs/lib7-opencv/cvLoadImage.c: gcc -Wall caught me confusing 'image' (a Mythryl-heap val) with 'ipl_image' (a C-heap val). *blush*!  Fixed.
2010-11-15-15.31.25: Another four hours or so of converting C /* ... */ comments to // comments, with incidental passing-through tidying.
2010-11-15-02.06.09: gcc -Wall complained that ctlLINGER.c ctlNODELAY.c ctlRCVBUF.c exit.c ctlSNDBUF.c getERROR.c getTYPE.c getpeername.c getsockname.c accept.c were using an int where a socklen_t was required.  Fixed.
2010-11-14-19.34.16: Changed c89 /* ... */ comments to c99 // comments many places in the C code.
2010-11-13-22.15.36: Added -std=c99 -Wall to CFLAGS everywhere.  Because Its Time, as the BITNET folks used to say...
2010-11-11-11.36.28: src/runtime/include/: Renamed virtual-processor-state.h -> pthread.h.
2010-11-10-16.12.01: src/runtime/heapcleaner/: For clarity and consistency, renamed call-gc. -> call-heapcleaner.c, init-gc.c -> heapcleaner-initialization.c.
2010-11-10-15.29.40: For clarity, renamed src/runtime/gc/ -> src/runtime/heapcleaner.
2010-11-10-15.07.42: In the C runtimes, for consistency and clarity, pervasively renamed lib7_state_t -> Task and lib7_state -> task.
2010-11-10-14.29.56: src/runtime/include/runtime-base.h: For clarity and consistency, renamed Word_t -> Val_Sized_Unt (etc).  src/lib/std/src/nj/: For clarity, renamed signals.api -> runtime-signals.api (etc).
2010-11-10-12.52.34: Much cleaning in and around the C garbage collector, including favoring heapcleaner for a name for conciseness and renaming lib7_val_t to Val to reduce clutter.
2010-11-09-22.24.21: src/runtime/include/: Renamed vproc-state.h -> virtual-processor-state.h, and dropped vp_ prefix from field names.
2010-11-09-20.44.18: src/runtime/include/runtime-state.h: struct lib7_state: Eliminated lib7_ prefixes on fieldnames -- fieldname prefixes have not been needed in C since the BDS C days.
2010-11-09-14.37.08: For clarity, renamed src/runtime/include/runtime-mp.h -> src/runtime/include/runtime-multicore.h  and  src/runtime/c-libs/lib7-mp/liblib7-mp.c src/runtime/c-libs/lib7-multicore/liblib7-multicore.c
2010-11-09-14.18.59: src/runtime/: For clarity, renamed mp/ -> multicore/.
2010-11-09-13.12.13: src/runtime: For clarity, pervasively renamed MP_SUPPORT -> MULTICORE_SUPPORT etc. (Why cannot people just say what they mean? :-)
2010-11-07-14.07.45: For clarity, pervasively replaced assembly::foo with runtime::foo. (Very little of the runtime is in assembly.)
2010-11-06-01.45.05: For clarity, pervasively renamed p_struct and pstruct to pervasive_package_pickle_list.
2010-11-05-22.49.06: src/lib/core/internal/: Merged make-mythryl-compiler-etc-g.pkg into make-mythryl-compiler-etc.pkg:  The package no longer needs to be generic.
2010-11-04-23.05.28: src/lib/core/internal/make-mythryl-compiler-etc-g.pkg: make_mythryl_compiler_etc: To reduce code clutter, dropped support for --runtime-heap, making it instead a constant mythryld_executable_filename_to_create (== mythryld) in app/makelib/mythryl-compiler-compiler/mythryl-compiler-compiler-configuration.pkg.
2010-11-04-21.39.16: src/lib/compiler/backend/lower-half/tools/nowhere/: For clarity, renamed build -> build-nowhere-app.
2010-11-03-23.33.26: src/etc/: For clarity, renamed root.lib -> mythryl-compiler-root.lib.
2010-11-03-20.34.22: For typesafety, pervasively replaced (architecture_name: String) with (machine_architecture: sma::Supported_Machine_Architectures).
2010-11-03-12.46.03: Created src/lib/compiler/frontend/basics/main/supported-machine-architectures.pkg to provide typesafe machine architecture identification. (SML/NJ just uses strings -- bleah!)
2010-11-03-11.53.48: src/lib/core/internal/make-mythryl-compiler-etc-g.pkg: Dropped now-unneeded make_compiler generic arg.
2010-11-03-11.27.26: src/lib/core/internal/make-mythryl-compiler-etc-g.pkg: To reduce code clutter, dropped support for unused switches --runtime-bare, --runtime-rebuild, --runtime-lightrebuild.
2010-11-02-12.27.48: src/app/burg/: For clarity, renamed mythryl-burg -> mythryl-burg-fraser-hanson-proebsting-92-optimal-tree-rewriter.pkg (etc).  src/lib/core/internal/: For better factoring, created mythryld.pkg + mythryld.api
2010-11-01-15.23.25: src/lib/core/internal/: For clarity and conciseness, renamed build-mythryld-heap-image.pkg -> make-mythryld-executable.pkg.  Also renamed src/app/makelib/mythryl-compiler-compiler/A_COMPILE_COMPILER.OVERVIEW -> src/A.MAKE_COMPILER.INTERNALS.OVERVIEW.
2010-11-01-14.43.06: For consistency, renamed foo.pkg -> foo-g.pkg for a wearisome number of foo.  src/app/makelib/semant/: For clarity, renamed version.pkg -> makelib-version.pkg
2010-11-01-02.41.30: For consistency, renamed ia32*lib -> x86*lib.
2010-11-01-02.31.22: For clarity, pervasively renamed source-map -> line-number-db.
2010-10-31-17.42.56: Converted left-over o7/O7 references to dotcompiled/Dotcompiled.
2010-10-31-14.45.52: doc/tex/sh/: Tweaked make-comments and synthesize-sourcecode-latex-docs to (maybe) support .sublib as well as .lib files. (Untested.)
2010-10-31-11.59.16: For clarity, changed from real vs virtual library terminlogy to main- vs sub-library terminology. The former is mysterious, the latter is self-explanatory.
2010-10-30-20.17.02: For clarity, pervasively renamed sublibraries from foo.lib -> foo.sublib, where a sublibrary is defined to be one containing SUBLIBRARY_EXPORTS (vs LIBRARY_EXPORTS).
2010-10-30-16.44.03: For consistency, downcased all .lib filenames: Foo.lib -> foo.lib etc. I had been experimenting with mixed-case library names to make them stand out in a directory listing, but have decided that it is too un-unixy.
2010-10-30-15.58.00: In .lib files, for clarity and conciseness, changed LIBRARY_GROUP_EXPORTS -> SUBLIBRARY_EXPORTS and LIBRARY_GROUP_COMPONENTS -> SUBLIBRARY_COMPONENTS. Also added support for .sublib file extension.
2010-10-30-01.06.53: Renamed */Makefile.lib -> */foo.lib for various values of foo; the unix makefile analogy was counterproductive.
2010-10-29-22.46.16: For conciseness and consistency, renamed foo-lib.lib -> foo.lib for various values of foo.
2010-10-29-13.11.40: Changed from .make6 to .lib filename extensions because the analogy with unix makefiles ultimately does more harm than good: The primary significance of these files to the application programmer is that they define and represent libraries, not that they are re/built using a make-like dependency algorithm.
2010-10-24-18.30.45: For clarity, pervasively renamed make7 -> makelib.
2010-10-24-16.59.23: For clarity, in backend generic packages pervasively renamed asm -> asm_emitter.
2010-10-23-16.38.17: src/app/make7/mythryl-compiler-compiler/: Since .o7 files no longer exist, renamed find-set-of-o7-files-for-executable.pkg -> find-set-of-dotcompiled-files-for-executable.pkg.
2010-10-23-15.51.38: src/app/make7/freezefile/: Since .o7 files no longer exist, renamed iced-o7* -> frozen-compilable*.
2010-10-23-15.44.04: src/app/make7/compilable/: Since .o7 files no longer exist, renamed bare-o7* -> thawed-compilable*.
2010-10-23-14.39.57: Since .o7 files no longer exist, renamed src/app/make7/o7 -> src/app/make7/compilable, src/lib/compiler/execution/o7-file -> src/lib/compiler/execution/dotcompiled-file.
2010-10-22-16.46.15: For clarity, switched from .o7 to .compiled for filenames for compiled files, e.g. foo.pkg.compiled instead of foo.pkg.o7, foo.api.compiled instead of foo.api.o7.
2010-10-22-01.38.38: src/lib/core/: Renamed make-compiler/ -> mythryl-compiler-compiler, MUCH related renaming.
2010-10-20-16.17.23: src/lib/core/internal/: Renamed boot-dictionary.pkg -> src/lib/core/internal/make-compiler-etc.pkg (etc) because it mainly wraps src/app/make7/make-compiler/make-compiler-g.pkg.
2010-10-20-13.52.14: src/lib/core/internal/: Renamed main.pkg -> build-mythryld-heap-image.pkg.
2010-10-20-12.02.57: src/app/make7/semant/: Renamed make7-grammar-actions.pkg -> make6file-grammar-actions.pkg.
2010-10-20-11.51.31: src/app/make7/parse/: Renamed make7.grammar -> make6file.grammar, make7.lex -> make6file.lex, because they in fact describe .make6 files.
2010-10-19-01.47.21: More s/unix/posix/ and s/unix// stuff in the name of clarity, consistency and precision.
2010-10-18-15.38.55: src/runtime/c-libs/lib7-socket/: For consistency and clarity, renamed to-unixaddr.c -> to-unix-domain-socket-address.c (etc).
2010-10-18-15.08.14: src/runtime/c-libs/dl/: For clarity and consistency, renamed unix-dynload-lib.c  ->  posix-dynamic-loading-support.c.  Also, deleted dynload-lib.c (redundant unused crud).
2010-10-18-14.55.51: src/runtime/c-libs/: For clarity and consistency, renamed unix-raise-syserr.c -> posix-raise-SYSTEM_ERROR.c.
2010-10-18-14.45.23: src/runtime/machine-dependent/: For clarity and consistency, renamed unix-fault.c  -> posix-arithmetic-trap-handlers.c.
2010-10-18-14.37.00: src/runtime/machine-dependent/: For clarity and consistency, renamed unix-prof.c   -> posix-profiling-support.c.
2010-10-18-14.23.08: For consistency and clarity, renamed src/runtime/config/gen-unix-sigtbl.c -> src/runtime/config/generate-posix-signal-table.c, src/runtime/config/unix-sigtbl.c -> src/runtime/config/posix-signal-table.c.
2010-10-18-14.04.14: For clarity and consistency, renamed src/runtime/machine-dependent/unix-signal.c -> src/runtime/machine-dependent/posix-signal.c.
2010-10-18-13.55.21: For clarity and consistency, renamed src/lib/std/src/posix/unix-signals.pkg -> src/lib/std/src/posix/posix-signals.pkg. (etc)
2010-09-30-12.40.12: Renamed src/runtime/config/unix-signals.c to src/runtime/config/posix-signals.c as part of standardizing on "posix".  Also renamed src/runtime/config/gen-unix-signals.c src/runtime/config/generate-system-signals.h-for-posix-systems.c for clarity and consistency.
2010-10-18-13.21.47: Renamed src/runtime/main/unix-timers.c -> src/runtime/main/posix-timers.c as part of standardizing on 'posix'.
2010-10-18-13.06.15: Moved src/lib/compiler/codegen/ to src/lib/compiler/backend/lower-half/codegen/ where it belongs.
2010-10-18-11.59.10: Renamed all directories named 'unix' to 'posix' because (1) 'posix' is the same length as 'winix' and 'win32', yielding better parallelism and (2) I am standardizing on 'posix' as the name for generic unixy functionality, reserving 'linux' and such for nonportable platform-specific stuff.
2010-10-14-13.05.03: Renamed src/lib/std/src/posix -> src/lib/std/src/posix-1003.1b for clarity and to free up namespace for renaming src/lib/std/src/unix -> src/lib/std/src/posix. Also, added sh/log-change script.
2010-09-30-12.40.12: Globally renamed make7file to make6file, since we currently only have .make6 files.
2010-09-30-10.41.33: src/app/make7/paths/anchor-dictionary.api, from_native() and from_standard(): Renamed spec -> file_path for clarity.
2010-09-29-23.15.11: src/app/make7/depend/: Renamed build-dependency-graph* -> make-dependency-graph*.
2010-09-29-22.15.40: src/app/make7/depend/build-dependency-graph.api: For a narrower, cleaner interface, dropped unneeded API element 'Oh7_View'.
2010-09-29-22.01.29: src/app/make7/depend/build-dependency-graph.api: For a narrower, cleaner interface, dropped unused API elements 'get', 'Looker' and 'process_exports_of_module_dependencies_summary'(?).
2010-09-29-16.04.22: src/app/make7/o7/raw-syntax-to-module-dependencies-summary.pkg: Random cleaning.
2010-09-29-15.26.13: src/app/make7/depend/build-dependency-graph.pkg:  Random cleaning.
2010-09-29-14.38.36: src/app/make7/depend/intra-library-dependency-graph.pkg: For clarity renamed seq/beq/sbeq -> same_bare_o7/same_iced_o7/same_bare_or_iced_o7.
2010-09-29-14.16.24: src/app/make7/depend/intra-library-dependency-graph.pkg: For readability and to reduce clutter, merged in o7-exports.pkg, which contained only a single five-slot datatype definition.
2010-09-29-13.10.53: Renamed five util/ directories (and a miscutil/ for good measure) to stuff/.  Because 'stuff' is a word.  And a syllable shorter.
2010-09-29-12.54.40: src/app/make7/depend/intra-library-dependency-graph.pkg: For readability, changed O7_IS_ICED (tuple) -> O7_IS_ICED {iced_o7,o7_exports,ith}.
2010-09-28-23.44.05: src/app/make7/o7/bare-o7.pkg: Random cleaning and commenting, including moving Bare_O7 api to separate file.
2010-09-28-22.13.45: For clarity and consistency, renamed 'prec-parser' to 'precedence-parser' in various filenames.
2010-09-28-21.45.21: Pervasively renamed 'polylambda' to 'lambdacode' for consistency with the emerging highcode/lowcode/anormcode/fatecode/treecode/... naming pattern.
2010-09-28-20.27.52: Pervasively renamed 'anormal'    to 'anormcode' to fit the emerging highcode/lowcode/fatecode/treecode/... naming convention for intermediate code representations.
2010-09-28-13.31.49: Pervasively renamed 'codetree'   to 'treecode' throughout compiler for improved consistency with emerging highcode/lowcode/... intermediate code name pattern.
2010-09-28-13.31.49: src/app/make7/freezefile/iced-o7.api:  Eliminated now-redudant accessor functions.
2010-09-28-12.02.39: src/app/make7/freezefile/iced-o7.api: Converted Iced_O7 from an opaque type to a simple public record because it is stupid to do implementation hiding when you have no implementation.
2010-09-28-00.31.46: src/app/make7/depend/inter-library-dependency-graph.pkg:  For clarity and consistency, renamed 'library_path' to 'make6_file'.
2010-09-27-23.59.12: src/app/make7/freezefile/iced-o7.pkg: For consistencty and clarity, renamed 'library' -> 'make6_file'.
2010-09-27-23.42.23: src/app/make7/freezefile/iced-o7.pkg: For clarity and consistency renamed runtime_system_pid -> runtime_system_picklehash.  src/app/make7/semant: Renamed sharing.pkg -> sharing-mode.pkg.
2010-09-27-23.03.08: src/app/make7/freezefile/iced-o7.api: For clarity, renamed 'spec' to 'api_or_pkg_file_path'.
2010-09-27-22.35.03: src/app/make7/freezefile/iced-o7.api: For clarity and consistency, renamed 'new' -> 'make_iced_o7'.
2010-09-27-22.24.30: src/app/make7/freezefile/iced-o7.api: For clarity, changed 'offset' to 'byte_offset_in_freezefile'.
2010-09-27-21.03.18: src/app/make7/freezefile/iced-o7.pkg: Iced_O7: Renamed offset -> byte_offset_in_freezefile for clarity.
2010-09-27-13.12.46: src/app/make7/depend/intra-library-dependency-graph.pkg:  Renamed ith_in_freezefile to just ith.
2010-09-27-13.02.14: src/app/make7/depend/intra-library-dependency-graph.pkg:  For readability, changed Far_Iced_O7 from a triple to a record { filter, iced_o7, ith_in_freezefile }.
2010-09-26-20.32.42: src/app/make7/depend/inter-library-dependency-graph.pkg:  For clarity and consistency, changed 'FROZEN Void -> Void' to 'FROZEN   { clear_pickle_cache:  Void -> Void }'.
2010-09-26-14.26.24: src/app/make7/depend/build-dependency-graph.pkg:  Random cleaning.
2010-09-26-13.25.10: src/app/make7/depend/inter-library-dependency-graph.pkg: For readability, changed Oh7_View from a tuple type to { far_o7_thunk, exports_dictionary, visible_symbols } record type.
2010-09-26-11.14.29: src/lib/compiler/frontend: Renamed parse/ -> parser/ for clarity and consistency.
2010-09-26-10.34.46: src/app/make7/: Random cleaning and commenting.
2010-09-25-23.54.23: src/app/make7/depend/inter-library-dependency-graph.pkg: Renamed type Sublibrarylist -> Libraries since it is in fact a list of Library, not of Sublibrary (which does not as yet exist).
2010-09-25-13.25.55: src/app/make7/main/compile-server.pkg (etc): Renamed (long-obsoleted) build_directory vars/parameters to generated_filename_infix. The old idea was to put separate compiler builds in separate directories; the new idea is to do (e.g.) foo.pkg.o7 vs foo.pkg.ppc-macos.o7 when cross-compiling or such.
2010-09-24-18.23.28: src/app/make7/make-compiler/backend-per-platform.pkg:  Cleaning and commenting.
2010-09-24-15.35.40: src/app/make7/main/compile-server.pkg: For clarity, renamed enter_server_loop -> enter_compiler_server_loop.
2010-09-24-15.13.30: src/lib/compiler/backend: For clarity, renamed upper/, lower/ -> upper-half/, lower-half/.
2010-09-24-15.00.10: src/app/make7/simple-concurrency/compile-client.api: For clarity, renamed start/stop/kill/reset -> start_compile_server/stop_compile_server/kill_compile_server/reset_compile_server.
2010-09-24-14.28.47: src/app/make7/simple-concurrency/unix-compile-client.pkg: For simplicity, eliminated {name,id} Server_Handle type in favor of just returning Compile_Server records to user as an opaque type.
2010-09-23-23.10.47: src/app/make7/simple-concurrency/unix-compile-client.pkg: Collapse 'server_name server' to 'server.name' etc various places, for brevity and clarity.
2010-09-23-20.52.42: src/app/make7/simple-concurrency/unix-compile-client.pkg: Changed Server=SERVER{...} -> Server={...} for simplicity.
2010-09-23-10.54.59: Pervasively adopt 'fatecode' as name for our continuation-passing-style intermediate code format for clarity, parallelism with 'highcode'/'lowcode'/'treecode' intermediate code format names, and because 'cps' and 'fps' are way too obscure while 'continuation_passing_style' and 'fate_passing_style' are way too verbose.
2010-09-19-12.02.25: src/lib/compiler/backend/upper/: For clarity and consistency renamed fps-optimize -> optimize-fatecode
2010-09-19-11.47.49: Test check-in
2010-09-11-11.51.43: For clarity, renamed src/lib/compiler/backend/upper/fps/ -> src/lib/compiler/backend/upper/fatecode/, added a file src/lib/compiler/backend/upper/fatecode/AAA-README.OVERVIEW.
2010-09-11-11.39.10: For clarity, renamed src/lib/compiler/codegen/compile-fps -> src/lib/compiler/codegen/compile-fatecode.
2010-09-11-11.29.22: src/lib/std/src/unix/spawn.api: For brevity renamed spawn::spawn_process -> spawn::process, spawn::spawn_process_in_environment -> spawn::process_in_environment.
2010-09-11-11.08.27: src/lib/std/src/unix/spawn.api: Killed 'spawn' for insufficient value-added -- it was just spawn_process + streams_of.
2010-09-11-10.57.05: src/lib/std/src/unix/spawn.api: For clarity, streams_of now returns { from_stream, to_stream } instead of (from_stream, to_stream).
2010-09-10-15.29.09: src/lib/std/src/unix/spawn.pkg: Light cleaning.
2010-09-10-15.05.34: Random light cleaning.
2010-09-10-13.40.32: src/app/make7/simple-concurrency/unix-compile-client.pkg: For clarity changed Server_Handle from (Int, String) -> { id: Int, name: String }.
2010-09-10-13.26.12: src/app/make7/simple-concurrency/unix-compile-client.pkg: For readability change 'wait_status (server, TRUE)'  ->  'wait_status { server, echo => TRUE }'.
2010-09-09-19.32.19: Random light cleaning and commenting in src/app/make7/simple-concurrency/unix-compile-client.pkg and kith.
2010-09-09-13.02.14: Favoring clarity over brevity, renamed src/lib/compiler/front/ ->  src/lib/compiler/frontend/.  Similarly, created src/lib/compiler/backend/ and moved into it src/lib/compiler/upper/ and src/lib/compiler/lower/.
2010-09-08-23.34.39: src/lib/compiler/lower/tools/parser/: Renamed mdl.lex, mdl.grammar -> machine-description-language.lex, machine-description-language.grammar.
2010-09-08-23.19.40: src/app/make7/paths/anchor-dictionary.pkg: Light cleaning and commenting.
2010-09-08-19.35.14: src/lib/compiler/execution/main/: Renamed importtree.pkg -> import-tree.pkg for clarity and consistency.
2010-09-08-19.23.09: src/lib/compiler/execution/o7-file/oh7-file.pkg: Light cleaning.
2010-09-08-15.00.07: src/app/make7/compile/compile-treewalk-g.pkg: mythryl.lex.pkg was taking -minutes- to compile. Spent a couple of days tracing the CPU consumption to the prettyprint_fps_function() call in src/lib/compiler/upper/main/backend-g.pkg, invoked during verbose compile.log listings.  Must be an O(N**2) algorithm in there or something.  For now, settled for commenting and commenting-out that call.
2010-09-07-16.45.26: src/lib/compiler/upper/main/backend-g.pkg: Simplified compile.log timestamping code via use of cpu_timer::get_added_cpu_time() call.
2010-09-07-16.45.26: src/lib/std/src/cpu-timer.api: Added convenience calls get_added_cpu_time, get_added_usr_and_sys_cpu_time, get_added_gc_and_nongc_usr_and_sys_cpu_times, the first being probably what most people want most of the time.
2010-09-07-16.04.17: src/lib/std/src: Split timer.pkg into cpu-timer.pkg + wallclock-timer.pkg because there is no code in common.  src/lib/std/src/cpu-timer.pkg: Renamed various functions for clarity.
2010-09-07-11.22.00: src/lib/compiler/upper/main/backend-g.pkg: compile.log logic to compute and print elapsed CPU time, adapted from compile-statistics.pkg.
2010-09-05-21.46.34: src/lib/compiler/front/basics/stats/compile-statistics.pkg: Cleaning and commenting; added say_when_nonzero.  src/app/make7/compile/compile-treewalk-g.pkg: Code to set compile_statistics::say_end on a (hardwired) per-file basis.
2010-09-05-16.59.50: src/lib/std/src/timer.api: For clarity and consistency renamed check_real_timer -> get_elapsed_wallclock_time, check_gc_timer -> get_elapsed_garbage_collector_time, check_cpu_timer -> get_elapsed_cpu_time, check_cpu_timers -> get_elapsed_cpu_times.
2010-09-05-16.38.56: src/lib/std/src/timer.api: For clarity and consistency renamed Real_Timer -> Wallclock_Timer, start_cpu_timer -> make_cpu_timer, total_cpu_timer -> get_cpu_timer, start_real_timer -> make_wallclock_timer, total_real_timer -> get_wallclock_timer.
2010-09-05-11.43.28: Phased out last traces of support for .sig, .sml and .grm file extentions (use .api, .pkg and .grammar); yacc, lex and future-lex now produce .api and .pkg files.
2010-09-04-15.56.07: src/app/yacc/src/yacc.pkg, src/app/make7/tools/mlyacc/tool.pkg: Mythryl yacc now generates .api and .pkg files instead of .sig and .sml files (SML/NJ convention).
2010-09-04-13.48.32: src/app/make7/tools/main/private-tools.pkg: Light cleaning.
2010-09-04-13.17.19: src/app/make7/simple-concurrency/unix-compile-client.pkg, src/app/make7/main/compile-server.pkg: Light cleaning.
2010-09-04-12.56.19: src/app/make7/paths/anchor-dictionary.pkg: Move package synonymous outside package per current convention.
2010-09-03-14.06.35: src/app/make7/util/: Rename symbolset.pkg -> symbol-set.pkg, symbolmap.pkg -> symbol-map.pkg, symbolordkey.pkg symbol-ord-key.pkg
2010-09-01-14.40.50: src/app/make7/compile/compile-treewalk-g.pkg: Light cleaning.  src/app/make7/paths/: Rename srcpathmap.pkg -> source-path-map.pkg, srcpathset.pkg -> source-path-set.pkg
2010-09-01-13.41.58: src/app/make7/make-compiler/make-compiler-g.pkg: Rename 'os' parameter to 'os_kind' for clarity and consistency.
2010-08-31-16.53.02: x-kit/tut/triangle/triangle-app.pkg: check_drawing_window_triangle_draw(): Final assert was failing -- probably a race condition (worked on maw over net) -- commented it out rather than track it down right now.   src/app/make7/main/compile-server.pkg: fun enter_server_loop: Renamed 'load' parameter to 'make'' for consistency.
2010-08-31-15.56.04: src/app/make7/main/make7-g.pkg: Move package abbreviations above generic package per current convention.
2010-08-31-15.09.56: src/lib/std/src/unix/threadkit-winix-process.pkg: Move package abbreviations above main package, per usual convention.
2010-08-10-10.12.14: src/runtime/o/mythryl.c: Back out change wrapping script in { ... }.  src/lib/compiler/front/typechecker/basics/typechecking-control.pkg:  Due to previous, make value_restriction_top_warn once again default to FALSE.
2010-08-04-23.32.31: src/lib/src/gtk-glue.config: Commenting.
2010-08-04-17.12.12: src/runtime/o/mythryl.c: Wrap script in { } to reduce value-restriction issues.  src/lib/compiler/front/typechecker/basics/typechecking-control.pkg: Default value_restriction_top_warn to TRUE.
2010-08-03-14.32.25: src/lib/x-kit/: Added CYNBE-CONCLUSIONS.OVERVIEW.
2010-08-02-18.45.03: x-kit: Renamed realize parameters from { kidplug, window, size } -> { kidplug, window, window_size }.
2010-08-02-10.26.57: src/lib/x-kit/widget/fancy/graphviz/graphviz-widget.pkg: Random cleaning and commenting.
2010-07-31-15.45.33: Moved src/lib/x-kit/tut/show-graph/graph-view/* to src/lib/x-kit/widget/fancy/graphviz/ and src/lib/x-kit/tut/show-graph/text-view/* to src/lib/x-kit/widget/fancy/graphviz/text because these are generally useful re-usable widgets.
2010-07-31-11.13.01: src/lib/x-kit/tut/show-graph/graph-view/: Renamed graph-view* -> scrollable-graphviz-widget*.
2010-07-30-14.43.02: src/lib/x-kit/tut/show-graph/README: Updated.
2010-07-29-22.16.36: Still fiddling with the badbricks-game-app-export.pkg issue.
2010-07-28-18.37.26: Ditto
2010-07-28-17.44.19: Ditto.
2010-07-28-16.44.39: More of same.
2010-07-28-11.36.25: Exploring why mythryl7.110.58/src/lib/x-kit/tut/badbricks-game/badbricks-game-app-export.pkg appears missing on github: Added an -export2.pkg copy of it.
2010-07-21-09.47.14: src/lib/x-kit/tut/badbricks-game/badbricks-game-app-export.pkg: Did a nop-edit to see if that will humor git -- github apparently lacks this file.
2010-07-19-00.06.39: src/lib/x-kit/tut/show-graph/graph-view/: Renamed graph-viewer.pkg -> graphviz-widget.pkg (etc) for clarity.
2010-07-18-22.16.44: src/lib/x-kit/tut/show-graph/graph-view/: Renamed view-font.pkg -> font-family-cache.pkg because that is what it is.
2010-07-18-15.38.10: src/lib/x-kit/tut/show-graph/: Show-graph window opening at 1600 rather than 3800 pixels wide under Xinerama seems to be window manager issue, not x-kit issue.
2010-07-13-19.44.25: src/lib/x-kit/tut/show-graph/graph-view/: Moved planar-graph stuff to src/lib/std/dot/ to make it more generally accessible.
2010-07-13-19.12.53: Moved xgeometry-float.pkg from src/lib/x-kit/tut/show-graph/graph-view/ to src/lib/std/2d/, for consistency with xgeometry.pkg
2010-07-13-11.55.06: src/lib/std/dot/: Established this directory to hold support for Graphviz .dot file format, moved relevant files here from src/lib/x-kit/tut/show-graph/graph/ to make them generally available. (Moved the yacc libraries to stdlib also, since they are needed by the .dot file reader, and should really be considered standard functionality.)
2010-07-13-10.42.32: src/lib/x-kit/tut/show-graph/graph/: Dropped some disused files, apparently just ancient crud.
2010-07-13-10.07.34: src/lib/x-kit/xclient/xclient.pkg: Tidying.
2010-07-13-09.36.12: src/lib/x-kit/xclient/xclient.api: Moved atom_* into new subpackage atom and dropped the atom_prefixes.
2010-07-13-09.15.15: src/lib/x-kit/xclient/xclient.api: Merged xclient::selection      subpackage into main xclient package to produce a flatter, more conventional and convenient api.
2010-07-13-08.38.58: src/lib/x-kit/xclient/xclient.api: Merged xclient::window         subpackage into main xclient package to produce a flatter, more conventional and convenient api.
2010-07-13-06.53.00: src/lib/x-kit/xclient/xclient.api: Merged xclient::draw           subpackage into main xclient package to produce a flatter, more conventional and convenient api.
2010-07-13-06.20.22: src/lib/x-kit/xclient/xclient.api: Merged xclient::authentication subpackage into main xclient package to produce a flatter, more conventional and convenient api.
2010-07-12-16.07.13: src/lib/x-kit/xclient/xclient.api: Moved Pen_Trait into its own package p.
2010-07-12-15.02.30: src/lib/x-kit/xclient/xclient.api: Eliminated xclient::font package, merging its remaining contents (one exception) into main xclient package.
2010-07-12-14.00.48: src/lib/x-kit/xclient/: Eliminated xclient_sharing: The xclient interface now consists simply of xclient.api + xclient.pkg. (Yay!)
2010-07-11-22.09.11: src/lib/x-kit/xclient/: Moved xgeometry.api, xgeometry.pkg and range-check.pkg to src/lib/std/2d/ (i.e., stdlib).
2010-07-11-14.31.57: src/lib/x-kit/xclient/: For clarity, renamed api Xcore -> Xclient, pkg xcore -> xclient.
2010-07-11-14.00.31: src/lib/x-kit/xclient/: To reduce sharing/maintainance/analysis headaches, made formerly separate package xinput into subpackage xcore::input. Also xwindow -> xcore::window and xselection -> xcore::selection.
2010-07-11-12.27.06: src/lib/x-kit/xclient/: To reduce sharing/maintainance/analysis headaches, made formerly separate package xdraw into subpackage xcore::draw.
2010-07-11-11.15.03: src/lib/x-kit/xclient/: To reduce sharing/maintainance/analysis headaches, made formerly separate package xfont into subpackage xcore::font.
2010-07-11-10.49.49: src/lib/x-kit/xclient/: To reduce sharing/maintainance/analysis headaches, made formerly separate package xcursors into subpackage xcore::cursors.
2010-07-11-10.14.12: src/lib/x-kit/xclient/: To reduce sharing/maintainance/analysis headaches, made formerly separate package xauthentication into subpackage xcore::authentication.
2010-07-10-17.50.13: src/lib/x-kit/tut/show-graph/: For clarity, pervasively changed pts -> points.
2010-07-10-15.58.35: src/lib/x-kit/tut/show-graph/graph/: Moved traitful-graphtree.api, traitful-graphtree-g.pkg to src/lib/std/graphtree/, now compiled by src/lib/std/stdlib.make6.
2010-07-10-12.09.17: src/lib/x-kit/tut/show-graph/graph/: Moved graphtree.api, graphtree-g.pkg to src/lib/std/graphtree/, now compiled by src/lib/std/stdlib.make6.
2010-07-09-22.26.45: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree-g.pkg: Rename  Univ_Info -> Graphtree  for consistency and clarity.
2010-07-09-21.18.26: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree-g.pkg: Dropped the kind graph field, which was unused and of unclear utility; apparently an idea that died a-borning. (Might have distinguished the four non/strict di/graph cases.)
2010-07-09-14.35.13: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree-g.pkg: Random cleaning and commenting.
2010-07-09-14.21.16: src/lib/x-kit/tut/show-graph/: For clarity and consistency renamed info_of_edge, info_of_graph, info_of_node -> edge_info_of, graph_info_of, node_indo_of; random cleaning and commenting.
2010-07-09-13.06.39: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree.api: For clarity, renamed get_node -> get_or_make_node.
2010-07-09-09.03.50: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree.api: For clarity, renamed  graph_info -> make_default_graph_info,  node_info -> make_default_node_info,  edge_info -> make_default_edge_info.
2010-07-09-08.32.47: src/lib/x-kit/tut/show-graph/graph/traitful-graphtree-g.pkg: Renamed apply_trait -> trait_apply for clarity and consistency.
2010-07-08-22.47.23: src/lib/x-kit/tut/show-graph/graph/graphtree.api: For brevity, renamed insert_node -> put_node.
2010-07-08-13.07.36: src/lib/x-kit/tut/show-graph/graph/graphtree-g.pkg: Renamed NODE.graph -> NODE.root for clarity; random cleaning and commenting.
2010-07-08-13.07.36: src/lib/x-kit/tut/show-graph/: For clarity renamed apply_in_edges -> in_edges_apply, apply_out_edges -> out_edges_apply; other random commenting and cleaning.
2010-07-08-13.07.36: src/lib/x-kit/tut/show-graph/: For clarity renamed apply_nodes -> nodes_apply, fold_nodes -> nodes_fold.
2010-07-08-12.16.42: src/lib/x-kit/tut/show-graph/graph/graphtree-g.pkg: Renamed add_edge, add_node -> make_edge, make_node for consistency.
2010-07-08-12.16.42: src/lib/x-kit/tut/show-graph/graph/graphtree-g.pkg: More cleaning and commenting.
2010-07-08-11.39.57: src/lib/x-kit/tut/show-graph/graph/graphtree-g.pkg:  Random cleaning and commenting.
2010-07-07-17.55.09: src/lib/x-kit/tut/show-graph/: More of same.
2010-07-07-17.44.24: src/lib/x-kit/tut/show-graph/: For brevity, pervasively renamed subgraph_tree -> graphtree, attribute -> trait.
2010-07-06-22.35.51: src/lib/x-kit/tut/show-graph/: For clarity, renamed del_* -> drop_*.
2010-07-06-22.20.04: src/lib/x-kit/tut/show-graph/: For clarity, renamed cnt_attribute -> count_attribute.
2010-07-06-22.06.17: src/lib/x-kit/tut/show-graph/: For clarity, pervasively renamed attr -> attribute.
2010-07-06-21.50.59: src/lib/x-kit/tut/show-graph/: For clarity pervasively rename hd,tl -> head,tail; other tidying.
2010-07-06-19.53.10: src/lib/x-kit/tut/show-graph/show-graph-app.pkg: Suppress interactive prompt in selftest mode. Clean out debug .trace statements from various files.
2010-07-06-16.19.14: show-graph-app.pkg now displays a visible window. (!) Containing a graph, no less. (!!)
2010-06-13-20.12.59: src/lib/x-kit/tut/: For clarity, renamed calc/ -> calculator/.
2010-06-03-22.23.33: src/lib/x-kit/tut/show-graph/: Random cleaning.
2010-06-03-22.23.33: src/lib/x-kit/tut/xkit-tut-unit-test.pkg:  Added show_graph_app::selfcheck.
2010-06-03-22.12.03: src/lib/x-kit/tut/show-graph/show-graph-app.pkg:  Added skeletal selfcheck() code.
2010-06-03-21.19.58: src/lib/x-kit/tut/show-graph/show-graph-app.pkg:  Add much standard boilerplate, eg for xauthentication.
2010-06-03-20.49.49: src/lib/x-kit/tut/: Renamed ml-viewer/ -> show-graph/ (etc) for clarity and because I want to support general graph viewing.
2010-06-03-04.16.21: src/lib/x-kit/tut/badbricks-game/badbricks-game-app.pkg:  Selfcheck exercise code now left-clicks a few random bricks.
2010-06-03-01.19.29: src/lib/x-kit/tut/xkit-tut-unit-test.pkg:  Added badbricks_game_app to list of exercised apps.
2010-06-03-01.02.39: src/lib/x-kit/tut/badbricks-game/badbricks-game-app.pkg:  Hack in boilerplate make_selfcheck_thread() fn.
2010-06-02-23.00.17: src/lib/x-kit/tut/badbricks-game/:  Still more light cleaning.
2010-06-02-22.42.13: src/lib/x-kit/tut/badbricks-game/:  More light cleaning.
2010-06-02-22.25.34: src/lib/x-kit/tut/badbricks-game/brickview.pkg:   More light cleaning.
2010-06-02-22.11.39: src/lib/x-kit/tut/badbricks-game/: Random cleaning.
2010-06-02-21.44.53: src/lib/x-kit/tut/:  For clarity, renamed bricks -> badbricks-game (etc).  Even runs now. :-)
2010-06-02-19.38.24: src/lib/x-kit/tut/bricks/bricks-app.pkg:  Installed usual boilerplate code for tracing, selfcheck and X authentication.
2010-06-02-19.26.51: src/lib/x-kit/tut/bricks/: Added bricks-app.api for cleanliness, renamed export.pkg -> bricks-app-export.pkg for clarity.
2010-06-02-19.05.34: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  Basic self-check logic now operational.
2010-06-02-13.17.15: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  selfcheck() now successfully enters correct answer via x-simulated keystrokes.
2010-06-01-19.19.18: src/lib/x-kit/tut/bouncing-heads/:  For clarity renamed heads.pkg -> head-pixmaps.pkg, ball.pkg -> bouncing-head.pkg.
2010-06-01-18.34.53: src/lib/x-kit/tut/:  For clarity, renamed bounce/ -> bouncing-heads/ (etc).
2010-06-01-15.38.00: src/lib/x-kit/tut/xkit-tut-unit-test.pkg:  Added arithmetic-game-app.pkg to list of apps exercised by "make check".
2010-06-01-15.22.27: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  Minor cleaning and commenting.
2010-06-01-03.22.34: src/lib/x-kit/xclient/src/window/keymap-imp.api: Added keysym_to_keycode.  src/lib/x-kit/xclient/src/window/keymap-imp.pkg: look_up_keysym: Rewrote to use local reply_slot instead of shared global one.
2010-06-01-01.17.19: src/lib/x-kit/widget/basic/topwindow.api:  Added window_of call to give access to underlying xc::Window.
2010-06-01-01.01.13: src/lib/x-kit/widget/basic/topwindow.pkg:  More cleaning and commenting.
2010-06-01-00.07.21: src/lib/x-kit/widget/basic/topwindow.pkg:  Renaming, comments and type declarations for clarity.
2010-05-31-14.53.47: src/lib/x-kit/xclient/src/window/xsession.api, src/lib/x-kit/xclient/xwindow.api, src/lib/x-kit/xclient/src/window/window.api:  Added send_keyboard_key_press_xevent, send_keyboard_key_release_xevent.
2010-05-31-14.24.10: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.api:  Added support for  encode_send_keypress_xevent, encode_send_keyrelease_xevent.
2010-05-31-03.24.27: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  revfold, reconstructed by pure guesswork, turned out to be using fold_right where it needed fold_left. Fixed. Expanded in-line to eliminate revfold.  Much commenting and cleaning.
2010-05-25-02.25.43: src/lib/x-kit/tut/arithmetic-game/:  For clarity, renamed answerbox* -> answer-dialog* (etc).
2010-05-25-00.41.14: src/lib/x-kit/tut/arithmetic-game/:  For clarity, renamed answer.api, answer.pkg -> answerbox.api, answerbox.pkg (etc).
2010-05-25-00.18.54: src/lib/x-kit/tut/arithmetic-game/:  For consistency and clarity, renamed splash.pkg -> splash-images.pkg (etc).
2010-05-25-00.00.03: src/lib/x-kit/tut/arithmetic-game/:  For clarity, renamed images.pkg -> diver-images.pkg (etc).
2010-05-24-23.43.13: src/lib/x-kit/tut/arithmetic-game/:  For clarity rename scene.api, scene.pkg -> diver-pane.api, diver-pane.pkg (etc).
2010-05-24-17.37.38: src/lib/x-kit/tut/arithmetic-game/:  Random low-level cleanup.
2010-05-24-14.50.12: src/lib/x-kit/tut/arithmetic-game/:  For clarity, renamed calc.api, calc.pkg -> calculation-pane.api, calculation-pane.pkg (etc).
2010-05-24-02.18.44: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  Add xauthentication support.
2010-05-23-19.18.35: src/lib/x-kit/tut/arithmetic-game/arithmetic-game-app.pkg:  First cut at setting up standard selfcheck support.
2010-05-23-14.02.41: src/lib/x-kit/tut/:  For clarity, renamed add/ -> arithmetic-game/, add/add-app.pkg -> arithmetic-game/arithmetic-game-app.pkg etc.
2010-05-23-05.03.37: src/lib/x-kit/tut/bounce/bounce-app.pkg:  Now running and exercised by src/lib/x-kit/tut/xkit-tut-unit-test.pkg.
2010-05-17-17.44.04: src/lib/x-kit/tut/bounce/bounce-app.pkg:  Added usual call to xauthentication;  now successfully opens window and diplays menu on right-click.
2010-05-17-12.28.38: src/lib/x-kit/tut/color-mixer/color-mixer-app.pkg:  Added selfcheck_colorchange_watcher and selfcheck logic based on it.
2010-05-17-04.57.53: src/lib/x-kit/tut/color-mixer/color-mixer-app.pkg:  Selfcheck logic to simulate user dragging sliders.
2010-05-17-02.47.16: src/lib/x-kit/tut/bricks/brickview.pkg, src/lib/x-kit/tut/ml-viewer/graph-view/graph-view.pkg, src/lib/x-kit/tut/color-mixer/color-mixer-app.pkg: Fixed three more cases of my erroneously converting loop fns with non-() args into for (;;) loops.
2010-05-17-02.05.49: src/lib/x-kit/tut/color-mixer/color-mixer-app.pkg: Switch sliders from vertical to horizontal (clearly the original intent).
2010-05-17-01.25.40: src/lib/x-kit/widget/leaf/slider-look.pkg:  Random cleaning and commenting.
2010-05-17-00.58.25: src/lib/x-kit/widget/leaf/slider-look.api, .pkg:  For clarity and consistency, renamed Result -> Slider_Look, get_attributes -> make_slider_look, etc.
2010-05-17-00.36.44: src/lib/x-kit/widget/leaf/slider.pkg: Random cleaning and commenting.
2010-05-16-23.39.55: src/lib/x-kit/tut/: For clarity, renamed mixer/ -> color-mixer/, similarly within it.
2010-05-16-00.52.44: src/lib/x-kit/xclient/xwindow.api, xcore.api:  Added send_mouse_motion_xevent.
2010-05-15-23.31.52: src/lib/x-kit/xclient/src/window/xsession.api: Added send_mouse_motion_xevent.
2010-05-15-23.31.52: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.api: Added encode_send_motionnotify_xevent.
2010-05-15-23.06.30: src/lib/x-kit/tut/xkit-tut-unit-test.pkg: Added mixer_app::selfcheck.
2010-05-15-02.17.21: src/lib/x-kit/tut/bitmap-editor/: Cleaning and commenting. Some files were bitrotted because not compiled because although listed in the .make6 file they were not exported from it. Oops. Fixed.
2010-05-14-02.16.33: src/lib/x-kit/tut/calc/calculator-app.pkg: Now selfchecks sanely within src/lib/x-kit/tut/xkit-tut-unit-test.pkg framework.
2010-05-13-18.32.57: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: encode_send_buttonrelease_xevent: Fixed: Was using event::button_press_xevent where event::button_release_xevent was needed (sloppy cut-and-paste programming *blush*).
2010-05-12-16.55.17: src/lib/x-kit/xclient/xcore.api (etc): Added send_''mouse_enter''_xevent, send_''mouse_leave''_xevent complements to send_mousebutton_press_xevent, send_mousebutton_release_xevent.
2010-05-12-14.25.15: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.api: Renaming for increased consistency.
2010-05-11-19.34.03: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.api: Added encode_send_enternotify_xevent, encode_send_leavenotify_xevent.
2010-05-11-15.10.07: src/lib/x-kit/widget/leaf/leaf/: For brevity, pervasively renamed appearance -> look.
2010-05-11-14.37.40: src/lib/x-kit/widget/leaf/button-base.pkg: For clarity changed Button_State from (wt::Button_State, Bool, Bool) -> { button_state: wt::Button_State, has_mouse_focus: Bool, mousebutton_is_down: Bool }
2010-05-11-12.52.50: src/lib/x-kit/widget/leaf/button-base.pkg: For clarity renamed MSE_UP, MSE_DOWN, MSE_IN -> mouse::UP, mouse::DOWN, mouse::FOCUS.
2010-05-11-12.19.32: src/lib/x-kit/widget/leaf/button-type.pkg: Button_Transition: For clarity renamed BUTTON_READY, BUTTON_NORMAL -> BUTTON_IS_UNDER_MOUSE, BUTTON_IS_NOT_UNDER_MOUSE.
2010-05-11-11.16.23: src/lib/x-kit/xclient/xinput.api etc:  Mouse_Mail etc:  Renamed button -> mouse_button various places to reduce potential for confusion between (e.g.) mouse buttons and pushbuttons.
2010-05-11-03.42.43: src/lib/x-kit/tut/calc/accumulator.pkg: Rewrite for clarity, add debug instrumentation.
2010-05-08-01.08.37: src/lib/x-kit/tut/calc/calculator-app.pkg: Added to selfcheck logic in src/lib/x-kit/tut/xkit-tut-unit-test.pkg.
2010-05-06-05.00.31: src/lib/x-kit/tut/calc/: Light cleaning.
2010-05-06-04.44.36: src/lib/x-kit/tut/nbody/: Selfcheck now actually checks something. :-)
2010-05-06-01.53.12: src/lib/std/src/time.api: Killed now() as redundant -- we are going to have a lot of different times in the end.  Renamed get() -> get_current_time_utc() for clarity.
2010-05-05-13.47.37: src/lib/x-kit/tut/nbody/:  Hooked up to unit-test logic in src/lib/x-kit/tut/xkit-tut-unit-test.pkg.
2010-05-04-04.40.36: src/lib/x-kit/tut/nbody/: Random cleaning and commenting.
2010-05-03-03.11.42: src/lib/x-kit/tut/plaid/plaid-app.pkg: selfcheck() now actually checks something. :-)
2010-05-02-03.32.41: src/lib/x-kit/tut/xkit-tut-unit-test.pkg:  Now exercises plaid-app as well as triangle-app.
2010-05-01-01.15.32: src/lib/x-kit/tut/plaid/plaid-app.pkg: Now exits when user clicks on windowframe close button.
2010-05-01-00.46.16: src/lib/x-kit/xclient/src/wire/:  Killed off window-io.pkg:  It was just clutter, containing only three small functions used only in src/lib/x-kit/xclient/src/window/window.pkg.
2010-04-30-21.42.24: src/lib/x-kit/widget/basic/topwindow.api: Concluded that the mysterious Dusty Deboer 'delete' slot is intended to signal WM_DELETE_WINDOW X events to applications. Much commenting and renaming to clarify this to library users and code maintainers.
2010-04-29-23.53.50: src/lib/x-kit/tut/triangle/triangle-app.pkg:  Stripped out much debug crud.
2010-04-29-23.26.53: src/lib/x-kit/tut/triangle/triangle-app.pkg:  Added unit test to exercise mouse pointer get/set.
2010-04-29-22.31.59: src/lib/x-kit/tut/triangle/triangle-app.pkg: Add unit test exercising sleep/count loop.
2010-04-29-21.39.33: src/lib/x-kit/tut/triangle/triangle-app.pkg: Cleaning.
2010-04-29-04.34.49: src/lib/x-kit/tut/triangle/triangle-app.pkg: Added EXIT button and selfcheck code to simulate a click on it.
2010-04-28-14.43.34: src/lib/x-kit/tut/triangle/triangle-app.pkg: Exercise RESET button in unit test code.
2010-04-26-03.34.40: src/lib/x-kit/xclient/src/window/cs-pixmap.pkg: Hacked make_clientside_pixmap_from_window to flush to_topwindow_drawimp but make_clientside_pixmap_from_readwrite_pixmap to flush to_screen_drawimp. This matches the xkit drawing convention; consequently triangle-app now self-checks correctly.
2010-04-26-03.17.26: src/lib/x-kit/xclient/src/window/xsession.api et al: Much renaming of fields etc for clarity, in particular to draw a bright line between draw-imps global to a screen and those local to a particular application top-level window and its subwindows.
2010-04-26-00.10.24: src/lib/x-kit/xclient/src/window/xsession.api: Renamed SCREEN.screen -> SCREEN.screen_info (it is of type Screen_Info).
2010-04-25-05.07.58: src/lib/x-kit/xclient/xdraw.api: Add drawimp_thread_id_of call.  src/lib/x-kit/xclient/xcore.api: Added id_of_window, id_of_rw_pixmap, id_of_ro_pixmap calls.  The problem was that windows etc had no visible identity at the application programmer level, nor was there any easy way to distinguish which ones used which draw imps.  This make useful tracelog debugging of them virtually impossible.
2010-04-24-23.21.05: src/lib/src/lib/thread-kit/src/core-thread-kit/thread.api: Rename get_thread -> get_current_thread; have it throw THREAD_SCHEDULER_NOT_RUNNING rather than return a garbage pointer;  rename get_thread_name -> get_current_thread's_name;  add get_current_thread's_id.  src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Include thread_id in tracelog line prologues;  src/runtime/c-libs/lib7-socket/print-if.c: Match columns to revised trace.pkg output format.
2010-04-24-22.45.01: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: For clarity and consistency renamed THREAD.id -> THREAD.thread_id.
2010-04-24-22.28.30: src/lib/src/lib/thread-kit/src/core-thread-kit/thread.pkg (etc): Renamed Thread_Id -> Thread everywhere in support of the emerging convention that Foo is a record and Foo_Id is a number.
2010-04-24-20.00.32: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Random internal cleaning and commenting.
2010-04-24-19.19.34: src/lib/x-kit/xclient/src/window/: Renamed graphics-context-cache.pkg -> pen-to-gcontext-imp.pkg for clarity.  src/lib/x-kit/xclient/src/window/xsession.pkg: Added draw-imp and pen-to-gcontext-imp to master diagram.
2010-04-24-12.56.52: src/lib/x-kit/xclient/src/window/draw-imp.pkg: FLUSH command now signals completion via a condition variable.
2010-04-24-01.47.28: src/runtime/c-libs/lib7-time/timeofday.c: Add comments pointing to TSR, HPET and clock_gettime().
2010-04-24-00.26.34: src/lib/x-kit/xclient/src/window/: Ripped out ximage.api, ximage.pkg: Too big a can of worms to open right now.
2010-04-22-00.13.16: src/lib/x-kit/xclient/src/window/: Renamed rgb-image.api, rgb-image.pkg -> ximage.api, ximage.pkg because they are X-specific and we will probably eventually want a generic rgb_image package.
2010-04-21-23.57.41: src/lib/x-kit/xclient/src/window/: Establish rgb-image.api, rgb-image.pkg.
2010-04-21-23.00.46: src/lib/x-kit/: Globally renamed Drawable_Window, DRAWABLE_WINDOW -> Drawable, DRAWABLE.
2010-04-21-13.55.12: src/lib/x-kit/tut/triangle/triangle-app.pkg: Fixed race condition: I was generating simulated mouseclick before setting up the trap to detect its result -- and got bitten despite network roundtrip delay(?!?)
2010-04-20-00.21.34: src/lib/x-kit/xclient/src/wire/wire-to-value.api: decode_xevent: Document formerly mysterious Bool return value: Tells whether event was synthesized via SendEvent.
2010-04-19-21.28.05: src/lib/x-kit/xclient/src/window/cs-pixmap.api: Added same_cs_pixmap call.
2010-04-19-21.08.12: src/lib/x-kit/xclient/xgeometry.api: package size: Added eq: (Size, Size) -> Bool.
2010-04-19-20.03.12: src/lib/x-kit/xclient/src/window/cs-pixmap.api: Added make_clientside_pixmap_from_window().
2010-04-19-14.30.49: src/lib/x-kit/xclient/src/wire/xsocket.api: Renaming for clarity: request_reply -> send_xrequest_and_read_reply, etc.
2010-04-19-02.01.12: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Tweaked inbuf_imp to do nonblocking reads from X server socket. Now background tasks continue to run properly while x-kit is waiting for user X-event input -- much better!
2010-04-19-00.31.19: src/lib/x-kit/xclient/src/wire/xsocket.pkg: inbuf_imp: Add receive_vector_nonblocking fn as alternative to existing blocking-read X input call.
2010-04-18-23.31.03: src/lib/std/src/socket/socket-guts.pkg: More cleaning and commenting.
2010-04-18-23.19.20: src/lib/std/src/socket/socket-guts.pkg: Cleaning and commenting.
2010-04-18-22.54.31: src/lib/std/src/socket/socket-guts.pkg, src/runtime/c-libs/lib7-socket/setNBIO.c: Cleaning and commenting.
2010-04-18-21.40.49: src/lib/std/src/threadkit/unix/retry-syscall-on-eintr.pkg: Added tracelog support.
2010-04-18-21.06.51: src/lib/src/lib/thread-kit/src/core-thread-kit/thread.pkg: Changed get_thread_name to not call get_thread_id (and thus not SEGV) when thread scheduler is not running. This is a workaround not a fix, but much better than nothing.
2010-04-18-20.34.23: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Discovered the hard way that calling  get_current_thread = unsafe::get_current_thread_register when thread_scheduler is not running can SEGV you.  E.g., calling thread::get_thread_name will do this. Documented with a comment.
2010-04-18-17.18.51: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Eliminated much needless use of thread/mailslot functionality in order to make print_if tracelogging usable in a wider range of environments.
2010-04-17-23.44.49: src/lib/src/lib/thread-kit/src/core-thread-kit/thread-scheduler.pkg: Added tracelog support and instrumentation. (thread-scheduler is an awkward special case because the regular thread/mailslot based mechanism does not work inside thread-scheduler itself, and also due to a package-cycle problem.)
2010-04-17-18.03.18: src/runtime/c-libs/lib7-runtime/cfun-list.h: Change setIntTimer -> setIntervalTimer for clarity.
2010-04-17-14.54.02: src/lib/x-kit/xclient/src/window/xsession.api: Added some TO-DO rumination on suporting David Patternson's warthog/trampoline capability/interface model in the evolving Mythryl concurrency/OOP paradigm.
2010-04-16-23.55.16: src/runtime/c-libs/lib7-runtime/setitimer.c, src/runtime/machine-dependent/unix-signal.c: Additional instrumentation via print_if.
2010-04-16-13.30.00: src/lib/x-kit/xclient/src/window/geometry.pkg: Import src/lib/x-kit/tut/plaid/plaid-app.pkg: symmetric_difference(box,box) as box::xor, since it is of general utility.
2010-04-15-23.25.16: src/lib/x-kit/tut/plaid/plaid-app.pkg: Random cleaning and commenting.
2010-04-15-22.25.10: src/lib/x-kit/xclient/src/window/draw-types.api etc: Renamed screen_depth -> screen_depth_imps because the former sounds like an integer; renamed id -> pixmap_id various places for clarity.
2010-04-14-13.33.59: src/lib/x-kit/tut/triangle/: Deleted tri.out, tri.out1. These were apparently years-old object code files or some such. Junk.
2010-04-13-20.06.16: src/lib/x-kit/tut/xkit-tut-unit-test.pkg: triangle_app::selfcheck () now runs sucessfully.
2010-04-13-19.49.37: src/lib/x-kit/tut/xkit-tut-unit-test.pkg:  Establish this new unit test file, integrate into make check framework.
2010-04-13-18.03.37: src/lib/x-kit/xclient/xgeometry.api: Dropped various now-unneeded _of suffixes.
2010-04-13-17.28.33: src/lib/x-kit/xclient/xgeometry.api: Renamed bounding_box -> point::bounding_box, within -> point::in_box.
2010-04-13-17.07.53: src/lib/x-kit/xclient/xgeometry.api: Similarly established (sub) package box.
2010-04-13-16.26.26: src/lib/x-kit/xclient/xgeometry.api: Established (sub) package size, moved into it add_size, sub_size, scale_size as add, subtract, scale.
2010-04-13-16.09.01: src/lib/x-kit/xclient/xgeometry.api: Moved limit_pt into package point as clip; Moved add_size_to_pt into package point as add_size. Re-ordered arguments to point::scale to put point first.
2010-04-13-15.50.50: src/lib/x-kit/xclient/xgeometry.api: Established (sub) package point; moved into it point_00, row_coord_of_pt, col_coord_of_pt, scale_point, add_points, subtract_points, point_ne, point_eq, point_gt, point_lt, point_ge, point_le as zero, row_coord_of, col_coord_of, scale, add, subtract, ne, eq, gt, lt, ge, le.
2010-04-13-15.34.20: src/lib/x-kit/xclient/xgeometry.api: Added point_ne, point_ge, point_gt to complete the traditional (hence expected) set.
2010-04-13-15.09.29: src/lib/x-kit/xclient/xgeometry.api: Renamed less_than_pt, less_eq_point -> point_lt, point_le; added point_eq.
2010-04-13-15.09.29: src/lib/x-kit/xclient/xgeometry.api: Renamed add_pt, sub_pt -> add_points, subtract_points.
2010-04-13-03.11.59: src/lib/x-kit/xclient/src/window/xsession.pkg: send_mousebutton_press_xevent, send_mousebutton_release_xevent: I had x=row, y=col, oops. Fixed by reversing them.
2010-04-13-02.06.49: src/lib/x-kit/xclient/src/wire/value-to-wire.api: For clarity renamed pt -> point, str -> string various places.
2010-04-13-01.50.00: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api: Renamed note_window's_seen_first_expose_oneshot -> note_window's_''seen_first_expose''_oneshot for clarity -- and because I can. :-)
2010-04-12-23.11.53: src/lib/x-kit/xclient/src/window/xsession.api: Renamed drawop_sink -> to_drawimp, which is both shorter and clearer.
2010-04-12-22.48.29: src/lib/x-kit/xclient/src/window/xsession.api: Rename draw_command_sink -> drawop_sink for brevity.
2010-04-12-14.59.02: src/lib/x-kit/xclient/src/wire/value-to-wire.api: More work establishing a clear distinction between gc records and 29-bit gc IDs.
2010-04-12-01.23.34: src/lib/x-kit/xclient/src/window/graphics-context-cache.pkg: Work at maintaining clearer distinction between gc records and 29-bit integer gc ID values.
2010-04-12-01.23.34: src/lib/x-kit/xclient/src/window/draw.pkg: Moved Text+Text_Item into their own package t, dropped the TEXT_ prefixes.
2010-04-12-01.08.09: src/lib/x-kit/xclient/src/window/draw-types.api: For clarity and namespace sanity, moved Draw_Root into its own package r, renamed DWIN -> WINDOW, DPM -> PIXMAP.
2010-04-12-00.54.56: src/lib/x-kit/xclient/src/window/draw.pkg: Nuke another bloody include.
2010-04-11-20.15.01: src/lib/x-kit/xclient/src/window/draw-types.api: Renamed draw_fn -> draw_command_sink for clarity.
2010-04-11-19.20.27: src/lib/x-kit/xclient/src/window/draw-imp.pkg: More random tidying.
2010-04-11-18.55.57: src/lib/x-kit/xclient/src/window/draw-imp.api: For clarity renamed package c -> s, within it Config -> Mapped_State, MAP -> TOPWINDOW_IS_NOW_MAPPED, UNMAP -> TOPWINDOW_IS_NOW_UNMAPPED.
2010-04-11-17.37.23: src/lib/compiler/front/parse/lex/mythryl-token-table-g.pkg: Killed the "&&" and "||" reserved words. These were synonyms of "and" and "or" intended to comfort C programmers, but they do not get used enough to justify keeping them around.
2010-04-11-16.46.00: src/lib/x-kit/xclient/src/window/draw-imp.api: Moved Destroy_Item into its own package d to get rid of distracting DESTROY_ prefix.
2010-04-11-15.05.02: src/lib/x-kit/xclient/src/window/draw-imp.api: Renamed Dm_Config -> Config, moved it into its own package c to eliminate DM_ prefixes.
2010-04-11-14.52.05: src/lib/x-kit/xclient/src/window/draw-imp.api: Moved Poly_Text into its own package t to eliminate the PTXT_ prefixes.
2010-04-11-14.41.21: src/lib/x-kit/xclient/src/window/draw-imp.api: Moved Draw_Mail into its own package m to eliminate DMSG_ prefixes.
2010-04-11-14.24.02: src/lib/x-kit/xclient/src/window/draw-imp.api: Moved Draw_Op into its own package o to eliminate the bloody DOP_ prefixes.
2010-04-11-14.10.15: src/lib/x-kit/xclient/src/window/draw-imp.pkg: Squished another bloody-bedamned include statement.
2010-04-11-13.58.31: Random cleaning and commenting in src/lib/x-kit/xclient/src/window/draw-imp.pkg, src/lib/x-kit/xclient/src/wire/value-to-wire-core.pkg.
2010-04-11-13.37.04: src/lib/x-kit/xclient/src/window/: For clarity, renamed graphics-context-imp.api, graphics-context-imp.api -> graphics-context-cache.api, graphics-context-cache.pkg. Cleaning and commenting.
2010-04-08-17.00.10: src/lib/x-kit/xclient/xwindow.api: Added send_mousebutton_press_xevent, send_mousebutton_release_xevent wrappers for the corresponding xsession.pkg functions. (Unit test support.)
2010-04-07-15.04.05: src/lib/x-kit/xclient/src/window/window.api: Added seen_first_expose_oneshot_of call. Also supporting version in src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api.
2010-04-07-01.40.36: triangle-app.pkg had stopped working; traced to not including new NOTE_EXPOSE_AND_SEND_TO_WINDOW case in xevent_action_to_string() in src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg. Lesson: Do not ignore compiler not exhaustive warnings. :-)
2010-04-06-12.59.53: Added logic to signal when a widget is up and running, interpreted as meaning when its first EXPOSE event arrives from the X server. This comprises seen_first_redraw_oneshot_of() in src/lib/x-kit/widget/basic/widget.api plus as supporting infrastructure note_seen_first_expose_oneshot in src/lib/x-kit/xclient/src/window/window.api and note_window's_seen_first_expose_oneshot in src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api.
2010-04-05-16.24.44: Changed tacks: Widgets do not know their sizes, instead they know their window and their window knows its size (and position). Consequently: src/lib/x-kit/widget/basic/widget.api: Dropped note_new_size(). src/lib/x-kit/widget/basic/widget.pkg: Dropped WIDGET.size field.
2010-04-05-00.29.57: src/lib/std/: Tidying in various vector packages.
2010-04-04-14.15.15: src/lib/std/src/rw-float64-vector.pkg: Random cleaning.
2010-04-04-03.14.03: src/lib/x-kit/xclient/xcore.api: Export get_window_site to world+dog.
2010-04-04-02.49.06: src/lib/x-kit/xclient/src/window/xsession.api: Added get_window_site() call.
2010-04-04-02.31.36: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api: Added get_window_site() call.
2010-04-03-23.20.31: src/lib/x-kit/xclient/src/window/geometry.pkg: Add site_to_box() call.  src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: do_plea (plea::NOTE_NEW_TOPWINDOW): Initialize WINDOW_INFO.site.
2010-04-03-21.08.29: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.api: Add 'site' argument to note_new_topwindow().
2010-04-03-19.45.15: src/lib/x-kit/xclient/src/window/topwindow-to-widget-router.api: Add 'site' argument to make_topwindow_to_widget_router.
2010-04-03-19.19.31: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: Update WINDOW_INFO.site in response to CONFIGURE_NOTIFY X events.
2010-04-03-18.30.02: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: Add 'site' field to WINDOW_INFO.
2010-04-03-17.38.19: src/lib/x-kit/xclient/src/window/topwindow-to-widget-router.pkg: Comment dusty deboer's unused CLIENT_MESSAGE -> delete_mailop hack.
2010-04-03-15.20.19: src/lib/x-kit/widget/basic/widget.api: Added note_new_size call.
2010-04-03-12.34.56: src/lib/x-kit/widget/basic/widget.api: Add window_of, size_of.
2010-04-03-00.02.46: More cleaning and commenting, centering on src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg.
2010-04-02-18.19.03: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: Still more general cleaning.
2010-04-02-18.00.54: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: More general cleaning.
2010-04-02-17.40.48: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: General cleaning, more work establishing a clear distinction between window and window_id values.
2010-04-02-03.02.51: src/lib/x-kit/xclient/src/window/window.pkg: Move window_point_to_screen_point def to src/lib/x-kit/xclient/src/window/xsession.pkg to break a package cycle.
2010-04-02-02.23.54: src/lib/x-kit/xclient/src/window/window.api: Renamed window_pt_to_screen_pt -> window_point_to_screen_point. What is it about programming and dyslexia? :-)
2010-04-02-02.10.27: Globally renamed translate_coords -> translate_coordinates. Remember, every time you mangle a word, God kills a kitten. Think of the kittens.
2010-04-02-01.50.42: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Renamed subpackage wa -> a per new package naming convention.
2010-04-02-01.29.18: src/lib/x-kit/: Pervasively changed 'package w = widget;' -> 'package wg = widget;' in support of below package-name convention.
2010-04-02-00.44.29: src/lib/x-kit/: Pervasively changed 'package g = geometry;' -> 'package ge = geometry;' in support of below package-name convention.
2010-04-02-00.13.29: src/lib/x-kit/xclient/src/window/window.api: Renamed packages wa, cfg -> a, c. (Adopting convention that organizational subpackages have one-char names.)
2010-04-02-00.00.57: src/lib/x-kit/xclient/src/wire/window-io.api: Renamed parent_id -> parent_window_id for clarity.
2010-04-01-23.45.38: src/lib/x-kit/xclient/src/window/xsocket-to-topwindow-router.pkg: Moved Plea_Mail into a "plea" package, dropped PLEA_ prefixes.
2010-04-01-16.15.21: src/lib/x-kit/xclient/src/wire/event-types.pkg: For clarity, much renaming like event -> event_window_id.
2010-04-01-13.37.43: src/lib/x-kit/xclient/src/wire/event-types.pkg: For clarity, renamed root, event, child -> root_window_id, event_window_id, child_window_id various places.
2010-04-01-13.37.43: src/lib/x-kit/xclient/src/wire/event-types.pkg: Renamed Xevent_Name subpackage to n;  Moved Xevent into its own x subpackage to eliminate the _XEVENT constructor suffixes.
2010-03-31-14.07.02: src/lib/x-kit/xclient/src/wire/event-types.pkg: Moved Xevent_Name into its own xevent subpackage to eliminate the XEVENT_ constructor prefixes.
2010-03-31-13.53.30: src/lib/x-kit/xclient/xwindow.api: Moved Window_Configuration into a package cfg to get rid of the WC_ constructor prefixes.
2010-03-31-13.22.07: src/lib/x-kit/xclient/xwindow.api: Moved Window_Attribute into a package wa to get rid of the WA_ constructor prefixes.
2010-03-31-12.48.18: src/lib/x-kit/xclient/src/window/geometry.pkg: For consistency and clarity, renamed validate_shape -> validate_site.
2010-03-31-00.28.52: src/lib/x-kit/xclient/src/window/xsession.pkg: Establish and export send_mousebutton_press_xevent, send_mousebutton_release_xevent, sketch in most of the code.
2010-03-30-22.10.04: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: encode_send_button_press_xevent, encode_send_button_release_xevent: Add 'button' arg specifying the button pressed/released.
2010-03-30-21.13.54: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: encode_send_button_press_xevent: Add 'buttons' arg specifying button(s) pressed.
2010-03-30-20.31.48: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: Added first-cut version of encode_send_button_release_xevent.
2010-03-30-20.08.09: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: Wrote first-cut version of encode_send_button_press_xevent.
2010-03-30-19.03.50: src/lib/x-kit/xclient/src/window/xsession.api: Export a set_mouse_location matching get_mouse_location, based on WarpPointer X protocol call.
2010-03-30-18.12.09: src/lib/x-kit/xclient/src/window/xsession.api: Export the baroque X query_pointer() as a nice simple get_mouse_location().
2010-03-29-20.48.45: src/lib/x-kit/xclient/src/window/xsession.api: Export query_pointer().
2010-03-28-15.33.11: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Added query_colors().
2010-03-28-15.19.40: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Added query_best_size().
2010-03-28-14.56.09: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Added query_text_extents().
2010-03-28-14.56.09: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Added query_text_extents().
2010-03-28-14.40.08: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Added query_tree().
2010-03-28-14.23.28: src/lib/x-kit/xclient/src/window/xsession.api: Add query_font, query_pointer, forwarded from xsocket.pkg.
2010-03-28-13.54.15: src/lib/x-kit/xclient/src/wire/xsocket.api: Add query_pointer(). Untested.
2010-03-28-13.01.03: Moved query() and query_font() from src/lib/x-kit/xclient/src/window/font-imp.pkg -> src/lib/x-kit/xclient/src/wire/xsocket.pkg to make them more generally available and forestall replication.
2010-03-28-00.32.12: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: Light cleaning, create explicit api definition and establish sendevent-to-wire.api to hold it.
2010-03-25-01.35.54: src/lib/std/src/rw-char-vector-slice.pkg and elsewhere: Basic cleaning and commenting.
2010-03-25-00.36.49: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg et al:  Renamed MAILOP_ENABLED, MAILOP_BLOCKED ->  MAILOP_READY, MAILOP_UNREADY for clarity and symmetry, and because blocking is for threads, not mailops.
2010-03-25-00.17.05: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg et al: Renamed poll_fn, block_fn, do_fn -> is_ready, wait_for, do_it for clarity and because _fn suffixes on function names are just clutter.
2010-03-24-23.40.43: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Pervasively change grp,GRP -> group,GROUP for clarity.
2010-03-24-01.10.59: src/runtime/c-libs/lib7-socket/print-if.c: Print leading zeros on fractional part of time: "1269410578.067731" not "1269410578. 67731". (Oops! :-)
2010-03-23-04.53.31: Commenting and cross-referencing, mostly in the C and Mythryl code for handling Unix signals.
2010-03-21-21.15.40: src/lib/x-kit/tut/triangle/triangle-app.pkg: make_draw_threads:  Changed to draw triangles in green -- apparently at some point I accidentally changed it to draw black triangles on a black background, which looks unimpressive to say the least. :-) triangle-app now appears to be basically functional! :-) :-) :-)
2010-03-20-14.38.44: src/lib/x-kit/xclient/src/wire/xsocket.pkg: sequencer_imp_main_loop: FIXED: I had incorrectly transformed   fun loop x = loop( select ... ); -> fun loop x = for (;;) { select ... ; }; in a case where the  select  returned a non-Void value.
2010-03-19-18.02.56: src/lib/x-kit/xclient/src/wire/wire-to-value.pkg: Additional tracelogging.
2010-03-19-15.17.17: src/lib/x-kit/xclient/src/wire/: Demoted value-to-wire.pkg to value-to-wire-core.pkg and established a value-to-wire.pkg set of debug wrappers.
2010-03-17-17.38.58: src/lib/x-kit/xclient/src/wire/xsocket.pkg: More minor diagnostic logic tweaking.
2010-03-17-17.26.36: src/lib/x-kit/xclient/src/wire/xsocket.pkg: More diagnostic logic tweaking.
2010-03-17-17.14.51: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Lightly tweak diagnostic reporting logic.
2010-03-15-16.58.21: src/runtime/c-libs/lib7-socket/recv.c: Tracelog errno in string as well as int form.
2010-03-15-16.25.34: src/lib/x-kit/xclient/src/stuff/xtracing.pkg: For consistency with vanilla make_thread, changed xspawn(name,body) -> (make_thread name body).
2010-03-15-13.45.25: src/lib/x-kit/tut/add/: Renamed add* -> add-app*; src/lib/x-kit/tut/ml-viewer/: Rename ml-viewer* -> ml-viewer-app*.
2010-03-15-13.22.54: src/lib/x-kit/tut/basicwin/: Renamed basicwin* -> basicwin-app*;  src/lib/x-kit/tut/bounce/: Renamed bounce* -> bounce-app*
2010-03-15-13.07.32: src/lib/x-kit/tut/bricks/: Renamed bricks* -> bricks-app*;  src/lib/x-kit/tut/bricks/: Rename calc* calc-app*.
2010-03-15-12.49.14: src/lib/x-kit/tut/: Rnamed nbody/nbody* -> nbody/nbody-app*, mixer/mixer* ->  mixer/mixer-app*, plaid/plaid* -> plaid/plaid-app*.
2010-03-14-22.53.27: src/lib/x-kit/tut/triangle/triangle-app.pkg: Added (many) trace calls.
2010-03-14-21.39.35: src/lib/x-kit/tut/triangle/triangle-app.pkg: Pass authentication info to X server.  Now connects successfully.
2010-03-14-14.18.28: src/lib/x-kit/tut/triangle/triangle.pkg:  Cleaning and commenting of button_window logic.
2010-03-14-13.25.48: Pervasively use new rgb8 abstract colornames where applicable.
2010-03-14-13.02.40: src/lib/x-kit/xclient/src/color/rgb8.api: Add predefined colors color0, color1, red, green, blue, cyan, magenta, yellow.
2010-03-14-12.49.33: src/lib/x-kit/xclient/xwindow.api: set_window_manager_properties: Rename ilk_hints, res_ilk, res_name -> class_hints, resource_class, resource name.
2010-03-14-12.36.46: src/lib/x-kit/xclient/xwindow.api: set_window_manager_properties(): Rename argv -> commandline_arguments for clarity.
2010-03-14-01.42.33: src/lib/x-kit/tut/triangle/triangle.pkg: Tidying.  src/lib/x-kit/xclient/xcore.api: Renaming for clarity.
2010-03-13-13.58.09: src/lib/x-kit/tut/triangle/triangle.pkg: More cleaning. Related maintainance in Makefile.
2010-03-13-13.23.38: src/lib/x-kit/tut/triangle/: Rename tri.api -> triangle.api, tri.pkg -> triangle.pkg, build-tri -> build-triangle, tri.make6 -> triangle.make6.  Internal cleaning in triangle.pkg.
2010-03-13-12.31.59: src/lib/x-kit/widget/lib/widget-unit-test.pkg: Extract xsession and screen from root_window. (Trivial.)
2010-03-13-12.17.59: src/lib/x-kit/widget/lib/widget-unit-test.pkg: Clone-and-mutated in make_root_window() from src/lib/x-kit/widget/lib/run-xkit.pkg
2010-03-13-12.01.59: src/lib/x-kit/widget/lib/widget-unit-test.pkg: Restore xauthentication logic.
2010-03-13-11.44.44: src/lib/x-kit/widget/lib/widget-unit-test.pkg: Minor tweak.
2010-03-13-02.38.24: src/lib/x-kit/widget/lib/widget-unit-test.pkg: Restore access to make7::scripting_globals, restore old-tracefile deletion logic.
2010-03-13-02.08.06: src/lib/x-kit/widget/lib/: Established widget-unit-test.pkg.
2010-03-13-01.45.25: src/lib/x-kit/widget/lib/: Renamed standard-cs-pixmaps.pkg -> standard-clientside-pixmaps.pkg.
2010-03-12-23.01.43: src/lib/x-kit/xclient/xcore.api: Added convenience definitions for white, black, red, green, blue, cyan, magenta, yellow, all of type Rgb.
2010-03-12-21.15.33: src/lib/x-kit/xclient/src/window/: Rename color-imp.api, color-imp.pkg ->  color-spec.api, color-spec.pkg: Colortable stuff is now Officially Dead! :-) :-) :-)
2010-03-12-12.42.06: src/lib/x-kit/xclient/src/window/color-imp.api: Eliminate Rgb type definition (just a re-export of rgb::Rgb).
2010-03-12-12.21.38: src/lib/x-kit/xclient/src/window/color-imp.api: Ripped out make_color_imp(), and with it nearly all remaining code in color-imp.pkg.
2010-03-11-21.52.13: src/lib/x-kit/xclient/src/window/color-imp.api: Eliminate color_imp argument from get_color().
2010-03-11-21.37.56: src/lib/x-kit/xclient/src/window/color-imp.api: Killed check_rgb, exception BAD_RGB. src/lib/x-kit/xclient/src/color/rgb.api: Add normalize() call to replace lost check_rgb().
2010-03-11-20.32.31: src/lib/x-kit/xclient/src/window/color-imp.api: Delete same_color(), color_from_floats(), white_rgb, black_rgb.
2010-03-11-20.04.42: src/lib/x-kit/xclient/src/window/color-imp.api: Deleted black_of(), white_of(), rgb_of_color() as another step toward eliminating color_imp entirely.
2010-03-11-13.28.17: src/lib/x-kit/xclient/src/window/color-imp.api: Ripped out its beating heart by eliminating the Color type.
2010-03-11-04.32.03: Steps toward eliminating colortable dependencies and thus color-imp.pkg:  src/lib/x-kit/xclient/xdraw.api: Pen_Trait: Change BACKGROUND, FOREGROUND from Color -> Rgb8.  src/lib/x-kit/xclient/src/window/color-imp.api: Eliminate color0, color1, drop Rgb8 component from COLOR.
2010-03-10-13.22.20: src/lib/x-kit/xclient/src/color/: Rename rgb24.pkg -> rgb8.pkg because bits-per-color-component is a more practical general naming scheme.
2010-03-10-03.05.01: src/lib/x-kit/xclient/src/color/: Split x11-color-name.pkg off from rgb24.pkg, partly to avoid cyclicity problems, partly because it is better in a separate package anyhow.
2010-03-10-03.05.01: src/lib/x-kit/xclient/src/color/yiq.pkg: Total rewrite. :-)
2010-03-10-01.59.35: Globally renamed xrgb -> rgb24, taking 24-bitness as primary and X protocol applications as secondary.
2010-03-10-00.04.39: src/lib/x-kit/xclient/src/color/: rgb.api, hue-saturation-value.api:  Add from_name() support.
2010-03-09-23.47.06: src/lib/x-kit/xclient/src/color/xrgb.api: Add from_floats(), to_floats(): I want to make floating point triples the standard color notation.
2010-03-09-21.47.49: src/lib/x-kit/xclient/src/color/rgb.pkg: Change  Rgb = RGB { red: Unt, green: Unt, blue: Unt }   ->  Rgb = rw_float_vector::Rw_Vector
2010-03-09-20.17.09: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Force hue-saturation-value.pkg to compile.  src/lib/x-kit/xclient/src/color/hue-saturation-value.pkg: Change  Hsv = HSV { hue: float, saturation: Float, value: Float }   ->  Hsv = fv::Rw_Vector  for efficiency.   src/lib/x-kit/xclient/src/color/rgb.api:  Add from_floats(), to_floats().
2010-03-09-03.49.52: src/lib/x-kit/xclient/src/color/xrgb.api: Add colors_by_name, from_name().
2010-03-08-22.16.47: src/lib/x-kit/xclient/src/color/xrgb.pkg: Change   	Xrgb = XRGB Int;   to simply   	Xrgb = Int;
2010-03-08-22.00.01: src/lib/x-kit/xclient/src/color/xrgb.api: Make Xrgb type opaque. Add to_int(), from_int(), same().
2010-03-08-21.21.20: src/lib/x-kit/xclient/src/color/hue-saturation-value.api: Add to_floats() and from_floats() calls.
2010-03-08-21.01.40: src/lib/x-kit/xclient/src/color/rgb.api: Make exported Rgb type opaque; add from_unts(), to_unts() and same().
2010-03-08-19.20.26: src/lib/x-kit/xclient/src/color/: Establish rgb.api, rgb.pkg;  move Rgb definition over from src/lib/x-kit/xclient/src/wire/xtypes.pkg.
2010-03-08-19.01.22: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Drop Xrgb type altogether, redirecting all references to xrgb.pkg.
2010-03-08-14.06.03: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Replace   Xrgb = XRGB Int   with   Xrgb = xrgb::Xrgb
2010-03-08-13.45.11: src/lib/x-kit/xclient/src/color/: Establish xrgb.api, xrgb.pkg.
2010-03-08-13.34.21: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Change   Pixel = PIXEL Int   ->   Xrgb = XRGB Int.
2010-03-08-13.08.09: src/lib/x-kit/xclient/src/: mkdir color/, cp stuff/color* color, split color.api -> hue-saturation-value.api + yiq.api.
2010-03-08-12.18.57: src/lib/x-kit/xclient/src/: Create to-string/, mv stuff/*to-string* into it.
2010-03-07-22.18.16: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: exercise_window_stuff: Check assumption that root visual is depth=24 red/green/blue masks FF0000/00FF00/0000FF, and bypass unit tests if not.
2010-03-07-21.51.27: src/lib/x-kit/xclient/src/stuff/xserver-info-to-string.pkg:  Improve formatting. (Considerably!)  src/lib/x-kit/xclient/src/wire/value-to-wire.api: encode_create_window: Rename io -> io_class for clarity.  src/lib/x-kit/xclient/src/wire/window-io.api: create_window: Rename io -> io_class for clarity and consistency.  src/lib/x-kit/xclient/src/wire/xtypes.pkg: Rename Input_Output -> Io_Class for clarity and consistency.
2010-03-07-11.41.03: src/lib/x-kit/xclient/src/wire/xsocket.pkg:  Top-of-file motivational comments.
2010-03-06-20.17.09: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Now actually creates a visible window! :-) :-) :-)
2010-03-05-21.40.52: src/lib/x-kit/xclient/src/window/draw-types.api: WINDOW: Renamed id -> window_id for clarity and consistency.
2010-03-05-21.17.30: src/lib/x-kit/xclient/src/wire/value-to-wire.api: Rename window -> window_id various places for clarity and consistency.
2010-03-05-20.03.19: For clarity and consistency, in src/lib/x-kit/xclient/src/wire/window-io.api: create_window: Renamed id, parent -> window_id, parent_id.  In src/lib/x-kit/xclient/src/wire/value-to-wire.api: encode_create_window: Renamed window, parent -> window_id, parent_id.
2010-03-05-19.16.13: src/lib/x-kit/xclient/src/window/: For clarity and consistency rename xevent-to-topwindow-router.pkg ->  xsocket-to-topwindow-router.pkg, widgettree-root-xevent-router.pkg -> topwindow-to-widget-router.pkg. Break out xsocket-to-topwindow-router.api as a separate file.
2010-03-05-18.40.04: src/lib/x-kit/xclient/src/window/: Renamed xbuf-to-widgettree-xevent-router.pkg -> xevent-to-topwindow-router.pkg for conciseness, perhaps slightly improved clarity.
2010-03-05-03.51.27: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Cleaning and commenting.
2010-03-05-01.44.23: src/lib/x-kit/xclient/src/wire/xsocket.pkg: outbuf_imp: loop() was ignoring max_bytes_per_socket_write, clearly a bug: Fixed.  Much commenting.
2010-03-04-18.41.30: src/lib/x-kit/xclient/src/wire/xsocket.api: Renamed   exception LOST_REPLAY  ->   exception LOST_REPLY.  (I think the former was my typo in the heat of battle... *blush*)
2010-03-04-00.43.08: src/lib/x-kit/xclient/src/wire/display.api: XSCREEN: Renamed black,white -> black_pixel,white_pixel for clarity and consistency.
2010-03-04-00.27.45: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Successful (and plausible) call to v2w::encode_create_window.
2010-03-03-23.28.23: src/lib/x-kit/xclient/src/wire/value-to-wire.api: encode_create_window, encode_change_window_attributes: Change attributes arg from xt::Value_List -> List( xt::wa::Window_Attribute );  Make make_window_attribute_list private to value-to-wire.pkg.
2010-03-03-22.56.00: src/lib/x-kit/xclient/src/wire/window-io.api: Move Window_Attribute to src/lib/x-kit/xclient/src/wire/xtypes.pkg, move make_window_attribute_list -> src/lib/x-kit/xclient/src/wire/value-to-wire.api.
2010-03-03-22.17.10: src/lib/x-kit/xclient/src/window/window.pkg: Rename std_xevent_mask -> standard_xevent_mask.
2010-03-03-21.51.16: src/lib/x-kit/xclient/src/wire/value-to-wire.api:  encode_create_window, encode_change_window_attributes: Rename vals -> attributes for clarity.
2010-03-03-20.27.16: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Renamed VALMASK,VALS -> VALUE_MASK, VALUE_LIST for clarity and consistency with X protocol docs.
2010-03-03-20.27.16: src/lib/x-kit/xclient/src/wire/window-io.api: Renamed Xwin_Val -> Window_Attribute because the latter is not gibberish.
2010-03-03-20.27.16: src/lib/x-kit/xclient/src/window/window.api: make_simple_top_window, make_simple_subwindow, make_transient_window, make_simple_popup_window: Renamed parameters geometry,border,background -> site,border_color,background_color for clarity.
2010-03-03-19.48.31: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Add Visual_Id_Choice = SAME_VISUAL_AS_PARENT | OVERRIDE_PARENT_VISUAL Visual_Id.  src/lib/x-kit/xclient/src/wire/window-io.api: create_window: Change visual_id from Null_Or(Visual_ID) -> Visual_Id_Choice, thus changing typical argument from NULL to the more readable SAME_VISUAL_AS_PARENT.
2010-03-03-16.49.17: src/lib/x-kit/xclient/src/wire/window-io.ap: create_window: Renamed input_only -> io; replaced gibberish values NULL/THE TRUE/THE FALSE by INPUT_ONLY/INPUT_OUTPUT/SAME_IO_AS_PARENT.
2010-03-03-16.27.08: src/lib/x-kit/xclient/src/window/geometry.pkg: For concision renamed Window_Footprint, WINDOW_FOOTPRINT -> Window_Site, WINDOW_SITE.
2010-03-03-12.30.50: src/lib/x-kit/xclient/src/wire/value-to-wire.api: encode_create_window: Rename id -> visual_id for clarity.
2010-03-03-12.04.00: src/lib/x-kit/xclient/src/wire/xtypes.pkg: For clarity, change VISUAL.id -> VISUAL.visual_id.
2010-03-03-01.29.58: src/lib/x-kit/xclient/src/wire/display.pkg: Dusty Deboer had ad-hoc retry logic hammered in on X-server connect and read-reply. Removed the former; naive retry will not work for connect() anyhow.  Replaced the latter (which is in fact needed due to 50Hz SIGALRM generating EINTRs in recv.c) with better-written pre-existing retry_syscall_on_eintr code.
2010-03-02-03.14.36: src/runtime/c-libs/lib7-c.h: Tweaked RAISE_SYSERR and RAISE_ERROR to correctly report both file and line number (e.g., foo.c:13 instead of just foo.c) for C-originated Mythryl exceptions.
2010-03-02-02.30.30: src/lib/std/src/threadkit/unix/: Renamed syscall.pkg -> retry-syscall-on-eintr.pkg -- because that is what it does. :-) 
2010-03-01-18.23.35: src/lib/std/src/threadkit/unix/: Renamed syscall.pkg -> retry-syscall-on-eintr.pkg -- because that is what it does. :-) 
2010-03-01-18.23.35: src/lib/x-kit/xclient/src/wire/display.api: For clarity, renamed XSCREEN.root -> XSCREEN.root_window_id.
2010-03-01-17.37.55: src/lib/x-kit/widget/basic/root-window.pkg: For clarity rename ROOT_WINDOW.next_id -> ROOT_WINDOW.next_widget_id.
2010-03-01-17.26.51: src/lib/x-kit/widget/basic/root-window.pkg: For clarity and consistency rename ROOT_WINDOW.make_id -> ROOT_WINDOW.next_id :-)
2010-03-01-17.13.47: src/lib/x-kit/widget/basic/root-window.pkg: For clarity rename ROOT_WINDOW.id_fn -> ROOT_WINDOW.make_id, since that is what it does.
2010-03-01-16.14.36: src/lib/x-kit/xclient/src/window/: Created xsession.api -- kinda crazy for a module as big as xsession.pkg to have no explicit API definition.
2010-03-01-14.52.35: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Cleanly close tracelog at end, using new tracing::currently_tracing_to() fn.
2010-03-01-12.54.56: src/lib/src/lib/thread-kit/src/lib/tracing.api: Added currently_tracing_to () fn.
2010-02-28-23.38.55: src/lib/x-kit/xclient/src/wire/display.pkg: Consistently report X server connection failures via XSERVER_CONNECT_ERROR exception, and attempt to be more clear about the problem.  src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Trap XSERVER_CONNECT_ERROR cleanly, report it, and abort all remaining xclient unit tests.
2010-02-28-22.36.46: src/lib/x-kit/xclient/xcore.api and elsewhere: Renamed BAD_ADDRESS -> XSERVER_CONNECT_ERROR for clarity.
2010-02-28-20.58.03: Changed *.LOAD_LOG -> *.load.log to further reduce the shouting.
2010-02-28-20.34.43: Generate foo.make6.index files instead of foo.make6.INDEX files, to reduce the shouting.
2010-02-28-16.34.25: For improved clarity, globally changed foo.make6.a7 freezefile names to foo.make6.frozen.
2010-02-28-15.30.34: Generate .compile.log files instead of .COMPILE_LOG files -- got tired of the shouting.
2010-02-28-14.42.34: Makefile: Added rest-a7-clean target to remove the freezefiles (.a7 files) created by doing make rest.
2010-02-26-22.31.12: Backed out all those proactive EINTR retries pending better understanding -- see discussion at bottom of src/runtime/c-libs/lib7-socket/connect.c
2010-02-26-21.30.16: Quite a bit of fiddling. In particular: src/runtime/c-libs/lib7-socket/hexdump-if.c: Wrote this to provide classic hex+ascii tracelogging of socket traffic.  src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Changed this to pass authentication info to open_xdisplay; now succeeds in contacting X server and decoding connect request reply. Also did some fiddling to make authentication.pkg visible and usable both inside and outside xclient library, and to get type sharing right.
2010-02-24-03.11.51: src/lib/x-kit/xclient/xauthentication.(api,pkg): Commenting.
2010-02-23-23.44.26: src/lib/x-kit/xclient/xauthentication.(api,pkg): Commenting.
2010-02-23-22.26.32: src/runtime/c-libs/: More proactive EINTR retries. NB: JHReppy emailed that not retrying on EINTR at the C level was a deliberate SML/NJ design decision. Fair enough, although it makes my hair stand on end.
2010-02-23-12.33.18: src/runtime/c-libs/posix-os/poll.c: Proactively handle EINTR. Change wahtever -> whatever in previous fixes, also status == -1 to status < 0, which seems traditional for some reason.
2010-02-23-04.18.29: src/runtime/c-libs/posix-io/: Proactively handle EINTR in close.c, dup2.c, dup.c, fcntl_d.c, fcntl_gfd.c, fcntl_gfl.c, fcntl_l_64.c, fcntl_l.c, fcntl_sfd.c, fcntl_sfl.c, readbuf.c, read.c, writebuf.c, write.c.
2010-02-23-03.51.55: src/runtime/c-libs/posix-filesys/: Proactively handle EINTR errors in openf.c, ftruncate.c, ftruncate_64.c.
2010-02-23-03.21.54: src/runtime/c-libs/lib7-socket/connect.c: Added a select() loop to handle EINTR during connect(), per Unix Network Programming p452.
2010-02-23-02.10.44: src/runtime/c-libs/lib7-socket/: Proactively add retries on EINTR to various calls because with a 50HZ SIGALRM running to support concurrency, interrupted calls are a significant potential problem.
2010-02-23-00.23.14: src/lib/x-kit/xclient/xcore.api: For clarity, renamed Authentication,AUTHENTICATION -> Xauthentication,XAUTHENTICATION, similar renamings elsewhere.
2010-02-22-23.36.17: src/lib/x-kit/: draw/get-display(api,pkg) had nothing to do with drawing and no real distinction from xclient/xauthentication(api,pkg) functionality, so merged former into latter to reduce clutter and rationalize. For clarity, renamed fn parse_display -> parse_xdisplay_string, fn get_display -> get_xdisplay_string_and_xauthentication.
2010-02-22-23.02.55: src/lib/x-kit/: X authentication has nothing to do with X drawing, so moved x11-authentication.(api,pkg) from draw/ -> xclient/, renaming to xauthentication.(api,pkg) for stylistic consistency with the other files there.
2010-02-22-22.44.25: src/lib/x-kit/draw/x11-authentication.api: For clarity, renamed auth_file_name -> get_xauthority_filename, get_auth_by_addr -> get_xauthority_file_entry_by_address, get_best_auth_by_addr -> get_best_xauthority_file_entry_by_address, read_authentication_file -> get_selected_xauthority_file_entries, auth_names -> acceptable_authentication_methods.
2010-02-22-22.03.28: src/lib/x-kit/draw/: For clarity renamed xauth.api,xauth.pkg -> x11-authentication.api,x11-authentication.pkg.
2010-02-22-02.39.44: src/runtime/c-libs/lib7-socket/: sendbuf.c, recv.c: More tracelog print_if stuff.
2010-02-22-00.20.26: src/runtime/c-libs/lib7-socket/socket.c: Added much tracelog support. src/lib/std/src/socket/socket-guts.pkg: ctl_rcvbuf was bound to ctlSNDBUF instead of ctlRCVBUF. (Should maybe fix this in SML/NJ.) src/runtime/c-libs/lib7-socket/*.c: Commenting.
2010-02-21-11.46.34: src/runtime/c-libs/lib7-time/timeofday.c: Make return (sec,usec) value available at C (as well as Mythryl) level.  src/runtime/c-libs/lib7-socket/print-if.c: Use preceding to timestamp tracelog messages in format matching print_if from src/lib/src/lib/thread-kit/src/lib/tracing.pkg. Also, support printf-style formatting via vsnprintf.
2010-02-21-03.50.40: src/runtime/c-libs/lib7-socket/: Rename settracefn.c -> setprintiffn.c, add print-if.c to do actual trace logging from C code.
2010-02-21-01.53.21: src/runtime/c-libs/lib7-socket/: Create settracefn.c to support C-level tracing coordinated with tracing.pkg.  src/lib/std/src/socket/internet-socket.pkg: Add set_trace_fd call providing access to preceding.
2010-02-21-01.10.34: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Add logic to pry Unix fd out of Output_Stream value.
2010-02-20-23.10.59: src/lib/std/src/io/pure-io.api: Tidying.
2010-02-20-22.53.20: src/lib/std/src/posix/posix-io.pkg: Tidying.
2010-02-20-22.06.00: src/lib/std/src/posix/posix-io.pkg: Tidying, renaming for clarity.
2010-02-20-15.12.56: src/lib/std/src/io/file-g.pkg: Tidying.
2010-02-20-14.12.59: src/lib/std/src/: Renamed Base-imp.make6 -> stdlib-core.make6 for clarity and to reserve "imp" for threadservers.
2010-02-20-13.45.53: src/lib/std/src/unsafe/cinterface.pkg and kith: Light commenting and tidying.
2010-02-20-13.05.52: src/runtime/c-libs/unix-raise-syserr.c: Save errno value early to be on the safe side.
2010-02-20-11.31.32: src/lib/x-kit/xclient/src/wire/xsocket.pkg: Implement and export bytes_to_hex, bytes_to_ascii, string_to_hex, string_to_ascii. (They belong elsewhere.)  src/lib/x-kit/xclient/src/wire/display.pkg: More trace print_ifs taking advantage of preceding.
2010-02-20-02.56.46: src/runtime/c-libs/unix-raise-syserr.c and kith:  Commenting.
2010-02-20-02.02.54: src/lib/std/src/socket/socket-guts.pkg: Tidying.
2010-02-19-17.28.39: src/lib/x-kit/xclient/src/wire/display.pkg: Trace listing of generated socket. src/lib/std/src/socket/internet-socket.pkg: Added to_string() to support previous.
2010-02-19-16.41.34: src/lib/std/src/socket/internet-socket.pkg: Tidying.
2010-02-19-16.14.28: src/runtime/c-libs/lib7-c.h: Report line number as well as filename in RAISE_SYSERR and RAISE_ERROR macros.
2010-02-19-13.54.29: src/lib/std/src/: Renamed string-conversion.api,string-conversion.pkg -> number-string.api,number-string.pkg for brevity and clarity -- they are more about numbers than strings.
2010-02-19-13.08.32: src/lib/std/src/socket/: Renamed unix-generic-socket.pkg -> generic-socket.pkg for clarity and as part of concentrating on being posix-centric rather than cross-platform-centric.
2010-02-19-12.58.16: src/lib/std/src/string-conversion.api: For clarity, renamed Realfmt -> Real_Format and DEC/BIN/OCT -> DECIMAL/BINARY/OCTAL.
2010-02-19-12.04.32: src/lib/std/src/: Removed word.api, which was apparently just an old and unused copy of unt.api.
2010-02-19-11.53.09: src/lib/std/src/: Contents of word.api, unt.api were nearly identical; renamed div,mod -> /,% to make them fully identical.
2010-02-18-22.15.18: src/lib/x-kit/xclient/src/wire/crack-xserver-address.api: Added to_string.  src/lib/x-kit/xclient/src/wire/display.pkg: connect_to_xserver: Addional tracing.
2010-02-18-20.42.49: src/lib/x-kit/xclient/src/wire/crack-xserver-address.api: Renamed INET_ADDR -> INET_ADDRESS for clarity. src/lib/x-kit/xclient/src/wire/display.pkg: connect_to_xserver: Additional tracing printouts.
2010-02-18-20.17.09: src/lib/internet/socket-stuff.pkg: Light cleaning.
2010-02-18-19.46.24: src/lib/x-kit/xclient/src/wire/display.pkg: say_hello_to_xserver: retry: Log exceptions caught by name instead of silently discarding.
2010-02-18-16.39.35: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Tweak and date generated tracelog header. src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Remove an inappropriate newline.
2010-02-18-16.15.14: src/lib/std/src/time.api: Got tired of the redundancy of time::get_time(), changed it to time::get(). Added some comments.  Makefile: somewhat-clean: Remove all .log files.
2010-02-18-12.06.32: src/lib/x-kit/xclient/src/wire/display.pkg: Write to tracelog X server connection request reply. Minor cleaning.
2010-02-17-23.18.23: x-kit/xclient/src/stuff/xclient-unit-test.pkg: Fetch value of DISPLAY environment variable.
2010-02-17-22.51.09: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Start up and shut down thread scheduler.
2010-02-17-22.35.03: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: Set up to log trace messages to xclient-unit-test-trace.log.
2010-02-17-21.20.32: src/lib/core/internal/make7.api: Added mkdir, rename, rmdir, symlink, unlink -- all basic scripting functions posix folk expect to find readily available.
2010-02-17-20.00.36: src/lib/std/src/io/: For simplicity and consistency renamed threadkit-text-io-g.pkg, thread_text_io_g -> threadkit-file-g.pkg, threadkit_file_g.
2010-02-17-19.46.12: src/lib/std/src/io/: For simplicity and consistency renamed threadkit-text-io.api, Threadkit_Text_Io -> threadkit-file.api, Threadkit_File.
2010-02-17-19.29.43: src/lib/std/src/io/: For simplicity and consistency renamed text-io-g.pkg,text_io_g -> file-g.pkg,file_g.
2010-02-17-19.04.06: src/lib/std/src/io/: Renamed text-io.api -> file.api (and Text_Io -> File) for simplicity and consistency.
2010-02-17-18.30.46: src/lib/std/src/unix/: Renamed posix-file.pkg -> file.pkg because the package it contains is named file, to avoid confusion with src/lib/std/src/posix/posix-file.pkg, and because I want to make Mythryl posix-centric rather than primarily cross-platform.
2010-02-17-14.31.33: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg: (Re-)Established this unit test: Now is is run by src/lib/test/all-unit-tests.pkg (like all unit tests) but compiled by src/lib/x-kit/xclient/xclient-internals.make6 so as to have access to internal xclient packages for testing. This is probably a better pattern for large libraries than having all unit tests compiled by src/lib/test/unit-tests.make6, my previous approach.
2010-02-16-02.13.58: src/app/make7/main/make7-g.pkg: Bugfix for parsing -Cfoo=bar commandline switches, contributed by Jeffrey Lau (thanks!)
2010-02-15-20.43.43: Test...
2010-02-15-20.16.28: Testing...
2010-02-15-20.16.28: Makefile: Tweak 'make clean' to remove bin/nowhere and bin/gtk-slave.
2010-02-14-23.19.33: Test2...
2010-02-14-23.02.20: Test check-in.
2010-02-14-19.09.39: Maybe shrink distro by X10 :-)
2010-02-14-19.09.39: Maybe shrink distro by X10 :-)
2010-02-13-02.06.09: src/lib/x-kit/xclient/src/window/xsession.pkg: More 'include' squishing.
2010-02-12-13.34.35: src/lib/x-kit/xclient/src/wire/: Revived Reppy's old xreply-debug.pkg by translating it into Mythryl syntax, renaming wire-to-value.pkg -> wire-to-value-core.pkg, then renaming xrepy-debug.pkg -> wire-to-value.pkg.
2010-02-09-23.12.39: src/lib/x-kit/xclient/src/stuff/xserver-info-to-string.pkg: Forgot to show backing_store field, oops. Fixed.
2010-02-09-22.58.07: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Xserver_Screen: For clarity, renamed installed_maps -> installed_colormaps.
2010-02-09-22.46.30: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Xserver_Screen: Renamed formats -> pixmap_formats for consistency and clarity.
2010-02-09-22.35.23: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Xserver_Info: Renamed roots -> screens for clarity and consistency.
2010-02-09-22.23.53: src/lib/std/src/: For clarity, renamed int-ctype.pkg -> int-chartype.pkg, string-ctype.pkg -> string-chartype.pkg.
2010-02-09-22.08.54: src/lib/x-kit/xclient/src/wire/xtypes.pkg: Renamed max_req_len -> max_request_length.
2010-02-09-20.22.52: src/lib/x-kit/xclient/src/wire/xtypes.pkg: For brevity and consistency with code elsewhere, renamed rsrc_id_base,rsrc_id_mask -> xid_base,xid_mask.
2010-02-09-20.22.52: src/lib/x-kit/xclient/src/stuff/xserver-info-to-string.pkg: Added logic to dump pixelmap formats.
2010-02-09-20.06.27: src/lib/x-kit/xclient/src/stuff/xserver-info-to-string.pkg: Added logic to stringify the per-screen info.
2010-02-09-17.35.14: src/lib/x-kit/xclient/src/stuff/xserver-info-to-string.pkg: Implemented stringification of root-record fields via replicate-and-mutilate from wire-to-value.pkg.
2010-02-09-15.55.44: src/lib/x-kit/xclient/src/stuff/: Established xserver-info-to-string.pkg to print X-server connect request return info in human-readable form. (How could this not already exist??)
2010-02-09-15.21.56: src/lib/x-kit/xclient/src/wire/crack-xserver-address.pkg: For clarity, renamed display_name -> canonical_display_name.
2010-02-09-14.51.41: src/lib/x-kit/xclient/src/wire/window-io.api: Dropped the irritating XWV_ prefixes off the Xwin_Val constructors.
2010-02-09-14.30.22: src/lib/x-kit/xclient/src/wire/: wire-to-value.pkg: Synthesized a matching wire-to-value.api starting with interactive show_pkg() output.
2010-02-09-13.31.50: src/lib/x-kit/xclient/src/wire/: Merged the (tiny) wire-encoding.pkg into (huge) value-to-wire.pkg to simplify the programmer's model.
2010-02-09-13.09.23: src/lib/x-kit/xclient/src/wire/value-to-wire.pkg: Synthesized a matching value-to-wire.api starting with interactive show_pkg() output.
2010-02-08-21.33.49: src/lib/x-kit/tut/triangle/tri.pkg: More 'include' squishing.
2010-02-08-21.04.34: src/lib/x-kit/tut/plaid/plaid.pkg: More 'include' squishing.
2010-02-08-20.32.27: src/lib/x-kit/tut/ml-viewer/util/get-mouse-selection.pkg: More 'include' squishing.
2010-02-08-19.40.02: src/lib/x-kit/tut/ml-viewer/text-view/: Yet more of the same.
2010-02-08-15.25.27: src/lib/x-kit/tut/ml-viewer/graph-view/:  Split off view-font.api from view-font.pkg.
2010-02-08-15.15.24: src/lib/x-kit/tut/ml-viewer/graph-view/graph-viewer.pkg: More 'include' squishing.
2010-02-08-14.33.21: src/lib/x-kit/tut/ml-viewer/graph-view/geometry-2d-float.pkg: Renamed origin_of_box -> upperleft_of_box, corner_of_box -> lowerright_of_box for clarity and consistency with xgeometry.pkg.
2010-02-08-14.20.45: src/lib/x-kit/tut/ml-viewer/graph-view/geometry-2d-float.pkg: Renamed origin_point -> point_00 for brevity, clarity and consistency with xgeometry.pkg.
2010-02-08-14.02.18: src/lib/x-kit/: Renamed example/ -> tut/ for brevity.
2010-02-08-13.21.58: Pervasively add threadkit is from ... comments.
2010-02-08-02.51.23: src/lib/x-kit/example/mixer/: More of the same.
2010-02-08-02.28.51: src/lib/x-kit/example/calc/: More of the same.
2010-02-08-02.08.49: src/lib/x-kit/example/bricks/: More 'include' squishing and general shit-shovelling.
2010-02-08-00.28.07: src/lib/x-kit/example/bounce/: More of the same.
2010-02-07-23.07.40: src/lib/x-kit/example/bitmap-editor/bitmap-editor.pkg: More 'include' squishing.
2010-02-07-22.15.30: src/lib/x-kit/example/basicwin/basicwin.pkg: More 'include' squishing.
2010-02-07-21.25.53: src/lib/x-kit/example/add/splash.pkg: More 'include' squishing.
2010-02-07-21.25.53: src/lib/x-kit/example/add/scene.pkg: More 'include' squishing.
2010-02-07-20.43.32: src/lib/x-kit/example/add/calc.pkg: More 'include' squishing.
2010-02-07-20.15.05: src/lib/x-kit/example/add/answer.pkg: More 'include' squishing.
2010-02-07-19.55.36: src/lib/x-kit/example/add/add.pkg: More 'include' squishing.
2010-02-07-19.36.36: src/lib/x-kit/widget/wrapper/size-preference-wrapper.pkg: More 'include' squishing.
2010-02-07-19.15.33: src/lib/x-kit/widget/wrapper/iconifiable-widget.pkg: More 'include' squishing.
2010-02-07-14.55.03: src/lib/x-kit/xclient/xgeometry.api:  For clarity and brevity, renamed origin_point -> point_00.
2010-02-07-14.38.45: src/lib/x-kit/widget/wrapper/border.pkg: More 'include' squishing.
2010-02-07-14.25.24: src/lib/x-kit/widget/text/virtual-terminal.pkg: More 'include' squishing.
2010-02-07-13.42.24: src/lib/x-kit/widget/text/text-widget.pkg: More 'include' squishing.
2010-02-07-13.09.07: src/lib/x-kit/widget/text/string-editor.pkg: More 'include' squishing.
2010-02-07-12.50.46: src/lib/x-kit/widget/text/scrollable-string-editor.pkg: More 'include' squishing.
2010-02-07-05.00.20: src/lib/x-kit/widget/text/one-line-virtual-terminal.pkg: More 'include' squishing.
2010-02-07-02.56.11: src/lib/x-kit/widget/text/: Renamed extstr.pkg -> extensible-string.pkg, split off extensible-string.api as a separate file.
2010-02-06-23.40.30: src/lib/x-kit/widget/menu/pulldown-menu-button.pkg: More 'include' squishing.
2010-02-06-23.17.25: src/lib/x-kit/widget/menu/popup-menu.pkg: More 'include' squishing.
2010-02-06-22.35.55: src/lib/x-kit/widget/lib/widget-attribute.pkg: More 'include' squishing.
2010-02-06-21.04.14: src/lib/x-kit/widget/lib/three-d.pkg:  More 'include' squishing.
2010-02-06-20.34.42: src/lib/x-kit/widget/lib/: Split off shade-imp.api from shade-imp.pkg, run-xkit.api from run-xkit.pkg, usual cleaning.
2010-02-06-19.29.41: src/lib/x-kit/widget/lib/: Random cleaning per usual.
2010-02-06-18.59.31: src/lib/x-kit/widget/leaf/: A bit more cleaning on toggle*.
2010-02-06-05.55.50: src/lib/x-kit/widget/leaf/toggleswitch-behavior-g.pkg: More 'include' squishing.
2010-02-06-05.30.47: src/lib/x-kit/widget/leaf/textlist.pkg: More 'include' squishing.
2010-02-06-04.56.31: src/lib/x-kit/widget/leaf/textbutton-appearance.pkg: More 'include' squishing.
2010-02-06-04.35.16: src/lib/x-kit/widget/leaf/slider.pkg: More 'include' squishing.
2010-02-06-04.08.53: src/lib/x-kit/widget/leaf/slider-appearance.pkg: More 'include' squishing.
2010-02-06-03.56.34: src/lib/x-kit/widget/leaf/scrollbar-appearance.pkg: More 'include' squishing.
2010-02-06-03.05.41: src/lib/x-kit/widget/leaf/pushbuttons.pkg: More cleaning.
2010-02-06-02.47.55: src/lib/x-kit/widget/leaf/pushbutton-behavior-g.pkg: More 'include' squishing.
2010-02-06-02.27.41: src/lib/x-kit/widget/leaf/message.pkg: More 'include' squishing.
2010-02-06-02.09.32: src/lib/x-kit/widget/leaf/label.pkg: More 'include' squishing.
2010-02-06-01.56.58: src/lib/x-kit/widget/leaf/labelbutton-appearance.pkg: More 'include' squishing.
2010-02-06-01.03.16: src/lib/x-kit/widget/leaf/colorbox.pkg: More squishing of mostly-unused 'include's.
2010-02-06-00.31.09: src/lib/x-kit/widget/leaf/checkbutton-appearance.pkg:  More 'include' squishing.
2010-02-06-00.16.40: src/lib/x-kit/widget/leaf/button-base.pkg: Light cleaning.
2010-02-06-00.04.59: src/lib/x-kit/widget/leaf/button-appearance-from-shape-g.pkg: More 'include' squishing.
2010-02-05-23.51.39: src/lib/x-kit/widget/basic/xevent-mail-router.pkg:  More 'include' squishing.
2010-02-05-23.21.20: src/lib/x-kit/widget/basic/widget.pkg: More 'include' squishing.
2010-02-05-22.36.31: src/lib/x-kit/widget/basic/widget-base.pkg: More 'include' squishing.
2010-02-05-22.22.02: src/lib/x-kit/widget/basic/topwindow.pkg:  More 'include' squishing.
2010-02-05-21.51.27: src/lib/x-kit/widget/basic/root-window.pkg: Establish and use top-of-file package-name abbreviations.
2010-02-05-21.36.42: src/lib/x-kit/widget/layout/widget-with-scrollbars.pkg: More 'include' squishing. Most not even used. *sigh*
2010-02-05-21.15.02: src/lib/x-kit/widget/layout/scrolled-widget.pkg: More 'include' squishing.
2010-02-05-20.37.08: src/lib/x-kit/widget/layout/line-of-widgets.pkg: More 'include' squishing.
2010-02-05-20.19.47: src/lib/x-kit/widget/layout/lay-out-linearly.pkg: More 'include' squishing.
2010-02-05-19.48.39: src/lib/x-kit/widget/layout/viewport.pkg: More 'include' squishing.
2010-02-05-14.09.40: src/lib/x-kit/widget/layout/viewport.pkg: Applied changes from SML/NJ 110.59.
2010-02-04-23.32.47: src/lib/x-kit/widget/wrapper/choice-of-widgets.pkg: Applied Dr David Benson's resize-bug bugfix from SML/NJ 110.59.
2010-02-04-22.48.18: src/lib/x-kit/widget/wrapper/choice-of-widgets.api: Renamed make_pile -> make_choice_of_widgets, pile -> choice_of_widgets.
2010-02-04-22.31.36: src/lib/x-kit/widget/wrapper/choice-of-widgets.pkg: Squished more 'include's. They're like cockroaches, man.
2010-02-04-17.41.20: src/lib/x-kit/xclient/src/window/window.pkg: Applied Dusty Deboer tweak from SML/NJ 110.59.  src/lib/x-kit/xclient/src/wire/event-types.pkg: Repaired collateral damage from the SML -> Mythryl syntax change, renaming XEVENT_PACKAGE_NOTIFY -> XEVENT_STRUCTURE_NOTIFY, XEVENT_SUBPACKAGE_NOTIFY -> XEVENT_SUBSTRUCTURE_NOTIFY, XEVENT_SUBPACKAGE_REDIRECT -> XEVENT_SUBSTRUCTURE_REDIRECT.
2010-02-04-17.28.41: src/lib/x-kit/draw/xauth.pkg: Applied Dusty Deboers tweaks from SML/NJ 110.59.
2010-02-04-17.03.42: src/lib/x-kit/draw/get-display.pkg: Applied Dusty Deboers fixes from SML/NJ 110.59.
2010-02-04-15.47.32: src/lib/x-kit/xclient/src/window/: Renamed clientside-window.pkg -> cs-pixmap.pkg for better parallelism with ro-pixmap.pkg & rw-pixmap.pkg. Split off cs-pixmap.api. The usual cleaning stuff.
2010-02-04-00.47.03: src/lib/x-kit/xclient/src/window/window.pkg: Establish and use more top-of-file package abbreviations.
2010-02-04-00.11.36: src/lib/x-kit/xclient/src/window/window.pkg: More 'include' purging.
2010-02-03-13.41.01: src/lib/x-kit/xclient/src/window/widgettree-root-xevent-router.pkg: More 'include' purging.
2010-02-03-12.18.23: src/lib/x-kit/xclient/src/window/widget-cable.pkg:  Changed icky includes into package synonyms.
2010-02-03-11.18.24: src/lib/x-kit/xclient/src/window/: Light cleaning in selection*.
2010-02-03-11.02.14: src/lib/x-kit/xclient/src/window/ro-pixmap.pkg: Split off ro-pixmap.api, general cleanup.
2010-02-03-10.36.06: src/lib/x-kit/xclient/src/window/: Renamed readonly-window.pkg -> ro-pixmap.pkg for parallelism with rw-pixmap.pkg.
2010-02-03-04.07.01: src/lib/x-kit/xclient/src/window/draw-types.api: Rename Pixmap -> Rw_Pixmap, PIXMAP -> RW_PIXMAP etc.
2010-02-03-03.14.44: src/lib/x-kit/xclient/src/window/: Renamed pixmap.pkg -> rw-pixmap.pkg. There must be some way out of here, said the joker to the thief...
2010-02-03-02.46.26: src/lib/x-kit/xclient/src/window/: Rename property-imp.pkg -> window-property-imp.pkg for clarity.
2010-02-03-02.31.26: src/lib/x-kit/xclient/src/window/: Rename offscreen-window.pkg back to pixmap.pkg.  *sigh*.
2010-02-03-02.14.55: src/lib/x-kit/xclient/src/window/offscreen-window.pkg: Usual cleanup.
2010-02-03-01.39.22: src/lib/x-kit/xclient/src/window/keymap-imp.api: Renamed lookup_keysym -> look_up_keysym because lookup is a noun dammit. Sheesh!
2010-02-03-01.25.16: src/lib/x-kit/xclient/src/window/keymap-imp.pkg: Split off keymap-imp.api, usual cleanup.
2010-02-03-00.51.25: src/lib/x-kit/xclient/src/window/hash-window.pkg: Split off hash-window.api, usual cleanup.
2010-02-03-00.31.37: src/lib/x-kit/xclient/src/window/graphics-context-imp.api: Renaming for sanity, random housecleaning.
2010-02-03-00.07.40: src/lib/x-kit/xclient/src/window/: Rename gc-imp.pkg -> graphics-context-imp.pkg, split off graphics-context-imp.api.
2010-02-02-23.23.02: src/lib/x-kit/xclient/src/window/font-imp.pkg:  Split off font-imp.api.  Establish and use top-of-file package abbreviations.
2010-02-02-22.57.52: src/lib/x-kit/widget/text/text-widget.pkg: TEXT_WINDOW: Renamed char_ht,char_wid -> char_high,char_wide. Because I can.
2010-02-02-22.23.52: src/lib/x-kit/xclient/src/wire/xtypes.pkg: CHAR_INFO: changed char_wid -> char_width. Spelling: It's not just for children anymore!
2010-02-02-21.29.40: src/lib/x-kit/xclient/src/window/: Split off pen-guts.api from pen-guts.pkg.  Split off draw-types.api from draw-types.pkg. draw-types.pkg: Establish and use top-of-file package abbreviations..
2010-02-02-21.17.09: src/lib/x-kit/xclient/src/window/draw.pkg: Establish and use top-of-file package abbreviations. Stop including insanely many packages.
2010-02-02-20.49.44: src/lib/x-kit/xclient/src/window/draw-imp.pkg: Establish and use top-of-file package abbreviations.
2010-02-02-20.19.56: src/lib/x-kit/xclient/src/window/draw-imp.api: Establish and use top-of-file package abbreviations.
2010-02-02-20.06.08: src/lib/x-kit/xclient/src/window/cursors.pkg: Add top-of-file package synonyms, and use them.
2010-02-02-19.56.06: src/lib/x-kit/xclient/src/window/color-imp.pkg: Light cleaning.
2010-02-02-19.24.26: src/lib/x-kit/xclient/src/stuff/: Renamed xvalid.pkg -> range-check.pkg because all it does range checks. src/lib/x-kit/xclient/src/stuff/xtracing.pkg: Added nifty quotation at the top.
2010-02-02-18.48.13: src/lib/x-kit/xclient/src/stuff/: Split off hash-xid.api from hash-xid.pkg.  Renamed gripe.pkg -> xgripe.pkg because it is in fact exported from xclient. Renamed xdebug.pkg -> xtracing.pkg because it is primarily about tracing printouts, and for consistency with tracing.pkg, which it builds on.
2010-02-02-18.02.25: src/lib/x-kit/xclient/src/iccc/: Split off atom-imp.api from atom-imp.pkg.
2010-02-02-16.26.23: src/lib/x-kit/: For speed and dead-link insurance, replaced eXene library and widget manual URLs in Mythryl code and docs with ones pointing to locally cached copies in http::mythryl.org/pub/exene/.
2010-02-02-16.26.23: src/lib/x-kit/xclient/src/iccc/: Renamed xatom.pkg -> atom.pkg because it is not an external interface package, and because no disambiguation is required.
2010-02-02-16.13.20: src/lib/x-kit/xclient/src/iccc/: Split off window-manager-hint.pkg from iccc-property.pkg, because only the latter gets exported by xclient.pkg as part of the xselection external interface package.
2010-02-02-15.26.51: src/lib/x-kit/xclient/src/iccc/: For clarity, renamed property.pkg -> window-property.pkg.
2010-02-02-15.09.30: src/lib/x-kit/xclient/src/iccc/property.pkg: Random cleaning.
2010-02-02-14.53.50: src/lib/x-kit/xclient/src/iccc/atom-imp.pkg: Superficial cleaning.
2010-02-01-14.31.24: src/lib/x-kit/xclient/src/window/window.pkg: Tidying. src/lib/x-kit/xclient/src/wire/window-io.pkg: Comenting.
2010-02-01-14.19.32: src/lib/x-kit/xclient/src/wire/value-to-wire.pkg:  Floor scrubbing + toilet cleaning.
2010-02-01-12.40.34: src/lib/x-kit/xclient/src/wire/: Renamed server-time.pkg -> xserver-timestamp.pkg and all associated fields time -> timestamp because these are not times (not monotonic increasing) and calling them times is the sort of thing that gets people killed.
2010-02-01-10.53.48: src/lib/x-kit/xclient/src/wire/sendevent-to-wire.pkg: For clarity, move package synonym defs outside package proper.
2010-02-01-10.31.29: src/lib/x-kit/xclient/src/wire/keys-and-buttons.pkg: For sanitys, changed 'include xtypes;' -> ''package xt = xtypes;', related cleanup.
2010-02-01-10.07.04: src/lib/x-kit/xclient/src/stuff/: For better separation of concerns, split xprint.pkg -> xerror-to-string.pkg, xtype-to-string.pkg, xevent-to-string.pkg. src/lib/x-kit/xclient/src/wire/: Renamed protocol-types.pkg -> xtypes.pkg for brevity and parallelism with xerrors.pkg.
2010-02-01-08.29.16: src/lib/x-kit/xclient/src/wire/event-types.pkg: For clarity, changed 'include geometry;' -> 'package g  = geometry;'. Other internal cleanup.
2010-02-01-08.13.01: src/lib/x-kit/xclient/src/wire/event-types.pkg: For clarity, changed 'include protocol_types;' -> 'package pt = protocol_types;'.
2010-02-01-00.34.45: src/lib/x-kit/xclient/src/wire/display.pkg: Internal commenting and cleaning.
2010-02-01-00.13.04: src/lib/x-kit/xclient/src/stuff/: Renamed mlx-err.pkg -> gripe.pkg because it is shorter, sharper -- and traditional. Ah, tradition!
2010-01-31-23.29.26: src/lib/x-kit/xclient/src/wire/: Renamed get-server-address.pkg -> crack-xserver-address.pkg, since that is what it turns out to do.
2010-01-31-22.19.12: src/lib/x-kit/xclient/src/wire/display.pkg: Internal renaming and cleaning.
2010-01-31-20.28.49: src/lib/x-kit/xclient/src/wire/: For clarity, renamed xshutdown.pkg -> socket-closer-imp.pkg.
2010-01-31-18.14.45: src/lib/x-kit/xclient/src/wire/: Renamed xtime.pkg -> server-time.pkg.
2010-01-31-18.14.45: src/lib/x-kit/xclient/src/wire/: For clarity, renamed xsendevt.pkg -> sendevent-to-wire.pkg.
2010-01-31-17.48.44: src/lib/x-kit/xclient/src/: Renamed procotol/ -> wire/ for brevity and concreteness -- 'protocol' is such a bland multisyllabic mouthful.
2010-01-31-15.40.05: src/lib/x-kit/xclient/src/protocol/: Renamed wire-to-xreplies.pkg -> wire-to-value.pkg (more accurate -- it handles X replies, but also X events and X errors).
2010-01-31-15.27.08: src/lib/x-kit/xclient/src/protocol/: Renamed xerrors.pkg -> protocol-errors.pkg.
2010-01-31-15.11.35: src/lib/x-kit/xclient/src/protocol/: Renamed xprotocol-wire-encoding.pkg -> wire-encoding.pkg.
2010-01-31-14.52.25: src/lib/x-kit/xclient/src/protocol/: Renamed xprotocol-types.pkg -> protocol-types.pkg.
2010-01-31-14.30.33: src/lib/x-kit/xclient/src/protocol/: Renamed xdisplay.pkg -> display.pkg (trying to reserve x-names for external packages).
2010-01-31-13.30.52: src/lib/x-kit/xclient/src/protocol/: Broke out API definitions as separate files.
2010-01-31-12.47.20: Added to 'make chec'> suite: src/lib/x-kit/xclient/src/stuff/xclient-unit-test.pkg.
2010-01-31-12.12.34: src/lib/x-kit/xclient/src/: Merged hash/ contents (one active sourcefile) into stuff/, removed hash/, removed unused and broken load-x script.
2010-01-31-10.43.03: src/lib/x-kit/xclient/: Changed xevent_mail_router abbreviation from xm -> mr, trying to reserve 'x' for exported packages.
2010-01-30-22.55.17: src/lib/x-kit/xclient/src/window/: Renamed xcursors.pkg -> cursors.pkg to avoid confusion with src/lib/x-kit/xclient/xcursors.pkg.
2010-01-30-22.37.30: src/lib/x-kit/xclient/src/window/: Renamed xdraw.pkg -> draw.pkg to avoid confusion with src/lib/x-kit/xclient/xdraw.pkg.
2010-01-30-22.21.23: src/lib/x-kit/xclient/src/window/: Renamed xgeometry.pkg -> geometry.pkg to reduce confusion with src/lib/x-kit/xclient/xgeometry.pkg.
2010-01-30-21.03.47: src/lib/x-kit/xclient/: Eliminated src/client-interface/, moving its .api files to src/lib/x-kit/xclient/ etc.
2010-01-30-15.10.08: src/lib/x-kit/xclient/: Following up on previous, renamed xkit-lib-client-interface.make6 -> xclient.make6.
2010-01-30-14.49.12: src/lib/x-kit/: For clarity, renamed lib/ -> xclient/, since in fact it implements network-level X client functionality.
2010-01-30-14.33.16: src/lib/x-kit/lib/: For tidiness, created src/ and moved most directory contents into it.
2010-01-30-14.13.21: src/lib/x-kit/lib/client-interface/: Renamed iccc.pkg -> xselection.pkg for clarity and coherency.
2010-01-30-13.41.19: src/lib/x-kit/lib/client-interface/: Renamed geometry-2d.pkg -> xgeometry.pkg to increase coherency of client interface.
2010-01-30-13.09.31: src/lib/x-kit/lib/client-interface/: Renamed font.pkg -> xfont.pkg for increased client interface coherency.
2010-01-30-12.28.52: src/lib/x-kit/lib/client-interface/: Renamed xkit_window -> xwindow to bring more coherency to xkit lib client interface.
2010-01-30-11.31.04: src/lib/x-kit/lib/protocol/: Renamed xwindow.pkg -> xwindow-io.pkg, mostly to free up the name.
2010-01-30-01.37.26: src/lib/x-kit/lib/client-interface/sharing/: Renamed drawing.api -> xdraw.api;  src/lib/x-kit/lib/window/: Renamed drawing.pkg -> xdraw.pkg.
2010-01-30-01.16.16: src/lib/x-kit/lib/client-interface/: Renamed drawing.pkg -> xdraw.pkg to bring some coherence to the client interface.
2010-01-29-23.51.28: src/lib/x-kit/lib/window/: Renamed xcursor.pkg -> xcursors.pkg because it is in fact a collection.
2010-01-29-23.35.28: src/lib/x-kit/lib/client-interface/: I like a simple one-package-per-file approach, so I broke build.pkg up into drawing.pkg, font.pkg, geometry-2d.pkg, iccc.pkg, standard-xcursors.pkg, xcore.pkg, xinput.pkg, xkit-window.pkg.
2010-01-29-23.08.15: src/lib/x-kit/lib/: Renamed api/ -> client-interface/ for clarity, related reorganization thereabouts.
2010-01-29-14.23.18: src/lib/x-kit/lib/api/: For clarity, renamed xkit.pkg -> xkit-lib-external-interface.pkg, package xkitx -> xkit_lib_external_interface.
2010-01-29-14.06.38: src/lib/x-kit: Pervasively changed xcore package abbreviation from xb -> xc to reflect preceding namechange from xkit_base -> xcore.
2010-01-29-13.44.58: src/lib/x-kit/lib/api/: For brevity, renamed xkit-base.api -> xcore.api, package xkit_base -> xcore etc.
2010-01-29-02.50.23: src/lib/x-kit/lib/protocol/: Renamed xwin.pkg -> xwindow.pkg for clarity.
2010-01-29-02.30.45: src/lib/x-kit/lib/api/xkit.pkg: For consistency, renamed g package component -> g2 in drawing, iccc, xinput, xkit_window.
2010-01-29-02.01.53: src/lib/x-kit/lib/api/xkit.pkg: Renamed xkit_base::g (geometry_2d) component to g2 for consistency.
2010-01-29-01.48.53: src/lib/x-kit/lib/api/geometry-2d.api: Renamed Window_Shape -> Window_Footprint for clarity (includes position as well as size info.)
2010-01-28-21.10.53: src/lib/x-kit/widget/fancy/2d-graphics/: Renamed Makefile.make6 -> xkit-widget-fancy-graphics2d.make6. Trivial, since the code in this directory is not currently compiled -- or compilable.
2010-01-28-20.56.35: src/lib/x-kit/style/: Renamed Makefile.make6 -> xkit-style.make6.
2010-01-28-20.42.14: src/lib/x-kit/lib/: For clarity, renamed xkit-lib.make6 -> xkit-lib-exports.make6, base.make6 -> xkit-lib-imports.make6.
2010-01-28-20.29.47: src/lib/x-kit/: Removed Makefile.make6. (Obsolete crud from the neolithic.)
2010-01-28-20.01.26: src/lib/x-kit/widget/: Renamed Makefile.make6 -> xkit-widget.make6.
2010-01-28-19.46.47: src/lib/x-kit/lib/api/xkit.pkg: Temporarily renamed package xkit -> xkitx to ease searching for it via egrep and tags-search. (Hard to believe we are still doing text-level codebase queries in 2010!)
2010-01-28-19.35.19: src/lib/x-kit/: Changed popup_menu abbeviation from pop to pu to fit two-char packag-abbreviation convention.
2010-01-28-19.25.56: src/lib/x-kit/lib/: Renamed user/ -> api/ for brevity and clarity. (Defines externally visible apis for xkit-lib.)
2010-01-28-19.05.41: src/lib/x-kit/: Renamed graphlib/ -> draw/ for brevity and clarity.
2010-01-28-18.53.20: src/lib/x-kit/graphlib/: Renamed Makefile.make6 -> xkit-draw.make6
2010-01-28-18.37.01: src/lib/x-kit/lib/: Renamed Makefile.make6 -> xkit-lib.make6. Unix habits die hard! :-)
2010-01-28-17.03.01: src/lib/x-kit/widget/basic/: Split off widget-types.pkg from widget-base.pkg, which was a formless mess.
2010-01-28-15.35.07: src/lib/x-kit/widget/lib/: Renamed 3d.pkg -> three-d.pkg.
2010-01-28-15.17.53: src/lib/x-kit/widget/basic/widget-base.api: Remove g (geometry_2d) package component.
2010-01-28-14.32.14: src/lib/x-kit/: Pervasively changed widget_styles abbreviation from sty -> wy. (Leaning towards standardizing on two-letter package-name abbreviations.)
2010-01-28-14.04.30: src/lib/x-kit/widget/basic/widget.api: Removed xb (xkit_base) component.
2010-01-28-13.04.23: src/lib/x-kit/lib/user: Renamed x-kit.pkg -> xkit.pkg
2010-01-28-12.38.45: src/lib/x-kit/lib/: Renamed util/ -> hash/ because it contains hashing code; Renamed misc/ -> stuff/ because 'stuff' is at least an English word.
2010-01-28-11.52.31: src/lib/x-kit/: Renamed x_kit_version -> xkit_version.
2010-01-28-11.40.26: src/lib/x-kit/: Renamed x_kitwin -> xkit_window, X_Kit_Window -> Xkit_Window.
2010-01-28-11.20.25: src/lib/x-kit/: Renamed x_kitbase -> xkit_base, X_Kit_Base -> Xkit_Base.
2010-01-28-04.14.22: src/lib/x-kit/: Renamed x-kit.make6 -> xkit.make6.
2010-01-28-03.57.17: src/lib/x-kit/lib/user/: Renamed interact.api -> xinput.api for clarity and brevity.
2010-01-27-03.18.41: src/lib/x-kit/widget/basic/widget.pkg: Renamed filter_from_mom -> filter_other for consistency.  Last of the commenting per Gansner+Reppy 1993.
2010-01-27-02.33.59: src/lib/x-kit/widget/basic/widget-base.api: Renamed wrap_create -> make_child_window for clarity. src/lib/x-kit/widget/basic/widget.pkg: More commenting per Gansner+Reppy 1993 -- even some ascii art! :-)
2010-01-27-01.54.01: src/lib/x-kit/widget/basic/: For clarity, renamed router.pkg -> xevent-mail-router.pkg; split off xevent-mail-router.api as a separate file.
2010-01-27-01.20.39: src/lib/x-kit/widget/: Renamed node/ -> wrapper/ as better capturing the functionality of the widgets in question.
2010-01-27-01.02.21: src/lib/x-kit/lib/window/widget-cable.pkg: MOMPLUG: Renamed from_mouse',from_keyboard',from_other' -> mouse_sink,keyboard_sink,other_sink -- more stuff that was Just Wrong and entirely my fault.
2010-01-27-00.38.25: src/lib/x-kit/lib/window/widget-cable.pkg: Renamed MOMPLUG.to_mom' -> MOMPLUG.from_kid'. (Previous name was Just Plain Wrong -- my bad.)
2010-01-26-23.55.48: src/lib/x-kit/widget/basic/widget.pkg: Yet more commenting per Gansner+Reppy 1993 docs.
2010-01-26-23.38.55: src/lib/x-kit/lib/window/widget-cable.pkg: Renamed MOM_RESIZE_PLEA,MOM_DESTROY_PLEA -> REQ_RESIZE,REQ_DESTRUCTION: Shorter and sharper.
2010-01-26-23.21.18: src/lib/x-kit/lib/window/widget-cable.pkg: More of same. src/lib/x-kit/widget/basic/widget.pkg: More commenting per Gansner+Reppy 1993 docs.
2010-01-26-22.53.03: src/lib/x-kit/lib/window/widget-cable.pkg: Momplug,Kidplug: Renamed from_mom' -> from_other', which is more accurate.
2010-01-26-20.28.36: src/lib/x-kit/lib/window: Split off keysym-to-ascii.api from keysym-to-ascii.pkg.  src/lib/x-kit/widget/basic/widget.pkg: Commenting per Gansner+Reppy 1993 docs.
2010-01-26-20.28.36: src/lib/x-kit/widget/menu/: Renamed menu-button.pkg -> pulldown-menu-button.pkg because that is what it is -- why be coy?  Broke off pulldown-menu-button.api as a separate file.
2010-01-26-19.48.52: src/lib/x-kit/widget/menu/popup-menu.api: A bit more renaming for clarity.
2010-01-26-19.31.36: src/lib/x-kit/widget/menu/: Renamed simple-menup.pkg -> popup-menu.pkg, because that is what it is. Much related renaming. Much commenting per Gansner+Reppy 1993 docs.
2010-01-26-15.08.36: src/lib/x-kit/widget/: Moved menu stuff from layout/ into new menu/ subdir. Renamed layout/index.pkg -> lib/list-indexing.pkg. Renamed layout/hideable.pkg -> node/iconifiable-widget.pkg.
2010-01-25-23.41.04: src/lib/x-kit/widget/text/text-widget.api: More commenting per Gansner+Reppy 1993 docs.
2010-01-25-23.21.38: src/lib/x-kit/widget/text/: Renamed txtwin.pkg -> one-line-virtual-terminal.pkg because that is what it is documented as being -- why be coy?
2010-01-25-23.02.30: src/lib/x-kit/widget/text/: Renamed vtty.pkg -> virtual-terminal.pkg because that is what it is documented as being -- and because I have used teletypes and know the difference. :-)
2010-01-25-22.12.15: src/lib/x-kit/widget/text/text For clarity and consistency renamed string-edit.api -> string-editor.api, field-edit.api -> scrollable-string-editor.api, related renamings, commenting per Gansner+Reppy 1993 docs.
2010-01-25-21.37.39: src/lib/x-kit/widget/text/string-edit.pkg: Split off string-edit.api as a separate file.  For clarity, renamed initval,minlen -> initial_string, min_length.
2010-01-25-21.06.55: src/lib/x-kit/widget/leaf/toggleswitches.api: More commenting per Gansner+Reppy 1993 docs.
2010-01-25-20.42.23: src/lib/x-kit/widget/leaf/textlist.api: For clarity renamed get_chosen -> get_textlist_selections, set_active -> set_textlist_active_items, get_state -> get_testlist_item_states, set_chosen -> set_textlist_selections.
2010-01-25-20.02.10: src/lib/x-kit/widget/leaf/textlist.api: Renamed mailop_of -> textlist_change'_of, added some comments per Gansner+Reppy 1993 docs.
2010-01-25-19.49.14: src/lib/x-kit/widget/leaf/: Renamed text-list.pkg -> textlist.pkg; split off textlist.api as a separate file.
2010-01-25-17.13.49: src/lib/x-kit/widget/leaf/slider.api: Commented per Gansner+Reppy 1993 docs; renamed [evtOf] -> slider_motion'_of.
2010-01-25-14.18.39: src/lib/x-kit/widget/leaf/scrollbar.api: Much renaming for clarity, e.g. set_vals -> set_scrollbar_thumb. Much commenting based on Gansner+Reppy 1993 docs.
2010-01-25-13.18.17: src/lib/x-kit/widget/leaf/label.pkg: Split off label.api as a separate file, renamed label() -> make_label'() because I prefer that make functions have the make_ prefix, added comments based on Gansner+Reppy 1993 docs.
2010-01-25-13.00.58: src/lib/x-kit/widget/leaf/divider.pkg: Split off api as separate file, added some comments based on Gansner+Reppy 1993 docs, random minor cleanup.
2010-01-25-12.31.43: src/lib/x-kit/widget/leaf/: Renamed color-box.pkg -> colorbox.pkg to bring the conceptual simplicity more in line with its actual simplicity. Added a comment or two based on the Gansner+Reppy 1993 docs.
2010-01-25-04.30.54: src/lib/x-kit/widget/leaf/canvas.api: Renamed drawable_of_canvas -> drawable_of, for consistency with the other *_of function names in the system.
2010-01-25-04.11.16: src/lib/x-kit/widget/leaf/: For clarity and consistency, renamed scroll-view.pkg -> scrollbar-appearance.pkg
2010-01-25-03.31.12: src/lib/x-kit/style/: Renamed style-g.pkg -> widget-style-g.pkg.
2010-01-25-03.05.20: src/lib/x-kit/widget/lib/: For clarity, renamed style.pkg -> widget-style.pkg.
2010-01-25-02.25.10: src/lib/x-kit/widget/leaf/: Renamed slider-view.pkg -> slider-appearance.pkg for clarity and consistency.
2010-01-25-02.04.18: src/lib/x-kit/widget/lib/: For clarity, renamed attribute.api -> widget-attribute.api (etc).
2010-01-24-22.31.07: src/lib/x-kit/widget/leaf/: toggleswitches.api, pushbuttons.api: More function renaming for clarity and consistency.
2010-01-24-22.09.06: src/lib/x-kit/widget/leaf/pushbuttons.api: More function renaming for clarity.
2010-01-24-21.52.10: src/lib/x-kit/widget/leaf/toggleswitches.api: For clarity, renamed get_state, set_state -> get_button_on_off_flag, set_button_on_off_flag.
2010-01-24-21.35.03: src/lib/x-kit/widget/leaf/pushbuttons.api: Added make_ prefix to make functions lacking it.
2010-01-24-21.00.39: src/lib/x-kit/widget/leaf/: Renamed pushbutton.pkg -> pushbuttons.pkg and toggleswitch.pkg -> toggleswitches.pkg because they are really collections.
2010-01-24-20.36.59: src/lib/x-kit/widget/: Globally renamed widget_of -> as_widget because it is a coercion, not an element fetch.
2010-01-24-20.24.38: src/lib/x-kit/widget/leaf/: For clarity, renamed button.pkg -> pushbutton.pkg and toggle.pkg -> toggleswitch.pkg.
2010-01-24-19.43.10: src/lib/x-kit/widget/leaf/: Renamed button-ctrl.api -> pushbutton-factory.api and button-ctrl.pkg -> pushbutton-behavior-g.pkg.
2010-01-24-19.30.30: src/lib/x-kit/widget/leaf/leaf/: For clarity, renamed button-appearance-g.pkg -> button-appearance-from-shape-g.pkg. Related renaming.
2010-01-24-19.17.07: src/lib/x-kit/widget/leaf/: Pervasively renamed 'view' -> 'appearance' for clarity, and because 'view' has a conflicting technical meaning nowadays.
2010-01-24-18.32.17: src/lib/x-kit/widget/leaf/: Renamed toggle-ctrl.pkg -> toggleswitch-behavior-g.pkg, split off toggleswitch-factory.api, related renaming.
2010-01-24-17.41.49: src/lib/x-kit/widget/leaf/: Much rationalization of button and toggle view and shape package and file names.
2010-01-24-16.23.57: src/lib/x-kit/widget/leaf/: Renamed shape-view.pkg -> button-view-g.pkg, broke out button-view-g-arg.api and button-view-g-arg-types.pkg as separate files.
2010-01-24-15.44.00: src/lib/x-kit/widget/leaf/button-control.api: For consistency and clarity, renamed button(), callback_button() -> make_button(), make_callback_button().
2010-01-24-15.25.28: src/lib/x-kit/widget/leaf/: Renamed button-ctrl.pkg -> button-control-g.pkg, split off button-control.api as a separate file.
2010-01-24-15.12.47: src/lib/x-kit/widget/leaf/button.api: Renamed arrow_btn, label_btn, text_btn -> arrow_button, label_button, text_button.  Added some comments based on Gansner+Reppy 1993.
2010-01-24-14.40.06: src/lib/x-kit/widget/leaf/button.api: For clarity, renamed mailop_of -> button_transition'_of.
2010-01-24-14.19.00: src/lib/x-kit/widget/leaf/button.api: For clarity, renamed get_active, set_active -> get_button_active_state, set_button_active_state.
2010-01-24-13.53.02: src/lib/x-kit/widget/leaf/button.api: For clarity, renamed arrow_cmd, label_cmd, text_cmd -> callback_arrow_button, callback_label_button, callback_text_button.
2010-01-24-13.42.04: src/lib/x-kit/widget/leaf/button.api: Renamed 'action' field to 'click_callback' because that is what it bloody well is -- why be coy? Also 'dir' -> 'direction'.
2010-01-24-13.25.30: src/lib/x-kit/widget/leaf/button.api: Renamed Arrow_Dir -> Arrow_Direction (etc) for clarity.
2010-01-24-12.26.43: src/lib/x-kit/widget/lib/: Renamed button-set.pkg -> button-group.pkg to conform to contemporary usage, and because it manages a list, not a set.
2010-01-24-12.03.44: src/lib/x-kit/widget/lib/button-set.api: Renamed exception MULTIPLE_CHOICES -> ONLY_ONE_RADIOBUTTON_MAY_BE_ON for clarity; random commenting based on Gansner+Reppy 1993.
2010-01-24-02.11.33: src/lib/x-kit/widget/lib/: Renamed widget-set.pkg -> button-set.pkg because it is mainly about managing radiobuttons and kin. Random related commenting and cleaning.
2010-01-24-01.18.23: src/lib/x-kit/widget/lib/widget-set.pkg: More cleanup.
2010-01-24-00.46.41: src/lib/x-kit/widget/: Moved widget-set.pkg from layout/ -> lib/ because it is not in fact a widget at all. Split off widget-set.api as a separate file for cleanliness.
2010-01-24-00.32.11: src/lib/x-kit/widget/layout/viewport.api: More cleanup and commenting.
2010-01-24-00.09.51: src/lib/x-kit/widget/layout/viewport.api:  Renamed set_orig,set_vert,set_horiz -> set_origin,set_vertical_position,set_horizontal_position for clarity. (One effective way to communicate with an English-speaking audience is -- use English!)
2010-01-23-23.07.53: src/lib/x-kit/widget/node/size-preference-wrapper.api: Additional renaming for clarity, such as widget -> child.
2010-01-23-22.44.21: src/lib/x-kit/widget/node/: Renamed shape-preference-wrapper.pkg -> size-preference-wrapper.pkg for consistency, various internal related renaming.
2010-01-23-21.57.12: src/lib/x-kit/widget/: Renamed layout/shape-constraint.pkg -> node/shape-preference-wrapper.pkg because they are requests not requirements.
2010-01-23-21.26.21: src/lib/x-kit/widget/layout/: Renamed scrollport.api -> scrolled-widget.api for clarity and consistency.
2010-01-23-19.05.14: src/lib/x-kit/widget/layout/widget-with-scrollbars.api: Added comments based on the Ganser+Reppy 1993 eXene widget manual.
2010-01-23-15.43.45: src/lib/x-kit/widget/layout/: Renamed scrollbar-layout.pkg to widget-with-scrollbars.pkg because that is what it is documented as being -- why be coy\?
2010-01-23-15.17.14: src/lib/x-kit/widget/node/choice-of-widgets.api: Renamed size() -> child_count() because that is what it in fact computes -- why be coy?
2010-01-23-14.24.08: src/lib/x-kit/widget/: Renamed layout/pile.pkg -> node/choice-of-widgets.pkg for clarity and parallelism with line-of-widgets. Renamed make_visible -> show because I reserve 'make' for value creation functions. Renamed visible -> showing for consistency with 'show'.
2010-01-23-13.57.24: src/lib/x-kit/widget/: Created node/ because I want to distinguish between child-owning widgets which do/not do nontrivial layout.  Moved background.pkg, border.pkg and shape-constraint.pkg into it.
2010-01-23-13.40.59: src/lib/x-kit/widget/layout/border.api: Renamed make_border { ... widget ... } -> child because that is what it is -- why be coy\?
2010-01-23-13.12.29: src/lib/x-kit/widget/layout/: Renamed frame.pkg -> border.pkg because all the docs and comments describe it as drawing a border -- why not call a spade a spade\?
2010-01-23-12.49.25: src/lib/x-kit/widget/layout/: Renamed lay-out-boxes.pkg -> lay-out-linearly.pkg to reflect change in name of line-of-widgets.pkg.
2010-01-23-12.11.11: src/lib/x-kit/widget/layout/line-of-widgets.api: Renamed map,unmap -> show,hide for better length symmetry, for compatibility with similar renamings done in other packages, and because that is what they do, dammit! :-)
2010-01-23-11.52.59: src/lib/x-kit/widget/layout/line-of-widgets.api: Added many comments swiped from the Gansner+Reppy 1993 eXene widget manual.
2010-01-22-23.05.02: src/lib/x-kit/widget/layout/line-of-widgets.api: Renamed WBOX to WIDGET because that is what it bloody well is -- why be coy?
2010-01-22-22.41.59: src/lib/x-kit/widget/layout/: Renamed linear-layout.pkg -> line-of-widgets.pkg, for clarity and for consistency with pile-of-widgets.pkg nomenclature. Various related renaming such as GLUE -> SPACER.
2010-01-22-21.39.29: src/lib/x-kit/widget/layout/scrollbar-layout.api: Remove spuriously exported w (widget) package. That sort of empty generalization reduces readability pointlessly.
2010-01-22-20.18.19: src/lib/x-kit/widget/: Renamed compound/ -> layout/ for brevity, clarity, and because the main business of and distinctions between them are their window layout algorithms.
2010-01-22-19.59.19: src/lib/x-kit/widget/basic/topwindow.pkg: Renamed Hints -> Hints, set_wmhints -> set_window_manager_hints, for clarity.
2010-01-22-19.45.12: src/lib/x-kit/widget/basic/topwindow.pkg: Renamed wm_hints field -> nonsize_hints for better parallelism with size_hints.
2010-01-16-22.19.13: src/lib/x-kit/widget/basic/: widget.api, topwindow.api: Various commenting and cleaning. Dropped pretense that Wm_Args is abstract and renamed it to Window_And_Icon_Names, since that is what it in fact is.
2010-01-16-22.19.13: src/lib/x-kit/widget/basic/: Renamed root.pkg -> root-window.pkg.
2010-01-16-18.15.24: src/lib/x-kit/widget/compound/: Renamed pile.pkg -> pile-of-widgets.pkg for clarity. (Also split off pile-of-widgets.api as a separate file, as usual.)
2010-01-16-17.52.38: src/lib/x-kit/widget/basic/widget.api: Renamed size_constraint_fn -> size_constraint_thunk_of. (Continued cleanup from last major code transform.)
2010-01-16-17.29.15: src/lib/x-kit/widget/basic/widget.api: Renamed size_constraint_thunk_of -> size_constraint_of. (Correcting overshoot in previous code transform.)
2010-01-16-15.12.26: src/lib/x-kit/widget/basic/widget-base.api: More bound -> contraint renaming.
2010-01-16-14.57.46: src/lib/x-kit/widget/basic/widget-base.api: Renamed min_dim,nat_dim,max_dim -> minimum_length,preferred_length,maximum_length.
2010-01-16-14.13.08: src/lib/x-kit/widget/basic/widget-base.api: Renamed fix_dim,flex_dim -> tight_cosntraint,loose_constraint to include 'contraint' tie-noun an improve length symmetry, and because 'flex' suggests bending rather than stretching.
2010-01-15-22.08.45: src/lib/x-kit/widget/basic/widget-base.api: Renamed INT_CONSTRAINT fields base,step,min,nat,max -> start_at,step_by,min_steps,preferred_steps,max_steps, for clarity.
2010-01-15-21.12.20: src/lib/x-kit/widget/basic/widget-base.api: Renamed Dim,DIM -> Int_Constraint,INT_CONSTRAINT because that is what they bloody well are. :-)
2010-01-15-20.20.06: src/lib/x-kit/widget/basic/widget-base.api: Rename Bounds -> Widget_Shape_Constraints.
2010-01-15-19.07.48: src/lib/x-kit/graphlib/cartouche.api:  Replaced c_wid,c_ht cryptonym parameters with single corner_radius parameter for clarity, brevity and convenience.
2010-01-15-17.02.51: src/lib/x-kit/lib/iccc/xatom.pkg,atom-imp.pkg: Renamed intern_atom -> make_atom because 'intern' is not a word; renamed lookup_atom -> find_atom because 'lookup' is a noun, not a verb; renamed name_of_atom -> atom_to_string because that is more precise.
2010-01-15-04.32.09: src/lib/x-kit/lib/user/drawing.api: For clarity renamed feedback() -> make_unbuffered_drawable() and create_overlay() -> make_locked_window(). (The latter appears unused and perhaps not fully implemented.)
2010-01-15-03.52.43: src/lib/x-kit/lib/window/: Rename keysym-trans.pkg -> keysym-to-ascii.pkg, inside it rename lookup() -> map_keysym_to_ascii() etc.
2010-01-14-22.29.43: src/lib/x-kit/lib/user/interact.api: Renaming and commenting for clarity.
2010-01-14-21.00.42: src/lib/x-kit/lib/window/widget-cable.pkg:  More commenting, and renaming for clarity.
2010-01-14-20.50.26: src/lib/x-kit/lib/window/widget-cable.pkg:  Commenting, and renaming for clarity.
2010-01-14-20.29.16: src/lib/x-kit/lib/user/interact.api: Additional commenting.
2010-01-14-20.07.18: src/lib/x-kit/lib/user/interact.api: Additional commenting.
2010-01-14-20.07.18: src/lib/x-kit/lib/user/interact.api: More commenting and renaming for clarity.
2010-01-14-19.36.56: src/lib/x-kit/lib/protocol/keys-and-buttons.pkg: Commenting, and renaming for clarity.
2010-01-14-18.31.58: src/lib/x-kit/lib/user/drawing.api: Renamed clear_area -> clear_box, image_string -> draw_opaque_string, draw_string -> draw_transparent_string, draw_text -> draw_transparent_text.
2010-01-13-22.32.25: src/lib/x-kit/lib/window/pen.pkg: Minor misc cleanup.
2010-01-13-21.47.13: src/lib/x-kit/lib/window/pen-guts.pkg: Random cleanup.
2010-01-13-21.20.08: src/lib/x-kit/lib/window/pen.pkg: More cleanup.
2010-01-13-20.06.33: src/lib/x-kit/lib/window/pen.pkg: Renamed new_pen() -> make_pen() because 'new' is not a verb, dammit. Also update_pen() -> clone_pen() because it is shorter and clearer.
2010-01-13-19.50.23: src/lib/x-kit/lib/window/pen.pkg: Random cleanup.
2010-01-13-18.22.14: src/lib/x-kit/lib/window/: Renamed pen-rep.pkg -> pen-guts.pkg because 'guts' is an honest, pungent Anglo-Saxon word while 'rep' is just the gray shade of a word wanna-be.
2010-01-13-16.14.45: src/lib/x-kit/lib/window/window.pkg: Renamed map_window,unmap_window -> show_window,hide_window, because 'map' is a terrible word anyhow, plus it has strong unrelated associations in Mythryl.
2010-01-13-15.16.51: src/lib/x-kit/lib/iccc/iccc-property.pkg: Rename Size_Hints -> Window_Manager_Size_Hint, Window_Manager_Hints -> Window_Manager_Hint.
2010-01-13-14.24.22: src/lib/x-kit/lib/iccc/: Renamed xprops.pkg -> iccc-property.pkg.
2010-01-13-14.13.37: src/lib/x-kit/lib/iccc/: Rename std-atoms.pkg -> standard-x11-atoms.pkg.
2010-01-13-13.58.32: Finish previous transform. (Oops!)
2010-01-13-13.31.58: src/lib/x-kit/lib/window/xcursor.pkg: Rename Cursor,CURSOR -> Xcursor,XCURSOR.
2010-01-13-13.14.54: src/lib/x-kit/lib/window/xcursor.pkg: Renamed std_cursor() -> get_standard_xcursor().
2010-01-12-23.33.06: src/lib/x-kit/lib/window/: Renamed cursor.pkg -> xcursor.pkg; within renamed Std_Cursor -> Standard_Xcursor etc.
2010-01-12-22.48.46: src/lib/x-kit/: Random low-level cleanup and commenting, mostly in *window.pkg + cursor.pkg.
2010-01-12-16.21.14: src/lib/x-kit/lib/window/draw-types.pkg: Renamed Drawable -> Drawable_Window for clarity.
2010-01-12-16.00.25: src/lib/x-kit/: Globally renamed geometry_of_ -> shape_of_ because 'geometry' is way too long relative to frequency of use. (Zipf lives!)
2010-01-12-15.48.29: src/lib/x-kit/widget/compound/: Renamed shape.pkg -> shape-constraint.pkg.
2010-01-12-15.33.24: src/lib/x-kit/widget/lib/readonly-window-cache.pkg: Additional cleanup.
2010-01-12-14.48.27: src/lib/x-kit/widget/lib/: Renamed tile-imp.pkg -> readonly-window-cache.pkg.
2010-01-12-14.28.54: src/lib/x-kit/lib/window/: Renamed image.pkg -> clientside-window.pkg to work in 'window' tie noun, because 'image' is over-used and vague, and because that is what they in fact are.
2010-01-12-13.32.01: src/lib/x-kit/lib/window/: Renamed tile.pkg -> readonly-window.pkg -- because that is what they in fact are.
2010-01-12-12.44.42: src/lib/x-kit/lib/: Changed mind, 'window' is a better tie-noun than 'pixmap' here. Renamed pixmap/ back to window/.  Renamed window/offscreen-pixmap.pkg -> window/offscreen-window.pkg.
2010-01-12-12.08.47: src/lib/x-kit/lib/: Renamed window/ -> pixmap/.
2010-01-12-11.26.58: src/lib/x-kit/lib/window/: Renamed rw-pixmap.pkg to offscreen-pixmap.pkg. (Decided to use 'pixmap' as the tie noun for drawables.)
2010-01-12-03.53.04: src/lib/x-kit/lib/window/: Renamed pixmap.pkg -> rw-pixmap.pkg.
2010-01-11-23.16.58: src/lib/x-kit/lib/window/draw-types.pkg: Renamed WSRC,PMSRC,TSRC -> FROM_WINDOW,FROM_PIXMAP,FROM_TILE for clarity.
2010-01-11-23.03.52: src/lib/x-kit/lib/user/geometry-2d.api:  WINDOW_GEOMETRY: Renamed 'border' -> 'border_width' for clarity.
2010-01-11-22.45.59: src/lib/x-kit/lib/window/xsession.pkg: Commenting and cleaning.
2010-01-11-20.56.02: src/lib/x-kit/lib/user/geometry-2d.api: Renamed bound_box -> bounding_box.  In WINDOW_GEOMETRY renamed pos -> upperleft.
2010-01-11-15.47.02: src/lib/x-kit/lib/user/geometry-2d.api: Renamed origin_of_box,corner_of_box -> upperleft_of_box,lowerright_of_box because there are no points for obscurity in open source.
2010-01-11-15.09.42: src/lib/x-kit/: Renamed graph-util/ -> graphlib/.
2010-01-11-14.45.16: src/lib/x-kit/widget/: Renamed util/ to the more traditional lib/.
2010-01-11-14.27.44: src/lib/x-kit/widget/: Renamed composite/ -> compound/.  Saves a syllable!
2010-01-11-14.13.27: src/lib/x-kit/widget/: Renamed basics/ -> basic/.
2010-01-11-13.55.38: src/lib/x-kit/widget/basics/topwindow.pkg: Rename init() -> start(), because that is what it does, and because 'start' at least is an actual word! :-)
2010-01-11-13.42.22: src/lib/x-kit/widget/basics/: Renamed shell.pkg -> topwindow.pkg, because it has nothing to do with bash or tcsh and everything to do with toplevel application windows.
2010-01-11-12.53.52: src/lib/x-kit/lib/window/: Renamed xtopwwindow-xevent-router-imp.pkg -> xbuf-to-widgettree-xevent-router.pkg. Renamed top-level-window.pkg -> widgettree-root-xevent-router.pkg.
2010-01-11-04.03.45: src/lib/x-kit/lib/window/: Renamed window-lock-imp.pkg -> topwindows-xevent-router-imp.pkg. (Locking turns out to be only a secondary function of this imp.)
2010-01-11-03.06.58: src/lib/x-kit/lib/window/: Renamed keymap.pkg -> keymap-imp.pkg, since it in fact implements an imp.
2010-01-11-02.21.07: src/lib/x-kit/lib/iccc/: Renamed xatoms.pkg -> xatom.pkg. (I reserve plural names for packages implementing collections.)
2010-01-11-01.55.16: src/lib/x-kit/lib/window/xsession.pkg: Strip dippy dpy_ prefixes from request* and flush function names.
2010-01-11-01.37.09: src/lib/x-kit/lib/window/xsession.pkg: Random cleanup.
2010-01-11-01.01.25: src/lib/x-kit/lib/window/: Renamed display.pkg -> xsession.pkg because the display/xdisplay distinction was confusing, and because it in fact manages the X session.
2010-01-10-23.24.58: src/lib/x-kit/lib/protocol/: Renamed xclient-socket.pkg -> xsocket.pkg etc.
2010-01-10-22.23.32: src/lib/x-kit/example/: Renamed widgets/ -> widget/. src/lib/x-kit/style/: Renamed styles-g.pkg -> style-g.pkg.
2010-01-10-22.00.41: src/lib/x-kit/: Renamed styles/ -> style/, demos/ -> demo/.
2010-01-10-21.48.27: src/lib/x-kit/: Renamed examples/ -> example/.
2010-01-10-21.36.04: src/lib/x-kit/: Renamed widgets/ -> widget/ because plural directory names are just wasted bandwidth.
2010-01-10-21.09.50: src/lib/x-kit/widgets: Renamed simple/ -> leaf/ for brevity -- and because widget-hierarchy leaf widgets are often far from simple!
2010-01-10-15.48.47: src/lib/x-kit/lib/protocol/: Renamed xcvtfns.pkg -> xprotocol-wire-encoding.pkg -- because that is what the package does! :-)
2010-01-10-13.25.16: src/lib/x-kit/lib/protocol/: Renamed xio.pkg -> xsocket-client.pkg, because what it actually does is manage X client socket I/O.
2010-01-10-03.23.24: src/lib/x-kit/: Even more request -> plea renaming.
2010-01-10-01.38.48: src/lib/x-kit/: Yup, still more request -> plea renaming.
2010-01-09-22.46.38: src/lib/x-kit/: Still more request -> plea renaming.
2010-01-09-22.10.24: src/lib/x-kit/widgets/simple/: Renamed label-bttn-view.pkg -> labelled-button-view.pkg, similarly the pkg.
2010-01-09-20.37.42: src/lib/x-kit/: More request -> plea renaming.
2010-01-09-20.02.29: src/lib/x-kit/: Much renaming of req and request -> plea, for brevity and clarity.
2010-01-09-18.48.25: src/lib/x-kit/lib/window/: Renamed draw-master.pkg -> draw-imp.pkg and pkg draw_master -> draw_imp.
2010-01-09-15.00.44: src/lib/x-kit/lib/window/: Renamed window-registry.pkg -> window-lock-imp.pkg, etc.
2010-01-09-02.01.31: src/lib/x-kit/lib/protocol/: Renamed xreply.pkg -> wire-to-xreplies.pkg; Renamed pkg xreply -> wire_to_xreplies.
2010-01-08-21.46.19: src/lib/x-kit/lib/protocol/: Renamed xrequest.pkg -> xrequest-to-wire.pkg; Renamed pkg xrequest -> xrequest_to_wire.
2010-01-08-20.07.48: src/lib/x-kit/lib/protocol/: Rename xprottypes.pkg -> xprotocol-types.pkg.
2010-01-08-17.34.19: src/lib/x-kit/lib/protocol/: Renamed xevttypes.pkg -> xevent-types.pkg, cleanup in xio.pkg, split off xio.api from xio.pkg.
2010-01-07-23.47.07: src/lib/x-kit/lib/protocol/xerrors.pkg: Rename XERR -> XERROR, Xerr_Kind -> Xerror_Kind.
2010-01-05-19.11.16: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Cosmetic tweaks to print_if output line format.
2010-01-05-18.51.00: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Added print_tracetree () for interactive convenience.
2010-01-05-18.27.39: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Generate explanatory headers for tracelog files. No, that is not unixy. But I like non-mysterious.
2010-01-05-18.06.19: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Increase print_if timestamp resolution from milliseconds to microseconds. Change ancestors() to return a list of names rather than nodes. (More useful.)
2010-01-05-17.46.04: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Tweak print_if to log name of controlling tracetree node.
2010-01-05-17.19.50: src/lib/src/lib/thread-kit/src/lib/tracing.pkg:  Tweaked make_trace_tree_leaf to raise an exception for duplicate node name, instead of returning pre-existing node. Replaced module_of by node_by_name which searches by name rather than full_name (i.e., by local notname instead of by a /path/name).
2010-01-05-16.32.25: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Replaced TRACE_TREE_NODE.full_name field with TRACE_TREE_NODE.parent field, killed module_of(), added exported parent() and ancestors() functions.
2010-01-05-15.50.57: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Adopt the convention that TRACE_TREE_NODE.label (renamed TRACE_TREE_NODE.name) is foo::tracing or such -- commandline expression for controlling node.
2010-01-05-15.26.15: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Adopt the convention that TRACE_TREE_NODE.label (renamed TRACE_TREE_NODE.name) is foo::tracing or such -- commandline expression for controlling node.
2010-01-05-14.48.42: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Added timestamping to print_if(); Moved newline generation responsibility from print_if() callers to print_if() itself.
2010-01-05-12.35.00: src/lib/src/lib/thread-kit/src/lib/tracing.api: Added a long top-of-file OVERVIEW comment section.
2010-01-05-12.35.00: src/lib/src/lib/thread-kit/src/lib/tracing.pkg: Renaming for clarity: status -> subtree_nods_and_tracing_flags, set_trace_file (TRACE_TO_FILE foo.log) -> log_trace_messages (TO_FILE foo.log).
2010-01-05-00.26.25: Pervasively renamed varptr -> current_thread_ptr assembly, C and Mythryl source.
2010-01-04-23.43.04: Pervasively renamed varptr -> current_thread_ptr assembly, C and Mythryl source.
2010-01-04-23.43.04: Pervasively renamed lib7_varReg -> lib7_current_thread.
2010-01-04-23.12.13: src/runtime/include/runtime-roots.h: Renamed VAR_INDEX -> CURRENT_THREAD_INDEX.
2010-01-04-23.00.54: Pervasive renaming of GETVAR,SETVAR -> GET_CURRENT_THREAD_REGISTER,SET_CURRENT_THREAD_REGISTER.
2010-01-04-22.01.55: /src/lib/compiler/front/semantic/symbol-table/primitives-symbol-table.pkg: Renamed getvar,setvar -> get_current_thread_register,set_current_thread_register.
2010-01-04-21.11.49: src/lib/core/init/built-in.pkg: Renamed getvar,setvar -> get_current_thread_register,set_current_thread_register.
2010-01-04-17.35.21: src/lib/core/init/built-in.pkg: Renamed getvar,setvar -> get_current_thread_register,set_current_thread_register.
2010-01-04-17.35.21: src/lib/std/src/unsafe/unsafe.pkg: Renamed get_variable,set_variable -> get_current_thread_register,set_current_thread_register.
2010-01-03-16.17.38: src/lib/src/lib/thread-kit/src/lib/tracing.pkg:  Changed print_if to log name of traced thread.
2010-01-03-15.25.36: src/lib/src/lib/thread-kit/src/core-thread-kit/thread.pkg: Added name: String field to THREAD_ID record and name arg to make_thread. (Kids these days! When will they learn? :-)
2010-01-03-04.18.12: src/lib/src/lib/thread-kit/src/lib/tracing.api: To make debug code prettier, changed print_if from (Trace_Tree_Node, (Void -> List(String)) -> Void; to Trace_Tree_Node -> (Void -> String) -> Void;.
2010-01-03-03.18.02: src/lib/src/lib/thread-kit/src/lib/: Renamed thread-spy.pkg -> tracing.pkg (etc), since the remaining code now has a clear focus.
2010-01-03-02.59.28: src/lib/src/lib/thread-kit/src/lib/: Split off part of thread-spy.pkg to create threadkit-uncaught-exception-reporting.pkg -- that code is unrelated to rest of package and did not belong in there.
2010-01-03-02.34.09: src/lib/src/lib/thread-kit/src/lib/: Split off part of thread-spy.pkg to create thread-deathwatch.pkg -- that code is unrelated to rest of package and did not belong in there.
2010-01-03-02.01.30: src/lib/x-kit/lib/misc/xdebug.pkg: Renamed sel_tm -> selection_tracing etc, for clarity.
2010-01-03-01.26.45: src/lib/src/lib/thread-kit/src/lib/thread-spy.api: Renamed trace -> print_if etc.
2010-01-03-00.40.00: src/lib/src/lib/thread-kit/src/lib/thread-spy.api: Renamed watch,unwatch -> start_thread_deathwatch,stop_thread_deathwatch.
2010-01-03-00.22.54: src/lib/src/lib/thread-kit/src/core-thread-kit/thread.pkg: Renamed join_mailop -> thread_death_mailop.
2010-01-02-23.51.10: src/lib/src/lib/thread-kit/src/core-thread-kit/: Renamed threadkit-startup-and-shutdown.pkg -> threadkit-startup-and-shutdown-hooks.pkg etc.
2010-01-02-22.34.55: src/lib/src/lib/thread-kit/src/lib/thread-spy.pkg: More renaming for clarity.
2010-01-02-18.49.13: src/lib/src/lib/thread-kit/src/lib/thread-spy.pkg: More replacing of cryptonyms by identifiers.
2010-01-02-18.19.03: src/lib/src/lib/thread-kit/src/core-thread-kit/internal-threadkit-types.pkg: Removed 'alert' field from THREAD_ID record because it is nowhere used.
2010-01-02-16.57.01: src/lib/src/lib/thread-kit/src/core-thread-kit/: Rename threadkit-cleaup.pkg -> threadkit-startup-and-shutdown.pkg, etc.
2010-01-02-16.29.01: src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit-cleanup.api: Random renaaming for clarity.
2010-01-02-15.05.49: src/lib/src/lib/thread-kit/src/lib/: Rename trace-threadkit.pkg -> thread-spy.pkg.
2010-01-02-14.28.32: src/lib/src/lib/thread-kit/src/core-thread-kit/mailop.pkg: Rename kont -> fate.
2010-01-02-14.13.34: src/lib/src/lib/thread-kit/src/lib/trace-threadkit.pkg: Minor low-level cleanup.
2010-01-02-02.12.17: src/lib/x-kit/lib/window/widget-cable.pkg: Still more renaming for clarity.
2010-01-02-01.46.36: src/lib/x-kit/lib/window/widget-cable.pkg: More renaming for clarity.
2010-01-02-00.29.18: src/lib/x-kit/lib/window/widget-cable.pkg: More basic renaming for clarity.
2010-01-01-22.15.50: src/lib/x-kit/lib/window/widget-cable.pkg: Renamed k,m,ci,co -> from_keyboard, from_mouse, from_mom, to_mom.
2010-01-01-19.57.53: src/lib/x-kit:  Rename winreg.pkg -> window-registry.pkg, screen_pt -> screen_point, but -> button ... 
2010-01-01-13.04.53: src/lib/x-kit/lib/window/widget-cable.pkg: Rename Trans -> Transition, because the latter is an actual word.
2009-12-31-20.01.06: src/lib/x-kit/lib/window/: Renamed window-dictionary.pkg -> widget-cable.pkg, In_Env -> Kidplug, Out_Env -> Momplug etc.
2009-12-31-17.32.24: Pervasively renamed src,dst -> from,to -- because the Queen's English is not just for the Queen any more! :-)
2009-12-31-16.05.22: src/lib/x-kit/: Pervasively renamed rect to box because box is a vibrant, living word but rect is just the mutilated corpse of a pedanticism.
2009-12-31-05.05.10: src/lib/x-kit/examples/ml-viewer/graph-view/geometry-2d-float.pkg: Rename RPT -> POINT for clarity, etc.
2009-12-31-04.10.52: src/lib/x-kit/lib/user/geometry-2d.pkg: Pervasely rename rectangle to box for brevity.
2009-12-31-02.03.00: src/lib/x-kit/widgets/composite/: Renamed box.pkg -> layout-box.pkg.
2009-12-31-01.14.13: src/lib/x-kit/widgets/composite/: Renamed box-layout.pkg -> lay-out-boxes.pkg.
2009-12-31-00.56.40: src/lib/x-kit/widgets/basics/widget.pkg: Renamed incr -> step because the latter is a word and the former is not.
2009-12-30-21.58.26: src/lib/x-kit: Pervasively renamed macro_expand -> realize, undoing a long-ago global renamed aimed at compiler internals.
2009-12-30-21.58.26: src/lib/x-kit/lib/protocol/xrequest.pkg: Low-level cleanup.
2009-12-30-20.54.44: More mk_* -> make_* renaming. Remember, every time you abbreviate, God kills a kitten.
2009-12-30-20.20.52: More renaming of mk_* to make_*. Long live the Anti Word Vivisection Front! :-)
2009-12-30-19.56.22: Rename mk_ to make_ various places.
2009-12-30-15.20.24: Did global rename of *_rect to *_rectangle. (What is it with these creepy word mutilation cults? :-)
2009-12-30-04.03.31: src/lib/x-kit/lib/protocol/: Renamed keybut.pkg to keys-and-buttons.pkg.
2009-12-30-03.32.47: src/lib/x-kit/widgets/simple/scrollbar.pkg: Renamed SCREEN_* -> SCROLL_*.
2009-12-30-03.13.47: src/lib/x-kit/lib/user/geometry-2d.pkg: Renamed Rect,RECT -> Rectangle,RECTANGLE.
2009-12-30-01.07.10: src/lib/x-kit/lib/user/geometry-2d.pkg: Renamed y,x -> row,col because that is what they are.
2009-12-29-21.08.02: Renamed src/lib/x-kit/examples/ml-viewer/graph-view/geometry-float.pkg -> src/lib/x-kit/examples/ml-viewer/graph-view/geometry-2d-float.pkg.
2009-12-29-20.57.56: Renamed src/lib/x-kit/graph-util/rounded-rect.pkg -> src/lib/x-kit/graph-util/cartouche.pkg because that is the correct term.
2009-12-29-20.43.58: Removed src/lib/x-kit/lib/graph-util/* -- these files were all unused, redundant copies of files in src/lib/x-kit/graph-util/.
2009-12-29-20.30.18: Renamed src/lib/x-kit/lib/basics/geometry.pkg -> src/lib/x-kit/lib/user/geometry-2d.pkg.
2009-12-29-00.07.09: src/runtime/o/Makefile.in: $(RUNTIME): Add `pkg-config --libs gtk+-2.0` per Jeffrey Lau.
2009-12-28-23.30.35: src/lib/x-kit/examples/ml-viewer: Now compiling and exercised by 'make rest' to keep it that way: main/main.pkg, graph-view/graph-view.pkg. (Basically all the examples/ml-viewer/ code is now compiling.)
2009-12-28-21.44.56: src/lib/x-kit/examples/ml-viewer/text-view: Renamed viewer.pkg -> ml-source-code-viewer.pkg.
2009-12-28-18.35.29: src/lib/x-kit/examples/ml-viewer: Now compiling and exercised by 'make rest' to keep it that way: in util/: get-mouse-selection.pkg; in text-view/: text-display.pkg, approximate-ml.lex, scroll-viewer.pkg, viewer.pkg, text-canvas.pkg, view-buffer.pkg, load-file-g.pkg, ml-viewer.pkg; in graph-view/: graph-viewer.pkg. (That was a thrash!)
2009-12-24-19.31.02: src/lib/x-kit/examples/ml-viewer/graph-view: view-font.pkg and dotgraph-to-planargraph.pkg now compiling and exercised by 'make rest' to keep it that way.
2009-12-24-14.30.57: src/lib/x-kit/examples/ml-viewer/graph-view/planar-subgraph-tree.pkg: Now compiling and exercised by 'make rest' to keep it that way.
2009-12-24-11.54.33: src/lib/x-kit/examples/ml-viewer/graph: dot-graph.grammar, dot-graph.lex and dot-subgraph-tree.pkg now compile, and 'make rest' exercises them. (That was a thrash!)
2009-12-19-20.59.26: src/lib/x-kit/examples/ml-viewer/graph/dot-graph-io-g.pkg now compiles, and 'make rest' exercises it to make sure it stays compiling.
2009-12-19-20.15.40: src/lib/x-kit/examples/ml-viewer/graph/dot-graph.grammar now compiles, and 'make rest' exercises it to make sure it stays compiling.
2009-12-19-19.47.05: Renamed float::trunc to float::truncate, although there is a certain perverse irony in truncating the world truncate itself...
2009-12-19-19.32.33: src/lib/x-kit/examples/ml-viewer/graph-view/geometry-float.pkg now compiles, and 'make rest'' exercises it to make sure it stays compiling.
2009-12-19-19.02.30: src/lib/x-kit/examples/ml-viewer/graph/dot-subgraph-tree-attributes.pkg now compiles, and 'make rest' exercises it to make sure it stays compiling.
2009-12-19-18.50.30: src/lib/x-kit/examples/ml-viewer/graph/attributed-subgraph-tree-g.pkg now compiles, and 'make rest' exercises it to make sure it stays compiling.
2009-12-17-13.23.28: Got src/lib/x-kit/examples/ml-viewer/graph/subgraph-tree-g.pkg to compile, partly by dint of rewriting it to use red-black trees instead of splaytrees. To keep it compiling, created a build-ml-viewer script and added it to 'make rest'. This means the complete ml-viewer example/app is maybe 5-10% of the way to compiling.
2009-12-15-10.18.35: Deleted src/lib/x-kit/examples/ml-viewer/graph-view/save/ and also all *.sav files under ml-viewer/.
2009-12-15-09.55.44: Deleted src/lib/x-kit/examples/ml-viewer/util/mlyacc-base.pkg -- how many copies of this do we need?
2009-12-14-18.37.06: src/lib/x-kit/examples/ml-viewer/graph/: Renamed attribute_graph* -> attributed_graph* per comments found in src/lib/x-kit/examples/ml-viewer/GRAPHS.OVERVIEW.  Low-level cleanup on both .api and -g.pkg files.
2009-12-13-21.24.37: Low-level code cleanup throughout src/lib/x-kit/examples/ml-viewer/graph/.
2009-12-13-18.44.47: Deleted src/lib/x-kit/examples/ml-viewer/graph/mlyacc-base.pkg -- another ml-yacc implementation file just floating around. Random cleanup in src/lib/x-kit/examples/ml-viewer/graph/.
2009-12-13-13.47.45: Deleted entire src/lib/x-kit/examples/ml-viewer/data/src/ directory, which appeared to contain primarily (only?) a redundant, unmaintained copy of ml-yacc.
2009-12-13-12.28.25: Deleted src/lib/x-kit/examples/ml-viewer/library/lib-base.pkg:  It was just an ancestral version of src/lib/src/lib-base.pkg.
2009-12-12-21.30.26: src/lib/x-kit/examples/ml-viewer/library/: Deleted static-array.api + lib-sg.pkg, both uninteresting scraps of dead code.
2009-12-12-21.20.09: Deleted src/lib/x-kit/examples/ml-viewer/library/string-covnersion.pkg:  Ancient implementations of atoi &tc -- stuff much better done these days using scanf or whatever.
2009-12-12-21.08.25: Deleted src/lib/x-kit/examples/ml-viewer/library/time-limit.pkg:  A 20-line package nowhere used whose functionality is subsumed by the threadkit timeout_in mailop and such.
2009-12-12-20.56.47: src/lib/x-kit/examples/ml-viewer/library/: Deleted unix-path.pkg + pathnamee.pkg: stdlib already has quite enough of this kind of functionality.
2009-12-12-20.46.02: Deleted src/lib/x-kit/examples/ml-viewer/library/makestring.pkg:  It provided simple formatting of ints and floats as strings, but newer packages like sfprintf do the same thing much better.
2009-12-12-20.33.33: Deleted src/lib/x-kit/examples/ml-viewer/library/hash-string.pkg:  A later version of the same code is available from src/lib/x-kit/lib/util/hash-util.pkg and the same functionality is available from src/lib/src/hash-string.pkg.
2009-12-12-20.20.23: src/lib/x-kit/examples/ml-viewer/library/: Deleted binary-dict.pkg + binary-set.pkg -- the same Stephen Adams binary tree code that stdlib already has in src/lib/src/binary-map-g.pkg, src/lib/src/binary-set-g.pkg &tc &tc.
2009-12-12-20.01.20: Deleted src/lib/x-kit/examples/ml-viewer/library/hash-table.pkg:  It was just an earlier version of src/lib/src/monomorphic-hash-table-g.pkg.
2009-12-12-19.49.28: Deleted src/lib/x-kit/examples/ml-viewer/library/poly-hash-table.pkg:  It was just an earlier version of src/lib/src/hash-table.pkg.
2009-12-12-18.52.13: src/lib/x-kit/examples/ml-viewer/library/: Deleted intset.pkg + intmap.pkg -- they were just ancestral versions of src/lib/src/int-binary-set.pkg + src/lib/src/int-binary-map.pkg.
2009-12-12-18.42.23: Deleted src/lib/x-kit/examples/ml-viewer/library/key-set.api:  It appeared nearly identical to src/lib/src/set.api.
2009-12-12-18.32.43: Deleted src/lib/x-kit/examples/ml-viewer/library/random.pkg:  It appeared to be an ancestral version of src/lib/src/rand.pkg.
2009-12-12-18.14.40: Deleted src/lib/x-kit/examples/ml-viewer/library/queue.pkg:  It was a straight clone of src/lib/src/queue.pkg.
2009-12-12-17.59.02: Installed src/lib/x-kit/examples/ml-viewer/library/list-util.pkg as src/lib/src/list-fns.pkg because it appears to be useful functionality not already present in stdlib.
2009-12-12-17.16.48: Deleted src/lib/x-kit/examples/ml-viewer/library/list-to-string.pkg:  It was just the ancestral version of src/lib/src/list-to-string.pkg + src/lib/src/string-to-list.pkg.
2009-12-12-17.06.36: Deleted src/lib/x-kit/examples/ml-viewer/library/list-mergesort.pkg:  It was nearly identical to src/lib/src/list-mergesort.pkg.
2009-12-12-16.55.40: Deleted src/lib/x-kit/examples/ml-viewer/library/list-sort.api:  It was a straight clone of src/lib/src/list-sort.api.
2009-12-12-16.45.30: Deleted src/lib/x-kit/examples/ml-viewer/library/fifo.pkg:  It was nearly identical to src/lib/src/fifo.pkg.
2009-12-12-16.24.06: Deleted src/lib/x-kit/examples/ml-viewer/library/hash-key.api:  It was a straight clone of src/lib/src/hash-key.api.
2009-12-12-16.11.42: Deleted src/lib/x-kit/examples/ml-viewer/library/name.pkg:  Did not do anything not already done by src/lib/src/quickstring*pkg.
2009-12-12-12.53.28: Deleted src/lib/x-kit/examples/ml-viewer/library/iterate.pkg:  It was identical to src/lib/src/iterate.pkg. The latter was not being compiled into stdlib, so fixed that too.
2009-12-12-12.00.22: Deleted src/lib/x-kit/examples/ml-viewer/library/matrix.pkg:  It was identical to src/lib/src/matrix.pkg.
2009-12-11-14.56.50: src/lib/x-kit/examples/ml-viewer/library/key.api:  It was just an early version of src/lib/src/key.api.
2009-12-11-14.41.56: Deleted src/lib/x-kit/examples/ml-viewer/library/format.pkg: Looked like a very early version of the code in src/lib/src/sfprintf.pkg + src/lib/src/scanf.pkg (and thence sprintf() &tc).
2009-12-11-14.31.58: Deleted src/lib/x-kit/examples/ml-viewer/library/dynamic-array.pkg: It was essentially identical to src/lib/src/expanding-rw-vector.pkg in stdlib.
2009-12-11-14.20.28: Deleted src/lib/x-kit/examples/ml-viewer/library/rw-vector-quicksort.pkg: It was essentially identical to src/lib/src/rw-vector-quicksort-g.pkg in stdlib.
2009-12-11-02.39.58: src/lib/x-kit/examples/ml-viewer/library/charset.pkg: This contained functionality not in stdlib: Cleaned it up and moved to stdlib.
2009-12-11-01.46.46: src/lib/x-kit/examples/ml-viewer/library/ctype.pkg: This contained functionality not in stdlib: Split into int-ctype.pkg + string-ctype.pkg and moved to stdlib.
2009-12-10-05.51.48: src/lib/x-kit/examples/widgets/widgets.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-10-04.23.39: src/lib/x-kit/examples/triangle/tri.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-10-03.50.27: src/lib/x-kit/examples/plaid/plaid.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-10-03.22.32: src/lib/x-kit/examples/nbody/nbody.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-09-21.00.20: src/lib/x-kit/examples/mixer/mixer.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-09-20.03.47: src/lib/x-kit/examples/calc/calc.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-09-19.05.52: src/lib/x-kit/examples/bricks/bricks.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-09-04.01.31: src/lib/x-kit/examples/bounce/bounce.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-09-03.07.25: src/lib/x-kit/examples/bitmap-editor/bitmap-editor.make6 now compiles, added it to 'make rest' to keep it doing so.
2009-12-08-12.33.55: src/lib/x-kit/examples: More low-level code cleanup.
2009-12-08-12.33.55: mailcaster.(api,pkg): Rename 'send' to 'transmit' (better match to 'receive').
2009-12-08-01.27.08: gtk-glue.config: Commented out the bindings for eight fns introduced in Gtk 2.14 because Debian stable is only up to Gtk 2.12. (Thanks to aurele for bringing this to my attention!)
2009-12-07-03.20.58: More low-level code cleanup in src/lib/x-kit/examples/.
2009-12-05-01.36.11: src/lib/x-kit/examples: Several day's worth of low-level code cleanup.
2009-11-30-20.02.28: src/lib/x-kit/examples/add/add.make6 now compiles. (Boy was it a mess!)  Added it to 'make rest' so that it stays compiling.
2009-11-28-10.11.36: Integrate basicwin build properly into toplevel 'make rest' logic.
2009-11-28-03.37.12: src/lib/x-kit/examples/basicwin/Makefile.make6 now compiles.  Added to 'make rest' to keep it that way.
2009-11-26-15.16.12: Undid previous.  Wrong idea.
2009-11-26-14.34.38: Moved x-kit from 'make rest' to 'make compiler' as part of making it available for scripting use.
2009-11-26-13.29.59: timeout-mailop.pkg: Rename fns timeout_in -> timeout_in', timeout_at -> timeout_at' to fit emerging pattern of mailops having primed names.
2009-11-26-01.17.19: More removing of now-redundant package qualifiers like oneshot_maildrop:: and mailqueue::.
2009-11-26-00.41.47: Killed now-redundant md1:: package qualifier various places.
2009-11-25-23.42.19: threadkit.pkg: Now includes mailcaster pkg.
2009-11-25-23.11.25: threadkit.pkg: Now includes oneshot_maildrop pkg.
2009-11-25-22.58.43: threadkit.pkg: Now includes mailqueue pkg.
2009-11-25-22.45.42: threadkit.pkg: Now includes maildrop pkg.
2009-11-25-22.35.13: mailqueue: Renamed fns pull_mail -> pull, push_mail -> push &tc.
2009-11-25-22.24.39: mailcaster: Renamed fns send_mail -> send, receive_mail -> receive &tc.
2009-11-25-22.11.41: mailslot: Rename fns give_mail -> give, take_mail -> take &tc.
2009-11-25-22.00.47: oneshot_maildrop: Renamed fn get_mail -> get, put_mail -> set &tc.
2009-11-25-20.15.56: maildrop: Rename put_mail -> fill, get_mail -> empty &tc.
2009-11-25-19.46.55: mailcaster: Renamed get_mail -> receive_mail, put_mail -> send_mail.
2009-11-25-19.29.34: mailqueue: Renamed put_mail -> push_mail, get_mail -> pull_mail &tc.
2009-11-25-19.06.38: mailslot: Rename get_mail -> take_mail, put_mail -> give_mail &tc.
2009-11-25-12.55.50: Rename pkg sleep_mailop -> timeout_mailop, fn sleep_until_mailop -> timeout_at, fn sleep_for_mailop -> timeout_in.
2009-11-24-03.56.05: threadkit-unit-test.pkg: Exercise select over sleep mailops.
2009-11-24-03.38.04: threadkit-unit-test.pkg: Exercise select over input mailqueues.
2009-11-24-03.27.46: threadkit-unit-test.pkg: Exercise select over output mailslots.
2009-11-24-03.17.10: threadkit-unit-test.pkg: Exercise select over input maildrops.
2009-11-24-03.06.27: threadkit-unit-test.pkg: Exercise input selection on mailslots.
2009-11-24-00.15.40: threadkit-unix-test.pkg: Exercise sleep_until fn. api-match-g.pkg: Change # to != in fun errmsg.
2009-11-24-00.03.08: threadkit-unit-test.pkg: Exercise sleep_for fn.
2009-11-23-21.37.42: sleep-mailop.pkg: Add fns sleep_for, sleep_until.
2009-11-23-21.23.04: thread-scheduler-control-g.pkg: Renamed fn with_thread_scheduling -> thread_scheduler.
2009-11-23-21.10.11: Included pkg threadkit in scripting_globals.
2009-11-23-20.53.14: Renamed timeout-mailop.(api,pkg) -> sleep-mailop.(api,pkg), ditto pkg and api proper.
2009-11-23-20.38.26: timeout-mailop.pkg: Renamed fns timeout_mailop -> sleep_for_mailop, at_time_mailop -> sleep_until_mailop.
2009-11-23-19.58.16: timeout-mailop.pkg: Renamed reset -> reset_sleep_queue_to_empty, poll_fn -> wake_sleeping_threads_whose_time_has_come.
2009-11-23-19.29.58: thread.pkg: Rename make_thread_property -> make_per_thread_property, make_boolean_thread_property -> make boolean_per_thread_property. threadkit-unit-test.pkg: Exercise per-thread properties.
2009-11-23-19.17.14: threakit-unit-text.pkg: Exercise generic thread-local property functionality.
2009-11-23-19.00.46: thread.pkg: Renamed new_thread_property -> make_thread_property, new_thread_flag -> make_boolean_thread_property.
2009-11-23-18.35.40: threadkit-unit-test.pkg: Add mailcaster exercises.
2009-11-23-17.48.24: threadkit-unit-test.pkg: Add exercises for mail queues.
2009-11-23-17.32.45: threadkit-unit-test.pkg: Exercise maildrop value swaps.
2009-11-23-17.17.49: Renamed pkg run_threadkit -> thread_scheduler_control, fn run_threadkit -> start_up_thread_scheduler, various related renamings.
2009-11-23-16.23.59: threadkit-unit-test.pkg: Exercise blocking on peeks.
2009-11-23-16.12.56: threadkit-unit-test: Exercise nonblocking maildrop peeks.
2009-11-23-15.59.10: threadkit-unit-test.pkg: Exercise blocking on empty maildrop.
2009-11-23-15.36.22: threadkit-unit-test.pkg: Add initial couple of tests for maildrop.
2009-11-23-15.10.23: maildrop.pkg: Renamed make_maildrop -> make_empty_maildrop, make_maildrop' -> make_full_maildrop, PUT -> MAY_NOT_PUTMAIL_TO_FULL_MAILDROP.
2009-11-23-14.50.45: threadkit-unit-test.pkg: Added test for basic mailslot functionality.
2009-11-23-14.15.25: run-threadkit.pkg: Add concurrently() convenience fn. threadkit.pkg: include run_threakit. Various: minor cleanup.
2009-11-20-19.54.35: thread-scheduler.pkg: Renamed enter_atomic_region -> disable_thread_switching, exit_atomic_region -> reenable_thread_switching &tc, for clarity. (There are many kinds of atomic regions, after all...)
2009-11-20-19.33.12: Blimey! After four years of constant editing and no exercise, threadkit starts + stops first try!?! :-) Added threadkit-unit-test.pkg regression test for that.
2009-11-20-18.44.04: run_threadkit: More convenient argument structure (curried, time quantum optional).
2009-11-20-01.16.55: x-kit: More renaming of 'server' -> 'imp'.
2009-11-20-00.59.18: x-kit: Globally rename 'ctxt' -> 'context'.  Die, cryptonyms, die! :-)
2009-11-20-00.31.28: x-kit: Globally rename del_ch -> delete_slot.
2009-11-20-00.15.41: x-kit: Rename Prop_Change -> Property_Change, conn -> connection and similar evyl.
2009-11-19-23.58.40: x-kit: Rename foregrnd/backgrnd -> foreground/background. Long live vowels!
2009-11-19-21.14.54: x-kit: Mass rename of 'scr' -> 'screen' throughout.
2009-11-19-20.21.48: x-kit: Miscellaneous renaming of xdpy -> xdisplay &tc.
2009-11-19-18.55.44: x-kit: More 'server' -> 'imp' renaming. Also renamed keymap -> keymap_imp some places for consistency.
2009-11-19-18.31.33: x-kit: Renamed *server -> *imp for clarity, brevity and consistency: The idea is that imps are to threads what daemons are to processes.
2009-11-19-18.01.46: Renamed time::now' -> time::get_time.
2009-11-19-17.46.42: Renamed threadkit-scheduler.pkg -> thread-scheduler.pkg. Also renamed thread_scheduler::get_time to thread_scheduler::get_approximate_time -- because that is what it does! :-)
2009-11-19-16.56.28: Renamed api Mail_Multicaster -> Mailcaster, pkg mail_multicaster -> mailcaster, type Multicaster_Port -> Mailcaster_Readslot, fun make_port -> make_readslot.
2009-11-19-00.50.27: Added threadkit_unit_test package, hooked it up to unit test infrastructure.
2009-11-19-00.40.47: Rename same_q -> same_queue.
2009-11-19-00.14.30: Low-level cleanup, mostly in run-threadkit-g.pkg.
2009-11-18-23.58.01: Low-level cleanup, mostly in threadkit-scheduler.pkg.
2009-11-18-23.21.47: threadkit-scheduler.pkg: Renamed various identifiers for clarity.
2009-11-18-23.03.16: threadkit-scheduler.pkg: Renamed atomic_dispatch -> exit_atomic_region_and_dispatch.
2009-11-18-22.31.43: pause.c: Fix oops from previous checkin: #-comments do not work in C *blush*.
2009-11-18-22.18.36: Random low-level cleanup in pause.c.
2009-11-18-21.13.23: Renamed unix-threadkit-glue.pkg -> unix-threadkit-os-glue.pkg and threadkit_glue -> threadkit_os_glue.
2009-11-18-21.13.23: x-kit once again compiles (during 'make rest'). That concludes integration of the threadkit library into stdlib; Now comes rationalization, checkout, tutorials &tc.
2009-11-18-01.06.34: Moved src/lib/thread-kit into src/lib/std/src/threadkit/ATTIC: There is no live code left at this point, but some of the docs may be useful.
2009-11-18-00.23.01: stdlib: Added threadkit_quickstring.  Dropped remaining threadkit-lib quickstring files: They are identical to the corresponding existing stdlib files.  That completes merging the threadkit fileset into stdlib.
2009-11-17-23.39.30: stdlib: Added pkg trace_threadkit.
2009-11-17-23.23.36: stdlib: Add api Trace_Threadkit.
2009-11-17-23.11.55: Added to stdlib: api Simple_Rpc, pkg simple_rpc.
2009-11-17-18.54.49: stdlib: Added pkg mail_multicaster, api Mail_Multicaster.
2009-11-17-00.17.11: stdlib: Added pkg run_threadkit.
2009-11-17-00.01.41: stdlib: Added run_threadkit_g.
2009-11-16-23.46.18: stdlib: Added pkg initialize_threadkit_cleanup.
2009-11-16-23.32.17: stdlib: Added threadkit_export_function_g.
2009-11-16-23.18.46: stdlib: Added api Threadkit_Os_Glue, pkg threadkit_glue.
2009-11-16-22.41.56: stdlib: Added threadkit_winix and threadkit_winix_process packages.
2009-11-16-19.41.21: Moved src/lib/thread-kit/src/core-thread-kit/ into src/lib/src/lib/thread-kit/src/.
2009-11-16-18.52.36: Rename chan_io_g -> mailslot_io_g, chan_io to mailslot_io.
2009-11-16-18.52.36: stdlib: Moved src/lib/thread-kit/src/winix/ to src/lib/src/lib/thread-kit/src/winix/.
2009-11-16-00.49.43: stdlib: Added Threadkit_Text_Pure_Io Threadkit_Text_Io Threadkit_Spawn threadkit_spawn threadkit_posix_text_primitive_io threadkit_text_primitive_io threadkit_file threadkit_text_io_g channel_io_g.
2009-11-15-20.08.09: stdlib: Added Threakit_Pure_Io, Threadkit_Binary_Io, Threadkit_Imperative_Io, posix_threadkit_binary_io, threadkit_binary_io_g, threadkit_clean_io.
2009-11-15-17.22.56: stdlib: Added Threadkit_Primitive_Io, Threadkit_Winix_Primitive_Io, threadkit_binary_primitive_io, threadkit_posix_binary_primitive_io, threadkit_primitive_io_g, syscall.
2009-11-15-16.31.51: stdlib: Added threadkit-winix-io, Threadkit_Winix_Io, Threadkit_Winix_Process, Threadkit_Winix.
2009-11-15-16.11.31: Moved threadkit_process_result into stdlib.
2009-11-15-03.39.36: Moved threadkit-unix-socket.(api,pkg) to stdlib.
2009-11-15-02.12.13: Moved into stdlib: threadkit-synchronous-socket.api, threadkit-socket.(api,pkg), threadkit-internet-socket.(api,pkg).
2009-11-15-00.59.00: Installed threadkit-generic-socket.pkg (a layer over generic-socket.pkg) in stdlib, created threadkit-generic-socket.api for it.
2009-11-15-00.30.23: Installed threadkit pre-socket.pkg, which is a layer over stdlib pre-socket.pkg rather than a replacement, as stdlib threadkit-pre-socket.pkg.
2009-11-15-00.02.00: Merged threadkit and stdlib versions of internet-socket.api.
2009-11-14-23.51.39: Merged threadlib and stdlib versions of generic-socket.api.
2009-11-14-23.32.49: Merged threadkit and stdlib versions of socket-stuff.pkg. Renamed connect_inet_strm to connect_client_to_internet_domain_stream_socket.
2009-11-14-22.56.11: Merge threadlib and stdlib versions of unix-socket-stuff.pkg, renaming connect_unix_strm to connect_client_to_unix_domain_stream_socket.
2009-11-14-22.39.16: Merged threadkit and stdlib versions of socket-stuff.api.
2009-11-14-21.38.58: Merged lib7 into stdlib to simplify both end-user programming model and integration of threadkit into standard platform. Removed thread-kit and x-kit from 'make rest'.
2009-11-14-19.46.55: threadkit: Rename src/lib/thread-kit/src/io/new-foo* to .../foo*.
2009-11-14-19.33.23: threadkit: Rename put_exn -> put_exception, std_strm_hook -> std_stream_hook.
2009-11-14-18.44.01: threadkit, x-kit: Some low-level cleanup like renaming do_it to run_threadkit.
2009-11-13-13.02.01: time, time_guts: Rename 'fmt' to 'format'. threadkit_scheduler: Rename ready_queue_1/ready_queue_2 to io_bound_ready_queue/cpu_bound_ready_queue.
2009-11-13-03.57.29: threadkit: Rename api Os_Glue to Threadkit_Os_Glue, pkg unix_glue to threadkit_unix_glue.
2009-11-13-03.01.56: threadkit: Renamed export_function_g to threadkit_export_function_g.
2009-11-13-02.41.29: threadkit: Rename init_cleanup to initialize_threadkit_cleanup.
2009-11-13-01.55.52: threadkit: Rename io_manager to threadkit_io_manager for clarity.
2009-11-13-00.46.10: Make src/lib/thread-kit/src/core-threadkit.make6 part of lib7 (src/lib/src/lib7.make6) as a first step toward making concurrent programming standard on the Mythryl platform.
2009-11-12-23.18.19: Rename src/app/make7/simple-concurrency/thread.pkg to src/app/make7/simple-concurrency/simple-thread.pkg to distinguish it from src/lib/thread-kit/src/core-thread-kit/thread.pkg.
2009-11-12-07.02.07: Rename pkg callcc to fate, fun callcc to call_with_current_fate, fun throw to resume_fate &tc.
2009-11-12-05.13.18: Global rename of 'cps' to 'fps' to match previous renaming of 'continuation' to 'fate'.
2009-11-12-04.53.53: 'continuation' is far too long a word relative to Mythryl frequency of use: Consulted a thesaurus and did a global rename to 'fate'.
2009-11-12-04.19.25: threadkit: Renamed pkg timeout to timeout_mailop.
2009-11-12-02.54.30: threadkit: Rename maildrop_1 to oneshot_maildrop and maildrop_n to maildrop, for better readability.
2009-11-10-23.13.30: threadkit: mailqueue:  Renamed exported functions for consistency with mailslot and maildrop*.
2009-11-10-21.24.24: threadkit: Renamed mailbox to mailqueue because that is what it bloody well is.
2009-11-10-03.15.15: threadkit: Rename packages clean_up -> threadkit_cleanup, debug -> threadkit_debug, version -> threadkit_version.
2009-11-10-02.55.12: threadkit: Rename scheduler to threadkit_scheduler.
2009-11-10-02.24.11: threadkit: Renamed two packages: q -> threadkit_queue and running -> threadkit_is_running.
2009-11-10-01.38.50: threadkit: Split sync_variable into maildrop_1 and maildrop_n to get rid of pesky i_* and m_* prefixes and incorporate 'mail' tie-word.
2009-11-09-21.54.40: threadkit: 'mail> as tie-noun campaign:  Renamed threadkit::sync to threadkit::do_mailop.
2009-11-09-15.02.58: threadkit: 'mail' as tie-noun campaign: Renamed give and take to put_mail and get_mail (&tc).
2009-11-09-14.16.31: threadkit: Settled on 'mail' as the noun to tie together the threadkit core.  Renamed message_slot to mailslot as first step in implementing this.
2009-11-09-02.50.39: threadkit: internal-threadkit-types.pkg: Rename ENABLED to EVENT_ENABLED, BLOCKED to EVENT_BLOCKED, prio to priority.
2009-11-09-02.30.11: threadkit: internal-threadkit-types.pkg:  Rename TID to THREAD_ID &tc for clarity.
2009-11-09-01.37.52: threadkit: internal-threadkit-types.pkg: Renamed BEVT to BASE_EVENT for clarity.
2009-11-09-01.23.30: threadkit: Rename rep_types to internal_threadkit_types for clarity.
2009-11-09-00.56.25: threadkit: Renamed Slot to Message_Slot for perspicuity.
2009-11-08-23.24.38: threadkit: Rename threadkit::exit to threadkit::thread_exit for clarity and to reduce confusion vis-a-vis unix process level exit().
2009-11-08-20.08.47: threadkit + x-kit:  Low-level cleanup, in particular pervasively replacing threadkit::wrap by ==> for a HUGE increase in readability.
2009-11-07-22.37.59: threadkit: Define threadkit::(==>) synonym to threadkit::wrap for readability in threadkit::select statements.
2009-11-07-21.17.27: threadkit: Low-level code cleanup, in particular renaming spawn to make_thread.
2009-11-07-19.35.21: threadkit: Low-level code cleanup.
2009-11-07-18.48.55: threadkit: Low-level code cleanup.
2009-11-07-12.48.17: threadkit: Random low-level cleanup in src/lib/thread-kit/src/core-thread-kit/.
2009-11-07-04.50.33: threadkit: Change mind: Rename push/pull to give/take. 'channel' kept getting abbreviated to 'chan' suggesting name is too long, so renamed channel to slot.
2009-11-06-13.14.45: thread-kit: Rename send/recv to push/pull for brevity, symmetry and to avoid word mutilation.
2009-11-02-18.58.28: Low-level code cleanup in src/lib/tk/src/ (lots left to do!).
2009-11-02-16.57.58: Low-level code cleanup of src/app/future-lex/src/back-ends/sml/ml.pkg.
2009-11-02-16.32.12: Low-level code cleanup of src/app/burg/burg.pkg.
2009-11-02-15.42.46: Low-level code cleanup mainly of src/app/yacc/src/yacc.pkg.
2009-11-02-12.09.25: Low-level code cleanup of src/app/lex/lexgen.pkg.
2009-11-01-23.16.48: Low-level code cleanup in src/lib/std/src/.
2009-11-01-01.48.49: Low-level code cleanup in src/lib/thread-kit.
2009-10-31-22.37.47: Low-level code cleanup in src/lib/compiler/codegen.
2009-10-31-03.33.30: Low-level code cleanup in compiler front end.
2009-10-30-00.49.38: Remove junk zero-length files accidentally introduced during previous cycle.
2009-10-30-00.39.01: Low-level code cleanup in back-end upper half.
2009-10-29-14.52.40: Low-level code cleanup in backend upper half optimizer code.
2009-10-29-13.35.43: Low-level code cleanup in register allocation.
2009-10-29-12.48.18: Low-level code cleanup in sparc code generator.
2009-10-29-03.39.06: Low-level code cleanup, mostly in match compiler code.
2009-10-29-01.57.05: More low-level code cleanup in ppc code generator.
2009-10-29-01.22.54: Low-level code cleanup in ppc code generator.
2009-10-28-23.46.51: Low-level code cleanup in regex code.
2009-10-28-23.07.10: Low-level code cleanup of html support code.
2009-10-28-20.02.20: Low-level code cleanup in various binary-tree files.
2009-10-28-01.56.06: c-kit: Low-level code cleanup.
2009-10-27-14.48.17: c-kit: type-util.pkg: Low-level code cleanup.
2009-10-27-13.20.35: c-kit: state.pkg: Low-level cleanup.
2009-10-27-04.50.30: x-kit: Low-level code cleanup.
2009-10-27-00.17.48: x-kit: Low-level cleanup centering on attributes.pkg, now renamed to attribute.pkg.
2009-10-26-20.13.07: Word de-mutilation patrol: Global rename of attr to attribute.
2009-10-26-19.51.29: Word de-mutilation patrol: Global renaming of cmp to compare.
2009-10-26-19.26.11: Low-level code cleanup, word de-mutilation patrol:  Global rename of chk to check.
2009-10-26-17.32.46: Word de-mutilation patrol: Global replacement of dict by dictionary.
2009-10-26-17.11.12: Low-level code cleanup, mostly removing pointless package { ... } clutter from invocations of monomorphic_hash_table_g.
2009-10-26-16.00.40: x-kit: More word de-mutilation: Global rename of attrs -> attributes.
2009-10-26-15.48.22: x-kit: More word de-mutilation: Global rename of dflt to default.
2009-10-26-15.39.34: x-kit: More word de-mutilation: Global rename of rqst -> request.
2009-10-26-15.29.20: x-kit: More mutilated-word restoration: Global rename of win to window.
2009-10-26-14.35.58: x-kit: Low-level cleanup like globally renaming geom to geometry.
2009-10-26-14.24.58: x-kit low-level cleanup: Rename evt -> event globally.
2009-10-26-13.58.06: Random low-level cleanup like renaming hdlr -> handler globally.
2009-10-26-02.36.28: x-kit: More cleanup, mostly renaming wid,ht -> wide,high.
2009-10-24-17.05.49: x-kit: More low-level code cleanup.
2009-10-24-04.10.13: x-kit: Basic cleanup work.
2009-10-23-22.00.36: mythryl.grammar: Support traditional C infinite loop syntax 'for (;;) { ... };', also 'for () { ... };' while I was at it.
2009-10-23-20.51.47: mythryl.grammar: Change anonymous package and api syntax from 'package _ { ... }' and 'api _ { ... }' to 'package { ... }' and 'api { ... }' -- for some reason I hallucinated the underbars were syntactically necessary first time around.
2009-10-23-12.56.18: Rename generic package set_fn to set_g per current naming conventions.
2009-10-23-12.30.34: Establish gtk-unit-test.pkg parallel to gtk-via-pipe-unit-test.pkg.
2009-10-22-12.10.49: gtk-driver.pkg: Change run_eventloop_once to call run_pending_callbacks(); change run_eventloop_indefinitely to loop calling run_eventloop_once. gtk-driver.c: Drop unused run_eventloop_indefinitely (gtk_main()) fn.
2009-10-22-11.38.35: gtk-driver.pkg: Implemented run_pending_callbacks(), cribbing as needed from maybe_run_callback() in gtk-via-pipe-driver.pkg.
2009-10-22-09.39.38: Migrate maybe_run_callback() from gtk-g.pkg to gtk-via-pipe-driver.pkg because its logic is specific to the text pipe protocol private to gtk-via-pipe-driver.pkg and mythryl-gtk-slave.c.
2009-10-22-01.41.52: gtk-driver.pkg, gtk-via-pipe-driver.pkg: Incorporate callback maps into session state.
2009-10-22-01.29.41: gtk-g.pkg: Export callback maps to driver level.
2009-10-22-00.42.07: gtk-via-pipe-driver.pkg, mythryl-gtk-slave.c: Implement run_eventloop_once().
2009-10-22-00.05.50: gtk: Rename mainloop to eventloop everywhere for clarity.
2009-10-21-17.00.29: gtk.api, gtk-driver.api: Add run_mainloop_once.
2009-10-21-15.51.47: gtk.pkg: Replace old hand-coded contents with just package gtk = gtk_g( gtk_driver );
2009-10-21-14.37.44: gtk: Rename main -> run_mainloop_indefinitely, exit_main ->  quit_mainloop.  Misc minor stuff.
2009-10-20-16.50.06: gtk-driver.pkg, gtk-driver.c: Implement irregular functions get_widget_allocation, get_window_pointer, make_dialog, unref_object, exit_main, main, cribbing as needed from mythryl-gtk-slave.c
2009-10-19-21.58.59: gtk-driver.c: Rename event_queue to callback_queue; export access to it to the Mythryl level.
2009-10-19-01.22.10: gtk-driver.pkg: Now conforms to Gtk_Driver API at the type level. (Not even close to operational, however.)
2009-10-18-21.55.54: gtk-driver.api: Make 'Session' type abstract.
2009-10-18-20.30.59: Create gtk-via-pipe-unit-text.pkg and hook it up to regression test suite machinery.
2009-10-17-18.49.02: regular-expression-matcher.api: More renaming for clarity, brevity and consistency: 'find_first_ith_group i' -> 'find_first_group i', 'find_all_ith_group i' -> 'find_all_group i', find_first_all_groups -> find_first_groups_all, find_all_all_groups -> find_all_groups_all; Deleted as now redundant: find_first_group1, find_all_group1.
2009-10-17-04.43.25: regular-expression-matcher-g.pkg: Fixed: replace_first_via_fn was not raising NOT_FOUND on failure to match regex.
2009-10-17-03.46.55: make7-g.pkg: Moved trim (drop leading + trailing whitespace) from make-gtk-glue to scripting_globals -- it is a frequently used op when scripting.
2009-10-17-03.06.44: make-gtk-glue: Tweak code generated for gtk-driver.pkg and gtk-driver.c.
2009-10-17-01.46.47: make-gtk-glue: First-cut autogeneration of gtk-driver.pkg functions.
2009-10-16-23.45.42: make-gtk-glue: Establish function to autogeneration functions in gtk-slave.pkg.
2009-10-16-21.28.45: make-gtk-glue: Autogenerate per-fn lines in lib7-gtk/cfun-list.h. check-for-gtk: Improve narration.
2009-10-16-18.00.31: gtk-driver.c: Change mind, rename queue_*_callback back to old run_*_callback naming convention. make-gtk-glue: Enable autogeneration of calls to run_*_callback fns in gtk-driver.c.
2009-10-16-14.44.13: gtk-driver.c: Implement queue_* fns parallel to run_* fns from mythryl-gtk-slave.c.
2009-10-16-13.27.46: gtk-driver.c:  Implemented event queue core.
2009-10-15-22.01.55: check-for-gtk: Created. make-gtk-glue: Autogenerate gtk-driver.c callback fns parallel to those for mythryl-gtk-slave.c.
2009-10-15-19.13.26: make-gtk-glue: Autogenerate gtk-driver.c plain functions parallel to those in mythryl-gtk-slave.c.
2009-10-14-20.49.20: Delving Deeper: Add THE/NULL/the section. regular-expression-matcher.api:  Usability API tweaks, some incompatible; add missing find_all_all_groups().
2009-10-14-15.56.21: regular-expression-matcher-g.pkg: Have find_first_ith_group raise exception NOT_FOUND on match failure; returning the empty string in this case was a bug invitation.
2009-10-14-15.36.30: spawn.pkg: Rename back__quotes to bash. make7-g.pkg: Add bash as synonym for back__quotes.
2009-10-14-15.21.38: make7-g.pkg: scripting_globals: Move die and basename over from make-gtk-glue and add dirname: These are all de facto standard posix scripting operators.
2009-10-14-13.34.02: pervasive.pkg: Add exception NOT_FOUND. gtk-driver.pkg: Create. make-gtk-glue: Add intron for gtk-driver.pkg; gtk-binding-functions.c: Rename to gtk-driver.c
2009-10-13-22.25.24: make-gtk-glue: Set up introns for cfuns-list.h and gtk-binding-functions.c
2009-10-13-21.09.26: make-gtk-glue: Autogenerate gtk-g.pkg callback functions; various tweaks.
2009-10-13-13.22.15: make-gtk-glue: callback-fn: Replace name by fn-name field for readability and consistency.
2009-10-13-12.35.42: make-gtk-glue: Merge code and gtk-g.pkg field types.
2009-10-12-14.52.31: Rename gtk-slave to mythryl-gtk-slave; tweak sh/git-put to maintain a local change-log.
