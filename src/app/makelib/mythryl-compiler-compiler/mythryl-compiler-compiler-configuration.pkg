## mythryl-compiler-compiler-configuration.pkg

# Compiled by:
#     src/app/makelib/makelib.sublib



# The various constants and variable defaults
# needed by mythryl-compiler-compiler.



package   mythryl_compiler_compiler_configuration   {
    #     =======================================
    #
    mythryl_primordial_library			=   "$ROOT/src/lib/core/init/init.cmi";
	#
	# This is the first library to be built during bootstrapping.
	# That makes it a special case which requires special handling -- see:
	#     src/app/makelib/mythryl-compiler-compiler/mythryl-compiler-compiler-g.pkg
	#     src/app/makelib/mythryl-compiler-compiler/process-mythryl-primordial-library.pkg
	#     src/app/makelib/main/makelib-g.pkg
	#
	# Changing the value of this is decidedly nontrivial!      -- Voice Of Experience




    mythryl_compiler_root_library_filename	=   "$ROOT/src/etc/mythryl-compiler-root.lib";
	#
	# When we do "make compiler",
	#
	#     src/app/makelib/mythryl-compiler-compiler/mythryl-compiler-compiler-g.pkg
	# 
	# builds this library in order to compiler all packages needed by the compiler.
	# Which is to say, the mythryl makelib/compiler/etc source tree by definition
	# consists of this library plus all libraries and packages it references,
	# directly or indirectly:
	# 



    mythryld_executable_filename_to_create	=   "mythryld";
	#	
	# When we do "make compiler",
	#
	#     src/lib/core/internal/make-mythryld-executable.pkg
	#
	# will save the resulting image on disk in a file with this name.



    default_generated_filename_infix		=   "";
	#
	# If this is (e.g.) ".pwrpc32-macos", instead of "foo.pkg.compiled" we'll generate "foo.pkg.pwrpc32-macos.compiled".
	# This is untested support for cross-compiling.  (SML/NJ
	# supports cross-compiling, but I haven't done any cross-compiling
	# during Mythryl development.)

    compiled_files_to_load_filename =   "COMPILED_FILES_TO_LOAD";
	#
	# WARNING:  IF YOU CHANGE THIS VALUE you will also need to change it in
	#     sh/make-compiler-executable
	#
	# One of the last steps in building the 'mythryld' compiler image on disk
	# is for bin/mythryl-runtime-intel32 to load in the appropriate set of .compiled files
	# and then dump

    picklehash_map_filename            =   "LIBRARY_CONTENTS";

    compiled_files_suffix  = "-compiledfiles";

    libraries_to_preload
        =
        [ "$ROOT/src/lib/std/standard.lib",										# The Mythryl base library.
	  "$ROOT/src/lib/core/makelib/makelib.lib",									# The Mythryl 'make' facility.
	  "$ROOT/src/lib/core/mythryl-compiler-compiler/mythryl-compiler-compiler-for-this-platform.lib",		# The package that builds the compiler itself.
	  "$ROOT/src/lib/core/compiler.lib",										# The toplevel compiler interface packages.
#         "$ROOT/src/lib/core/compiler/compiler.lib",		# Obsolete toplevel compiler interface packages.

	  # "If you don't include the old-style visible compiler above,
	  #  then you should include the following to make
	  #  compiler::version and compiler::architecture available:" -- Matthias Blume
	  #
#	  "$ROOT/src/lib/core/compiler/minimal.lib",

	  "$ROOT/src/lib/std/standard.lib"										# Main Mythryl library.
        ];




};

## (C) 1999 Lucent Technologies, Bell Laboratories
## Author: Matthias Blume (blume@kurims.kyoto-u.ac.jp)
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
