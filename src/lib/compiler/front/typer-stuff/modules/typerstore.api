## typerstore.api

# Compiled by:
#     src/lib/compiler/front/typer-stuff/typecheckdata.sublib



stipulate
    package mld =  module_level_declarations;				# module_level_declarations		is from   src/lib/compiler/front/typer-stuff/modules/module-level-declarations.pkg
    package mp  =  stamppath;						# stamppath				is from   src/lib/compiler/front/typer-stuff/modules/stamppath.pkg
    package sta =  stamp;						# stamp					is from   src/lib/compiler/front/typer-stuff/basics/stamp.pkg
herein

    api Typerstore {
	#
	#
#	Module_Stamp =  sta::Stamp;
	Stamppath  =  mp::Stamppath;

	Typerstore =  mld::Typerstore;

	exception UNBOUND;

	empty:   Typerstore;

	atop:     (Typerstore, Typerstore) -> Typerstore;
	atop_sp:  (Typerstore, Typerstore) -> Typerstore;

	mark:   (((Void -> sta::Stamp), Typerstore))                     -> Typerstore;
	set:    (Typerstore,  sta::Stamp, mld::Typerstore_Entry) -> Typerstore;

	to_list:  Typerstore ->  List( (sta::Stamp, mld::Typerstore_Entry) );

	find_entry_by_module_stamp:              (Typerstore, sta::Stamp) -> mld::Typerstore_Entry;
	find_package_by_module_stamp:            (Typerstore, sta::Stamp) -> mld::Typechecked_Package;
	find_type_by_module_stamp: 		 (Typerstore, sta::Stamp) -> mld::Typechecked_Type;
	find_generic_by_module_stamp:            (Typerstore, sta::Stamp) -> mld::Typechecked_Generic;

	find_entry_via_stamppath:              (Typerstore, Stamppath) -> mld::Typerstore_Entry;
	find_type_via_stamppath:		 (Typerstore, Stamppath) -> mld::Typechecked_Type; 
	find_package_via_stamppath:            (Typerstore, Stamppath) -> mld::Typechecked_Package; 
	find_generic_via_stamppath:            (Typerstore, Stamppath) -> mld::Typechecked_Generic; 

	debugging:  Ref(  Bool );
    };
end;


## Copyright 1996 by AT&T Bell Laboratories 
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
