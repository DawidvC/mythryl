## compiler-verbosity.pkg
#

# Compiled by:
#     src/lib/compiler/front/basics/basics.sublib

package compiler_verbosity {
	#
	Compiler_Verbosity					# What intermediate code representations to prettyprint during a compile.  Incorporated in Per_Compile_Stuff -- see   src/lib/compiler/front/typer-stuff/main/per-compile-stuff.pkg
	  =
	  {
	    pprint_symbol_table:		Bool,		# In src/lib/compiler/toplevel/main/translate-raw-syntax-to-execode-g.pkg
	    print_exported_highcode_variables:	Bool,		# In src/lib/compiler/toplevel/main/translate-raw-syntax-to-execode-g.pkg
	    unparse_deep_syntax_tree:		Bool,		# In src/lib/compiler/toplevel/main/translate-raw-syntax-to-execode-g.pkg
	    pprint_deep_syntax_tree:		Bool,		# In src/lib/compiler/toplevel/main/translate-raw-syntax-to-execode-g.pkg
	    pprint_lambdacode_tree:		Bool,		# In src/lib/compiler/back/top/translate/translate-deep-syntax-to-lambdacode.pkg
	    pprint_anormcode_tree:		Bool,		# In src/lib/compiler/toplevel/main/translate-raw-syntax-to-execode-g.pkg
	    pprint_machcode_controlflow_graph:	Bool,		# In src/lib/compiler/back/low/main/main/backend-lowhalf-g.pkg
								#  & src/lib/compiler/back/low/intel32/regor/regor-intel32-g.pkg
	    pprint_elapsed_times:		Bool,		# In src/lib/compiler/back/top/main/backend-tophalf-g.pkg
	    #							# Feel free to add more flags here.
	    print_expression_value:		Bool,		# Print         result of compiling and evaluating expression.
	    print_type_of_expression_value:	Bool		# Print type of result of compiling and evaluating expression.
	  }; 

	print_nothing
	  =
	  { pprint_symbol_table			=> FALSE,
	    print_exported_highcode_variables	=> FALSE,
	    unparse_deep_syntax_tree		=> FALSE,
	    pprint_deep_syntax_tree		=> FALSE,
	    pprint_lambdacode_tree		=> FALSE,
	    pprint_anormcode_tree		=> FALSE,
	    pprint_machcode_controlflow_graph	=> FALSE,
	    pprint_elapsed_times		=> FALSE,
	    print_expression_value		=> FALSE,
	    print_type_of_expression_value	=> FALSE
	  }; 

	print_expression_value
	  =
	  { pprint_symbol_table			=> FALSE,
	    print_exported_highcode_variables	=> FALSE,
	    unparse_deep_syntax_tree		=> FALSE,
	    pprint_deep_syntax_tree		=> FALSE,
	    pprint_lambdacode_tree		=> FALSE,
	    pprint_anormcode_tree		=> FALSE,
	    pprint_machcode_controlflow_graph	=> FALSE,
	    pprint_elapsed_times		=> FALSE,
	    print_expression_value		=> TRUE,
	    print_type_of_expression_value	=> FALSE
	  }; 

	print_expression_value_and_type
	  =
	  { pprint_symbol_table			=> FALSE,
	    print_exported_highcode_variables	=> FALSE,
	    unparse_deep_syntax_tree		=> FALSE,
	    pprint_deep_syntax_tree		=> FALSE,
	    pprint_lambdacode_tree		=> FALSE,
	    pprint_anormcode_tree		=> FALSE,
	    pprint_machcode_controlflow_graph	=> FALSE,
	    pprint_elapsed_times		=> FALSE,
	    print_expression_value		=> TRUE,
	    print_type_of_expression_value	=> TRUE
	  }; 

	print_everything
	  =
	  { pprint_symbol_table			=> TRUE,
	    print_exported_highcode_variables	=> TRUE,
	    unparse_deep_syntax_tree		=> TRUE,
	    pprint_deep_syntax_tree		=> TRUE,
	    pprint_lambdacode_tree		=> TRUE,
	    pprint_anormcode_tree		=> TRUE,
	    pprint_machcode_controlflow_graph	=> TRUE,
	    pprint_elapsed_times		=> TRUE,
	    print_expression_value		=> TRUE,
	    print_type_of_expression_value	=> TRUE
	  }; 
};


## Copyright (c) 2010 by Jeff Prothero,
## released per terms of SMLNJ-COPYRIGHT.
