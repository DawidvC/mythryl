## convert-nextcode-fun-args-to-treecode.api

# Compiled by:
#     src/lib/compiler/core.sublib



# Parameter passing convention for standard or known functions.

stipulate
    package ncf =  nextcode_form;				# nextcode_form		is from   src/lib/compiler/back/top/nextcode/nextcode-form.pkg
herein

    # This api is implemented in:
    #
    #     src/lib/compiler/back/low/main/nextcode/convert-nextcode-fun-args-to-treecode-g.pkg
    #
    api Convert_Nextcode_Fun_Args_To_Treecode {
	#
	package tcf:  Treecode_Form;				# Treecode_Form		is from   src/lib/compiler/back/low/treecode/treecode-form.api

	convert_nextcode_public_fun_args_to_treecode
	    :
	    { ncftype_for_fun:		ncf::Type,
	      ncftypes_for_args:	List( ncf::Type ),	# Should we rename this to 'parameter_types'? Should we switch to "formal args" vs "actual args" for better parallelism?
	      use_virtual_framepointer:	Bool
	    }
	    ->
	    List( tcf::Expression );

	convert_fixed_nextcode_fun_args_to_treecode
	    :
	    { ncftypes_for_args:	List( ncf::Type ),
	      use_virtual_framepointer: Bool
	    }
	    ->
	    List( tcf::Expression );
    };
end;

## COPYRIGHT (c) 1996 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
