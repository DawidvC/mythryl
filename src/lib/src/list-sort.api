## list-sort.api

# Compiled by:
#     src/lib/std/src/standard-core.sublib

# The generic list sorting interface.  Taken from the SML/NJ compiler.


###           "Anyone could learn Lisp in one day,
###            except that if they already knew Fortran,
###            it would take three days."
###
###                             -- Marvin Minsky



# This api is implemented in:
#
#     src/lib/src/list-mergesort.pkg
#
api List_Sort {
    #
    sort_list:  ((X, X) -> Bool) -> List(X) -> List(X);
	#
	# (sort_list gt l) sorts the list l in ascending order using the
	# ``greater-than'' relationship defined by gt.

    sort_list_and_drop_duplicates:  ((X, X) -> Order) -> List(X) -> List(X);
	#
        # uniquesort produces an increasing list, removing equal 
        # elements

    sort_list_and_find_duplicates:  ((X, X) -> Order) -> List(X) -> List(X);
	#
        # uniquesort produces an increasing list, returning duplicated
        # elements

    list_is_sorted:  ((X, X) -> Bool) -> List(X) -> Bool;  
	#
	# (sorted gt l) returns TRUE if the list is sorted in ascending
	# order under the ``greater-than'' predicate gt.
};


## COPYRIGHT (c) 1989 by AT&T Bell Laboratories
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
