## dir.api
#

# Compiled by:
#     src/lib/std/standard.lib

# Implemented in:
#     src/lib/src/dir.pkg

api Dir {
    #
    entry_names:	String -> List( String );		# Returns [ "bar", "foo", "zot" ] or such. Skips dot-initial names.
    entry_names':	String -> List( String );		# Returns [ ".bashrc", "bar", "foo", "zot" ] or such. Skips "." and "..".
    entry_names'':	String -> List( String );		# Returns [ ".", "..", ".bashrc", "bar", "foo", "zot" ] or such.

    file_names:		String -> List( String );		# Returns [ "bar", "foo", "zot" ] or such. Skips pipes, directories and dot-initial names.
    directory_names:	String -> List( String );		# Returns [ "bar", "foo", "zot" ] or such. Skips pipes, files and dot_initial names.
    
    file_names':	String -> List( String );		# Returns [ "bar", "foo", "zot" ] or such. Skips pipes, directories etc, but allows dot-initial names.
    directory_names':	String -> List( String );		# Returns [ "bar", "foo", "zot" ] or such. Skips pipes, files etc, but allows dot-initial names.
    
    entries:		String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips dot-initial names.
    entries':		String -> List( String );		# Returns [ "/home/jcb/.bashrc", "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips "." and "..".
    entries'':		String -> List( String );		# Returns [ "/home/jcb/.", "/home/jcb/..", "/home/jcb/.bashrc", "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such.

    files:		String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips pipes, directories and dot-initial names.
    directories:	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips pipes, files and dot-initial names.

    files':		String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips pipes directories etc but allows dot-initial names.
    directories':	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" ] or such. Skips pipes, files, etc but allows dot-initial names other than "." and "..".
    
    is_file:         String -> Bool;				# TRUE iff there exists a plain file by that name.
    is_directory:    String -> Bool;				# TRUE iff there exists a directory by name.
    is_something:    String -> Bool;				# TRUE iff anything by that name exists in the filesystem.
    exists:	     String -> Bool;				# TRUE iff there exists a directory by name. (same as is_directory)
};


## Author: Matthias Blume (blume@cs.princeton.edu)
## Copyright (c) 1999, 2000 by Lucent Bell Laboratories
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
