## dir-tree.api
## Author: Matthias Blume (blume@cs.princeton.edu)

# Compiled by:
#     src/lib/std/standard.lib

# Just like Dir from
#     src/lib/src/dir.api
# except that we process all entries in
# an entire directory tree, instead of
# in just one directory.

# This api is implemented in:
#
#     src/lib/src/dir-tree.pkg
#
api Dir_Tree {
    #
    entries:		String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/src", "/home/jcb/src/test.c", "/home/jcb/zot" ] or such. Skips dot-initial names.
    entries':   	String -> List( String );		# Returns [ "/home/jcb/.bashrc", "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/src", "/home/jcb/src/test.c", "/home/jcb/zot" ] or such. Skips "." and "..".
    entries'':  	String -> List( String );		# Returns [ "/home/jcb/.", "/home/jcb/..", "/home/jcb/.bashrc", "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/src", "/home/jcb/src/.", "/home/jcb/src/..", "/home/jcb/src/test.c", "/home/jcb/zot" ] or such.

    files:      	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" 			   ] or such. Skips pipes, directories and dotfiles.
    files':     	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot", "/home/jcb/.emacs"  ] or such. Skips pipes, directories and other non-vanilla files.

    directories:	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" 			   ] or such. Skips pipes, plainfiles and dotfiles.
    directories':	String -> List( String );		# Returns [ "/home/jcb/bar", "/home/jcb/foo", "/home/jcb/zot" 			   ] or such. Skips pipes, plainfiles and "." and "..".
};


## Copyright (c) 1999, 2000 by Lucent Bell Laboratories
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
