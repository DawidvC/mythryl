## initialize-run-at.pkg

# Compiled by:
#     src/lib/std/standard.lib

# Included  by:
#     src/lib/src/lib/thread-kit/src/glue/thread-scheduler-control-g.pkg

package initialize_run_at: (weak)  api { }  {				# Empty api because we do everything via load-time side-effects.

										# run_at			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/run-at.pkg
										# io_startup_and_shutdown	is from   src/lib/std/src/io/io-startup-and-shutdown.pkg
    package cu = run_at;
    package ci = io_startup_and_shutdown;

    # Note the standard cleaners.
    #
    # The order here is important:
    # I/O needs to be after Slots&Mailqueues
    # but before servers, since server cleanup may
    # depend on I/O:
    #
    my _ = {   cu::note_startup_or_shutdown_action  cu::standard_mailslot_and_mailqueue_cleaner;
	       cu::note_startup_or_shutdown_action  ci::io_cleaner;
	       cu::note_startup_or_shutdown_action  cu::standard_imp_cleaner;
           };

};


## COPYRIGHT (c) 2001 Bell Labs, Lucent Technologies
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
