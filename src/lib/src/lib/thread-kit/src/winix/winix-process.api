## winix-process.api
#
# The threadkit version of the generic process control interface.

# Compiled by:
#     src/lib/std/standard.lib




# This api is implemented in:
#
#     src/lib/std/src/posix/winix-process.pkg
#
api Winix_Process {
    #
    eqtype Status;

    success:    Status;
    failure:    Status;

    bin_sh':         String -> Status;
    bin_sh'_mailop:  String -> mailop::Mailop( Status );

#   at_exit:     (Void -> Void) -> Void;		# This was never implemented, and these days we're anyhow trying to instead use the more general   src/lib/std/src/nj/run-at--premicrothread.pkg

    exit:            Status -> X;			# This is what you usually want.  Does   at::run_functions_scheduled_to_run  at::SHUTDOWN;   and then   exit_uncleanly()  (below).
    exit_uncleanly:  Status -> X;			# Calls C-level exit() fn via the exit() fn in src/lib/std/src/psx/posix-process.pkg

    get_env:  String -> Null_Or( String );

};


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
