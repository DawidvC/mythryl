## memalloc-a4-win32.pkg
## Author: Matthias Blume (blume@tti-c.org)

#   Memory allocation (via GlobalAlloc) for Win32.
#   Size of address: 4 bytes.
#
package c_mem_allot:  Cmem_Alloc {

    exception OUT_OF_MEMORY;

    Addr  = one_word_unt::word;
    Addr' = address;

    package dl = dynamic_linkage;

    fun main's s
        =
        dl::lib_symbol (dl::main_lib, s);

    malloc_h =   main's "GlobalAlloc";
    free_h   =   main's "GlobalFree";

    fun sys_malloc (n:  one_word_unt::word)
        =
	{   w_p = raw_mem_inline_t::rawccall :
		      one_word_unt::word * (one_word_unt::word * one_word_unt::word) *
		      List( Void * word * word -> String )
		      -> one_word_unt::word;
	    a = w_p (dl::address malloc_h, (0w0, n), []);

	    if a == 0w0 then raise OUT_OF_MEMORY; else a; fi;
	};

    fun sys_free (a:  one_word_unt::word)
	=
	{   p_u = raw_mem_inline_t::rawccall :
		      one_word_unt::word * one_word_unt::word *
		      List (Void * String -> Void)
		      -> Void;
	    p_u (dl::address free_h, a, []);
	};

    fun allot bytes =  sys_malloc (unt::toLargeWord bytes);
    fun free a      =  sys_free a;
};


## Copyright (c) 2004 by The Fellowship of SML/NJ
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
