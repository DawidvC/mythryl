## atom-ximp.api
#
# A Client-side server for atoms.
#
# Atoms are short integer representations
# of strings maintained by the X server.
#
# The X Inter-Client Communication Convention
# (ICCC) defines a standard set of atoms
# set of atoms; see:
#
#     src/lib/x-kit/xclient/src/iccc/standard-x11-atoms.pkg
#

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib


# This api is implemented in:
#
#     src/lib/x-kit/xclient/src/iccc/atom-ximp.pkg

stipulate
    include package   threadkit;								# threadkit		is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package xt  =  xtypes;									# xtypes		is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
#   package dy  =  display;									# display		is from   src/lib/x-kit/xclient/src/wire/display.pkg
    package ap  =  client_to_atom;								# client_to_atom	is from   src/lib/x-kit/xclient/src/iccc/client-to-atom.pkg
    package sp  =  xclient_to_sequencer;							# xclient_to_sequencer	is from   src/lib/x-kit/xclient/src/wire/xclient-to-sequencer.pkg
herein

    api Atom_Ximp {
	#
	Exports	  = {										# Ports we export for use by other imps.
		      client_to_atom:		ap::Client_To_Atom
		    };

	Imports   = {										# Ports we use which are exported by other imps.
		      xclient_to_sequencer:	sp::Xclient_To_Sequencer
		    };

	Option = MICROTHREAD_NAME String;							# 

	Atom_Egg =  Void -> (Exports,   (Imports, Run_Gun, End_Gun) -> Void);

        make_atom_egg:   List(Option) -> Atom_Egg;						# 
    };

end;



##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
