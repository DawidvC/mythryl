## window-watcher-ximp.api
#
# Handle operations on X-server properties.

# Compiled by:
#     src/lib/x-kit/xclient/xclient-internals.sublib



###              "After years of finding mathematics easy, I finally
###               reached integral calculus and came up against a
###               barrier.  I realized that this was as far as I could
###               go, and to this day I have never successfully gone
###               beyond it in any but the most superficial way."
###
###                                     -- Isaac Asimov




stipulate
    include package   threadkit;							# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
    package ap  =  client_to_atom;							# client_to_atom		is from   src/lib/x-kit/xclient/src/iccc/client-to-atom.pkg
#   package dy  =  display;								# display			is from   src/lib/x-kit/xclient/src/wire/display.pkg
#   package xet =  xevent_types;							# xevent_types			is from   src/lib/x-kit/xclient/src/wire/xevent-types.pkg
    package xt  =  xtypes;								# xtypes			is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package ts  =  xserver_timestamp;							# xserver_timestamp		is from   src/lib/x-kit/xclient/src/wire/xserver-timestamp.pkg
    package wpp =  client_to_window_watcher;						# client_to_window_watcher	is from   src/lib/x-kit/xclient/src/window/client-to-window-watcher.pkg
    package xes =  xevent_sink;								# xevent_sink			is from   src/lib/x-kit/xclient/src/wire/xevent-sink.pkg
    package x2s =  xclient_to_sequencer;						# xclient_to_sequencer		is from   src/lib/x-kit/xclient/src/wire/xclient-to-sequencer.pkg
herein	
	
    api Window_Watcher_Ximp {
	#
	Exports	= {									# Ports we export for use by other imps.
		    client_to_window_watcher:		wpp::Client_To_Window_Watcher,
		    window_property_xevent_sink:	xes::Xevent_Sink
		  };

	Imports = {									# Ports we use which are exported by other imps.
#		    xclient_to_sequencer:		x2s::Xclient_To_Sequencer,
		    client_to_atom:			ap::Client_To_Atom	
		  };


	Option = MICROTHREAD_NAME String;						# 

	Window_Watcher_Egg =  Void -> (Exports,   (Imports, Run_Gun, End_Gun) -> Void);

        make_window_watcher_egg:   List(Option) -> Window_Watcher_Egg;			# 
    };

end;



## COPYRIGHT (c) 1994 by AT&T Bell Laboratories.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
