## gadget-to-editboss.pkg
#
# Here we define the port which
#
#     src/lib/x-kit/widget/edit/editboss-imp.pkg
#
# exports to
#
#     src/lib/x-kit/widget/edit/textedit.pkg
#     src/lib/x-kit/widget/edit/textpane.pkg
#     src/lib/x-kit/widget/edit/lineeditor.pkg
#     src/lib/x-kit/widget/edit/statusline.pkg
#     src/lib/x-kit/widget/edit/minibuffer.pkg
#
# and company.

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit			is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
#   package ebt =  editboss_types;								# editboss_types		is from   src/lib/x-kit/widget/edit/editboss-types.pkg

    package g2d =  geometry2d;									# geometry2d			is from   src/lib/std/2d/geometry2d.pkg

    package nl  =  red_black_numbered_list;							# red_black_numbered_list	is from   src/lib/src/red-black-numbered-list.pkg
    package iuw =  issue_unique_widget_id;							# issue_unique_widget_id	is from   src/lib/x-kit/widget/gui/issue-unique-widget-id.pkg

    package e2m =  textedit_to_minibuffer;							# textedit_to_minibuffer	is from   src/lib/x-kit/widget/edit/textedit-to-minibuffer.pkg
    package e2p =  textedit_to_textpane;							# textedit_to_textpane		is from   src/lib/x-kit/widget/edit/textedit-to-textpane.pkg
    package l2p =  lineeditor_to_textpane;							# lineeditor_to_textpane	is from   src/lib/x-kit/widget/edit/lineeditor-to-textpane.pkg
    package m2e =  minibuffer_to_textedit;							# minibuffer_to_textedit	is from   src/lib/x-kit/widget/edit/minibuffer-to-textedit.pkg
    package p2e =  textpane_to_textedit;							# textpane_to_textedit		is from   src/lib/x-kit/widget/edit/textpane-to-textedit.pkg
    package p2l =  textpane_to_lineeditor;							# textpane_to_lineeditor	is from   src/lib/x-kit/widget/edit/textpane-to-lineeditor.pkg
    package p2s =  textpane_to_statusline;							# textpane_to_statusline	is from   src/lib/x-kit/widget/edit/textpane-to-statusline.pkg
    package s2p =  statusline_to_textpane;							# statusline_to_textpane	is from   src/lib/x-kit/widget/edit/statusline-to-textpane.pkg

    package b2m =  editboss_to_minibuffer;							# editboss_to_minibuffer	is from   src/lib/x-kit/widget/edit/editboss-to-minibuffer.pkg
    package b2s =  editboss_to_statusline;							# editboss_to_statusline	is from   src/lib/x-kit/widget/edit/editboss-to-statusline.pkg
    package b2l =  editboss_to_lineeditor;							# editboss_to_lineeditor	is from   src/lib/x-kit/widget/edit/editboss-to-lineeditor.pkg
    package b2e =  editboss_to_textedit;							# editboss_to_textedit		is from   src/lib/x-kit/widget/edit/editboss-to-textedit.pkg
    package b2p =  editboss_to_textpane;							# editboss_to_textpane		is from   src/lib/x-kit/widget/edit/editboss-to-textpane.pkg
    package t2t =  textpane_to_textbuffer;							# textpane_to_textbuffer	is from   src/lib/x-kit/widget/edit/textpane-to-textbuffer.pkg

    package gt  =  guiboss_types;								# guiboss_types			is from   src/lib/x-kit/widget/gui/guiboss-types.pkg
herein

    # This port is implemented in:
    #
    #     src/lib/x-kit/widget/edit/editboss-imp.pkg
    #
    package gadget_to_editboss {
	#
	Gadget_To_Editboss									# guiboss provides this interface to gadgets via the guiboss_types Gadget_To_Guiboss interface.  This is the toplevel application code access pathway to texteditor functionality.
	  =											# This was in a separate guiboss-to-editboss.pkg file:  Moved it here to resolve a package-cycle problem.
	  { id:				Id,							# Unique id to facilitate storing gadget_to_editboss instances in indexed datastructures like red-black trees.
	    #
	    get_or_make_textbuffer:	t2t::Textbuffer_Arg -> t2t::Textpane_To_Textbuffer,

	    note_minibuffer:		(b2m::Editboss_To_Minibuffer, e2m::Textedit_To_Minibuffer) -> Void,
	    note_statusline:		(b2s::Editboss_To_Statusline, p2s::Textpane_To_Statusline) -> Void,
	    note_lineeditor:		(b2l::Editboss_To_Lineeditor, p2l::Textpane_To_Lineeditor) -> Void,
	    #
	    note_textpane:		(b2p::Editboss_To_Textpane, e2p::Textedit_To_Textpane, s2p::Statusline_To_Textpane, l2p::Lineeditor_To_Textpane)  -> Void,
	    note_textedit:		(b2e::Editboss_To_Textedit, p2e::Textpane_To_Textedit, m2e::Minibuffer_To_Textedit)  -> Void,

	    drop_minibuffer:		{ minibuffer_id:	iuw::Id,
					  textedit_id:		iuw::Id
					}
					->  Void,

	    drop_statusline:		{ statusline_id:	iuw::Id,
	    				  textedit_id:		iuw::Id,
	    				  textpane_id:		iuw::Id
					}
					-> Void,

	    drop_lineeditor:		{ lineeditor_id:	iuw::Id,
	    				  textedit_id:		iuw::Id,
	    				  textpane_id:		iuw::Id
					}
					-> Void,
	    #
	    drop_textpane:		{ textpane_id:		iuw::Id,
	    				  textedit_id:		iuw::Id
					}
					-> Void,

	    drop_textedit:		{ textedit_id:		iuw::Id
					}
					-> Void
	  };

	exception GADGET_TO_EDITBOSS Gadget_To_Editboss;


	fun find__gadget_to_editboss
	      (
		gadget_to_guiboss:	gt::Gadget_To_Guiboss,
		caller:			String
	      )
	    =
	    case (gadget_to_guiboss.find_global "gadget_to_editboss::GADGET_TO_EDITBOSS")
		#
		THE gadget_to_editboss
		    =>
		    case gadget_to_editboss.val
			#
			GADGET_TO_EDITBOSS gadget_to_editboss
			    =>
			    gadget_to_editboss;

			_ =>    {   msg =  sprintf "Expected Crypt of GADGET_TO_EDITBOSS but got Crypt of { key=>\"%s\", doc=>\"%s\" }  -- gadget_to_editboss::find__gadget_to_editboss called by %s" gadget_to_editboss.key gadget_to_editboss.doc caller;				# "Impossible."
				    log::fatal msg;
				    raise exception FAIL msg;
				};
		    esac;

		NULL =>	{   msg =  sprintf "GADGET_TO_EDITBOSS global not registered with guiboss_imp in time?! -- gadget_to_editboss::find__gadget_to_editboss called by %s" caller;				# "Impossible."
			    log::fatal msg;
			    raise exception FAIL msg;
			};
	    esac;
    };
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## Original code by Jeff Prothero Copyright (c) 2014-2015,
## released per terms of SMLNJ-COPYRIGHT.
