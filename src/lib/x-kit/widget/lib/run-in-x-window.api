## run-in-x-window.api
#

# Compiled by:
#     src/lib/x-kit/widget/xkit-widget.sublib



stipulate
    include package   threadkit;								# threadkit					is from   src/lib/src/lib/thread-kit/src/core-thread-kit/threadkit.pkg
    #
#    package w2x =  windowsystem_to_xserver;							# windowsystem_to_xserver			is from   src/lib/x-kit/xclient/src/window/windowsystem-to-xserver.pkg
#    package r2k =  xevent_router_to_keymap;							# xevent_router_to_keymap			is from   src/lib/x-kit/xclient/src/window/xevent-router-to-keymap.pkg
#    package op  =  xsequencer_to_outbuf;							# xsequencer_to_outbuf				is from   src/lib/x-kit/xclient/src/wire/xsequencer-to-outbuf.pkg
#    package x2s =  xclient_to_sequencer;							# xclient_to_sequencer				is from   src/lib/x-kit/xclient/src/wire/xclient-to-sequencer.pkg
#    package xes =  xevent_sink;								# xevent_sink					is from   src/lib/x-kit/xclient/src/wire/xevent-sink.pkg
#    package xew =  xerror_well;								# xerror_well					is from   src/lib/x-kit/xclient/src/wire/xerror-well.pkg
    package sok =  socket__premicrothread;							# socket__premicrothread			is from   src/lib/std/socket--premicrothread.pkg
#    package dy  =  display;									# display					is from   src/lib/x-kit/xclient/src/wire/display.pkg
#    package xt  =  xtypes;									# xtypes					is from   src/lib/x-kit/xclient/src/wire/xtypes.pkg
    package is  =  internet_socket__premicrothread;						# internet_socket__premicrothread		is from   src/lib/std/src/socket/internet-socket--premicrothread.pkg
    package dns =  dns_host_lookup;								# dns_host_lookup				is from   src/lib/std/src/socket/dns-host-lookup.pkg
    package uds =  unix_domain_socket__premicrothread;						# unix_domain_socket__premicrothread		is from   src/lib/std/src/socket/unix-domain-socket--premicrothread.pkg
herein


    # This api is implemented in:
    #
    #     src/lib/x-kit/widget/lib/run-in-x-window.pkg
    #
    api Run_In_X_Window
    {
	Dummy;

	make_root_window
	  :
	  (Null_Or( String ))									# display_or_null.  
	  ->
	  Void;


	self_check: Void -> Void;								# Temporary; should move into a unit-test package in due course.

# Cannot kick this one in until we have a newworld widget::Root_Window type:
#
#	run_in_x_window_old:  (wg::Root_Window -> Void) -> Void;

    };												# api Xclient_Ximps
end;




##########################################################################
#   The following is support for outline-minor-mode in emacs.		 #
#  ^C @ ^T hides all Text. (Leaves all headings.)			 #
#  ^C @ ^A shows All of file.						 #
#  ^C @ ^Q Quickfolds entire file. (Leaves only top-level headings.)	 #
#  ^C @ ^I shows Immediate children of node.				 #
#  ^C @ ^S Shows all of a node.						 #
#  ^C @ ^D hiDes all of a node.						 #
#  ^HFoutline-mode gives more details.					 #
#  (Or do ^HI and read emacs:outline mode.)				 #
#									 #
# Local variables:							 #
# mode: outline-minor							 #
# outline-regexp: "[{ \t]*\\(fun \\)"			 		 #
# End:									 #
##########################################################################


## COPYRIGHT (c) 1990, 1991 by John H. Reppy.  See SMLNJ-COPYRIGHT file for details.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
