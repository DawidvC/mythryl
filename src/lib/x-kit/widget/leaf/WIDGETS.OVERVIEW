Widgets get used by including them in Guiplans			Guiplan	is from   src/lib/x-kit/widget/gui/guiboss-types.pkg
passed to gui_boss 						gui_boss	is from   src/lib/x-kit/widget/gui/guiboss-imp.pkg
as

    checkbox::with [ ... ]

where the 'with' option list holds callbacks etc.


Widgets are designed to facilitate customization
on three different levels:

 1) By providing 'with' Option entries to make simple
    customizations such as changing body color and
    providing a STATEWATCHER callback to be called
    when a button changes state.

 2) By providing 'with' Option entries to replace the
    core functions of the widget via the options

	REDRAW_FN
	MOUSE_CLICK_FN
	MOUSE_DRAG_FN
	MOUSE_TRANSIT_FN
	KEY_EVENT_FN

    These allow radically rewriting any widget to do
    virtually anything -- a switch can be converted to
    a slider, for example.

 3) By clone-and-mutate on (say) button.pkg.
    The widget packages in this directory are deliberately
    designed to facilitate this process:

     o  Each one is as self-contained as practical, even at the
        cost of a certain amount of code duplication, in order
        to make it easy to read and modify clones of them
	without undesired side-effects on pre-existing widgets.

     o  The widget support code is designed so that custom
	application-specific widgets have exactly the same
	status as the "standard" widgets.  For example there
	are no centralized hardwired widget lists in the code
	which exclude custom widgets from some functionality.


Level 1)'s advantage is convenience: "Simple things should be simple."

Level 3)'s advantage is generality:  "Complex things should be possible."
Any imaginable behavior can be coded up, and new Options
defined to allow appropriate level 1) customization when
the new custom widget it used.

Level 2) provides a midway point between the previous two:
Almost any behavior can be coded up by replacing the core
fns, without bothering to establish a new widget package
and arrange for it to be compiled and exported from some
appropriate library etc, but at the cost of not being able
to define (e.g.) new Options with which to customize it.

