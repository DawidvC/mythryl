## winix-base-data-file-io-driver-for-posix--premicrothread.pkg
#
# Here we implement posix-specific text file I/O support.  
#
# This file gets used in:
#
#        src/lib/std/src/posix/winix-data-file-io-driver-for-posix--premicrothread.pkg
#
# which in turn is used to construct
#
#       src/lib/std/src/posix/winix-data-file-for-posix--premicrothread.pkg
#
# See also:
#
#     src/lib/std/src/io/winix-base-text-file-io-driver-for-posix--premicrothread.pkg
#     src/lib/std/src/io/winix-base-data-file-io-driver-for-posix.pkg
#
# Note: On Linux/unix the main distinction between 'text'
#       and 'binary' file I/O is that the former treats
#       files as streams of Char values, while the latter treats
#       them as streams of eight-bit unsigned integer values.

# Compiled by:
#     src/lib/std/src/standard-core.sublib


package  winix_base_data_file_io_driver_for_posix__premicrothread
    =
    winix_base_file_io_driver_for_posix_g__premicrothread (				# winix_base_file_io_driver_for_posix_g__premicrothread		is from   src/lib/std/src/io/winix-base-file-io-driver-for-posix-g--premicrothread.pkg
	#
	package vector          =    vector_of_one_byte_unts;		#    vector_of_one_byte_unts			is from   src/lib/std/src/vector-of-one-byte-unts.pkg
	package rw_vector       = rw_vector_of_one_byte_unts;		# rw_vector_of_one_byte_unts			is from   src/lib/std/src/rw-vector-of-one-byte-unts.pkg
	package vector_slice    =    vector_slice_of_one_byte_unts;	#    vector_slice_of_one_byte_unts		is from   src/lib/std/src/vector-slice-of-one-byte-unts.pkg
	package rw_vector_slice = rw_vector_slice_of_one_byte_unts;	# rw_vector_slice_of_one_byte_unts		is from   src/lib/std/src/rw-vector-slice-of-one-byte-unts.pkg

	File_Position = file_position::Int;

	some_element = (0u0:  one_byte_unt::Unt);

	compare = file_position_guts::compare;
    );




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
