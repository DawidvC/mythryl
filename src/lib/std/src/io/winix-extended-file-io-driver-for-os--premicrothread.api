## winix-extended-file-io-driver-for-os--premicrothread.api
#
# The core API exported by the
# platform-dependent layer of our file-I/O stack to the
# platform-independent layer is defined in
#
#    src/lib/std/src/io/winix-base-file-io-driver-for-os--premicrothread.api
#
# Here we define a version of that API which is
# extended with platform-specific functions to
# create filereaders and filewriters.
#
# This API was defined for mono-threaded code,
# so threadkit defines a separate version:
#
#     src/lib/std/src/io/winix-extended-file-io-driver-for-os.api

# Compiled by:
#     src/lib/std/src/standard-core.sublib



# This api is implemented in:
#
#     src/lib/std/src/posix/winix-data-file-io-driver-for-posix--premicrothread.pkg
#
# An extended (by addition stdin/stdout/stderr)
# version of this api is implemented in:
#
#     src/lib/std/src/posix/winix-text-file-io-driver-for-posix--premicrothread.pkg

api Winix_Extended_File_Io_Driver_For_Os__Premicrothread {
    #
    package drv:  Winix_Base_File_Io_Driver_For_Os__Premicrothread;				# Winix_Base_File_Io_Driver_For_Os__Premicrothread	is from   src/lib/std/src/io/winix-base-file-io-driver-for-os--premicrothread.api

    File_Descriptor;

    open_for_read:    String -> drv::Filereader;
    open_for_write:   String -> drv::Filewriter;
    open_for_append:  String -> drv::Filewriter;

    make_filereader
        :
        { file_descriptor:	File_Descriptor,
	  filename:		String,
  	  ok_to_block:		Bool
	}
        ->
        drv::Filereader;

    make_filewriter
        :
        { file_descriptor:	File_Descriptor,
	  filename:		String,
	  ok_to_block:		Bool, 
	  #
	  append_mode:		Bool,
	  best_io_quantum:	Int
	}
        ->
        drv::Filewriter;
  };




## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
