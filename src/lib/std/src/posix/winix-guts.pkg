## winix-guts.pkg

# Compiled by:
#     src/lib/std/src/standard-core.sublib


# This package implements the portable
# (cross-platform) OS interface 'Winix__Premicrothread' from
#
#     src/lib/std/src/winix/winix--premicrothread.api
#
# A richer but non-portable POSIX OS interface
# 'Posix' is respectively defined and implemented in 
#
#     src/lib/std/src/psx/posixlib.api
#     src/lib/std/src/psx/posixlib.pkg


# Implements 'winix':
#
#     src/lib/std/winix--premicrothread.pkg

stipulate
    package psx =  posixlib;						# posixlib				is from   src/lib/std/src/psx/posixlib.pkg
herein
    package winix_guts: (weak)  Winix__Premicrothread {			# Winix__Premicrothread			is from   src/lib/std/src/winix/winix--premicrothread.api

									# winix__premicrothread			is from   src/lib/std/src/posix/winix-types.pkg

	include package   winix_types;					# Include type-only package to get types 

	exception RUNTIME_EXCEPTION
	    =
	    runtime::RUNTIME_EXCEPTION;

	error_msg  =  psx::err::error_msg;
	error_name =  psx::err::error_name;
	syserror   =  psx::err::syserror;

	package file	= winix_file;					# winix_file				is from   src/lib/std/src/posix/winix-file.pkg
	package path    = winix_path;					# winix_path				is from   src/lib/std/src/posix/winix-path.pkg
	package process = winix_process__premicrothread;		# winix_process__premicrothread		is from   src/lib/std/src/posix/winix-process--premicrothread.pkg
	package io      = winix_io__premicrothread;			# winix_io__premicrothread		is from   src/lib/std/src/posix/winix-io--premicrothread.pkg
    };
end;


## COPYRIGHT (c) 1995 AT&T Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
