## win32-file-system.api



# Api for hooks to Win32 file system.



api Win32_File_System = 
    api
	type hndl = win32_general::hndl

	my hndlToIOD:  hndl -> winix__premicrothread::io::Iod
	my IODToHndl:  winix__premicrothread::io::Iod -> hndl
	my rebindIOD:  (winix__premicrothread::io::Iod * hndl) -> Void

	my findFirstFile:  String -> (hndl * Null_Or( String ) )
	my findNextFile:  hndl -> (Null_Or( String ) )
	my findClose:  hndl -> Bool

	my setCurrentDirectory:  String -> Bool
	my getCurrentDirectory' : Void -> String
	my createDirectory' : String -> Bool
	my removeDirectory:  String -> Bool

	my FILE_ATTRIBUTE_ARCHIVE:  win32_general::unt
	my FILE_ATTRIBUTE_DIRECTORY:  win32_general::unt
	my FILE_ATTRIBUTE_HIDDEN:  win32_general::unt
	my FILE_ATTRIBUTE_NORMAL:  win32_general::unt
	my FILE_ATTRIBUTE_READONLY:  win32_general::unt
	my FILE_ATTRIBUTE_SYSTEM:  win32_general::unt
	my FILE_ATTRIBUTE_TEMPORARY:  win32_general::unt
   /** future win32 use
	my FILE_ATTRIBUTE_ATOMIC_WRITE:  win32_general::unt
	my FILE_ATTRIBUTE_XACTION_WRITE:  win32_general::unt
   **/

	my getFileAttributes:  String -> Null_Or( win32_general::unt )
	my getFileAttributes' : hndl -> Null_Or( win32_general::unt )

	my isRegularFile:  hndl -> Bool

	my getFullPathName' : String -> String

	my getFileSize:  hndl -> (win32_general::unt * win32_general::unt)
	my getLowFileSize:  hndl -> Null_Or( win32_general::unt )
	my getLowFileSizeByName:  String -> Null_Or( win32_general::unt )

	my getFileTime' : String -> Null_Or( win32_general::system_time )
	my setFileTime' : (String * win32_general::system_time) -> Bool

	my deleteFile:  String -> Bool
	my moveFile:  (String * String) -> Bool

	my getTempFileName' : Void -> Null_Or( String )
    end



## COPYRIGHT (c) 1996 Bell Laboratories.
## Subsequent changes by Jeff Prothero Copyright (c) 2010-2015,
## released per terms of SMLNJ-COPYRIGHT.
