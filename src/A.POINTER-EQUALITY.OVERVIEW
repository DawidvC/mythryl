Officially Mythryl does not have pointer equality.  It breaks the core
semantic model that pure data values are equal if-and-only-if they contain
the same stuff, independent of whether they happen to occupy the same
location in memory.

In practice, however, there are situations where it is a big win in
efficiency to actually just do a bloody pointer-equality test.  So
we cheat.  (We probably should just put a clean, generic pointer-equality
test in pervasive.pkg and be done with it.)

In file

     src/lib/x-kit/xclient/src/window/xserver-ximp.pkg

you may find this example of such cheating:

    fun pen_eq
	( a:  pg::Pen,
	  b:  pg::Pen
	)
	=
	{   ((unsafe::cast a): Int)
	    ==
	    ((unsafe::cast b): Int);
	};

I note that we also have in file

    src/lib/compiler/front/semantic/symbolmapstack/base-types-and-ops.pkg

the entries

    ("ptreql",				hbo::POINTER_EQL,				p1 (arrow (tuple [arg0, arg0], bool))) :-:
    ("ptrneq",				hbo::POINTER_NEQ,				p1 (arrow (tuple [arg0, arg0], bool))) :-:

Sometime I should figure out their role in the system...

 -- CrT 2015-01-01
